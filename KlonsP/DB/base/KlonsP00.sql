/******************************************************************************/
/****       Generated by IBExpert 2015.12.21.1 2017.05.12. 14:53:00        ****/
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES UTF8;

CREATE DATABASE 'C:\A1-docs\c_net\Klons\KlonsP\DB\base\klonsp00.fdb'
USER 'AIVARS' PASSWORD 'parole'
PAGE_SIZE 16384
DEFAULT CHARACTER SET UTF8 COLLATION UNICODE_CI;



/******************************************************************************/
/****                               Domains                                ****/
/******************************************************************************/

CREATE DOMAIN DM_MONEY AS
DECIMAL(15,2);



/******************************************************************************/
/****                              Generators                              ****/
/******************************************************************************/

CREATE GENERATOR GEN_CAT1_ID;
SET GENERATOR GEN_CAT1_ID TO 6;

CREATE GENERATOR GEN_CATD_ID;
SET GENERATOR GEN_CATD_ID TO 7;

CREATE GENERATOR GEN_CATT_ID;
SET GENERATOR GEN_CATT_ID TO 5;

CREATE GENERATOR GEN_DEPARTMENTS_ID;
SET GENERATOR GEN_DEPARTMENTS_ID TO 6;

CREATE GENERATOR GEN_EVENTS_ID;
SET GENERATOR GEN_EVENTS_ID TO 12;

CREATE GENERATOR GEN_ITEMS_EVENTS_ID;
SET GENERATOR GEN_ITEMS_EVENTS_ID TO 0;

CREATE GENERATOR GEN_ITEMS_ID;
SET GENERATOR GEN_ITEMS_ID TO 0;

CREATE GENERATOR GEN_PARAMS_ID;
SET GENERATOR GEN_PARAMS_ID TO 26;

CREATE GENERATOR GEN_PLACES_ID;
SET GENERATOR GEN_PLACES_ID TO 2;

CREATE GENERATOR GEN_TAXDEPRECYEAR_ID;
SET GENERATOR GEN_TAXDEPRECYEAR_ID TO 0;



/******************************************************************************/
/****                          Stored procedures                           ****/
/******************************************************************************/



SET TERM ^ ;

CREATE PROCEDURE SP_GEN_CAT1_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_GEN_CATD_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_GEN_CATT_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_GEN_DEPARTMENTS_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_GEN_EVENTS_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_GEN_ITEMS_EVENTS_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_GEN_ITEMS_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_GEN_PARAMS_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_GEN_PLACES_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_GEN_TAXDEPRECYEAR_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_PARAMS (
    USERNAME VARCHAR(20))
RETURNS (
    ID INTEGER /* TYPE OF COLUMN PARAMS.ID */,
    PNAME VARCHAR(20) /* TYPE OF COLUMN PARAMS.PNAME */,
    PVALUE VARCHAR(100) /* TYPE OF COLUMN PARAMS.PVALUE */,
    USR VARCHAR(15) /* TYPE OF COLUMN PARAMS.USR */)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_SET_USERNAME (
    USERNAME VARCHAR(15))
AS
BEGIN
  EXIT;
END^






SET TERM ; ^



/******************************************************************************/
/****                                Tables                                ****/
/******************************************************************************/



CREATE TABLE CAT1 (
    ID       INTEGER NOT NULL,
    CODE     VARCHAR(20) NOT NULL,
    DESCR    VARCHAR(150),
    KIND     INTEGER DEFAULT 0 NOT NULL,
    IDCD     INTEGER NOT NULL,
    IDCT     INTEGER NOT NULL,
    "GROUP"  INTEGER DEFAULT 0 NOT NULL
);

CREATE TABLE CATD (
    ID     INTEGER NOT NULL,
    CODE   VARCHAR(20) NOT NULL,
    DESCR  VARCHAR(150),
    RATE   FLOAT DEFAULT 0 NOT NULL
);

CREATE TABLE CATT (
    ID      INTEGER NOT NULL,
    CODE    VARCHAR(20) NOT NULL,
    DESCR   VARCHAR(150),
    RATE    FLOAT DEFAULT 0 NOT NULL,
    KIND    INTEGER DEFAULT 0 NOT NULL,
    VALUE0  DM_MONEY DEFAULT 0 NOT NULL
);

CREATE TABLE DEPARTMENTS (
    ID       INTEGER NOT NULL,
    CODE     VARCHAR(20) NOT NULL,
    DESCR    VARCHAR(150),
    "GROUP"  INTEGER DEFAULT 0 NOT NULL
);

CREATE TABLE EVENTS (
    ID     INTEGER NOT NULL,
    CODE   VARCHAR(20) NOT NULL,
    DESCR  VARCHAR(150),
    SNR    INTEGER DEFAULT 0 NOT NULL,
    K1     INTEGER DEFAULT 0 NOT NULL
);

CREATE TABLE ITEMS (
    ID          INTEGER NOT NULL,
    REG_NR      VARCHAR(20) NOT NULL,
    NAME        VARCHAR(150),
    DATE1       DATE,
    DATE2       DATE,
    CAT1        INTEGER NOT NULL,
    CATD        INTEGER NOT NULL,
    CATT        INTEGER NOT NULL,
    PLACE       INTEGER NOT NULL,
    DEPARTMENT  INTEGER NOT NULL,
    VALUE0      DM_MONEY DEFAULT 0 NOT NULL,
    DEPREC      DM_MONEY DEFAULT 0 NOT NULL,
    VALUE_LEFT  DM_MONEY DEFAULT 0 NOT NULL,
    OPT         INTEGER DEFAULT 0 NOT NULL,
    STATE       INTEGER DEFAULT 1 NOT NULL,
    ZDT         TIMESTAMP,
    ZU          VARCHAR(15)
);

CREATE TABLE ITEMS_EVENTS (
    ID            INTEGER NOT NULL,
    IDIT          INTEGER NOT NULL,
    SNR           INTEGER DEFAULT -1 NOT NULL,
    "EVENT"       INTEGER DEFAULT 0 NOT NULL,
    DT            DATE NOT NULL,
    DTREG         DATE NOT NULL,
    DESCR         VARCHAR(200),
    DOCNR         VARCHAR(50),
    CAT1          INTEGER NOT NULL,
    CATD          INTEGER NOT NULL,
    CATT          INTEGER NOT NULL,
    PLACE         INTEGER NOT NULL,
    DEPARTMENT    INTEGER NOT NULL,
    VALUE_0       DM_MONEY DEFAULT 0 NOT NULL,
    DEPREC_0      DM_MONEY DEFAULT 0 NOT NULL,
    VALUE_LEFT    DM_MONEY DEFAULT 0 NOT NULL,
    VALUE_C       DM_MONEY DEFAULT 0 NOT NULL,
    DEPREC_C      DM_MONEY DEFAULT 0 NOT NULL,
    SELL_VALUE    DM_MONEY DEFAULT 0 NOT NULL,
    RATE_D        FLOAT DEFAULT 0 NOT NULL,
    RATE_D_MT     DM_MONEY DEFAULT 0 NOT NULL,
    MT_TOTAL      INTEGER DEFAULT 0 NOT NULL,
    MT_USED       INTEGER DEFAULT 0 NOT NULL,
    TAX_VAL       DM_MONEY DEFAULT 0 NOT NULL,
    TAX_VAL_LEFT  DM_MONEY DEFAULT 0 NOT NULL,
    TAX_VAL_C     DM_MONEY DEFAULT 0 NOT NULL,
    TAX_RATE      FLOAT DEFAULT 0 NOT NULL,
    TAX_EACH      INTEGER DEFAULT 1 NOT NULL,
    CHCOLSET      INTEGER DEFAULT 0 NOT NULL,
    ZDT           TIMESTAMP,
    ZU            VARCHAR(15)
);

CREATE TABLE PARAMS (
    ID      INTEGER NOT NULL,
    PNAME   VARCHAR(20),
    PVALUE  VARCHAR(100),
    USR     VARCHAR(15)
);

CREATE TABLE PLACES (
    ID       INTEGER NOT NULL,
    CODE     VARCHAR(20) NOT NULL,
    DESCR    VARCHAR(150),
    ADDR     VARCHAR(500),
    "GROUP"  INTEGER DEFAULT 0 NOT NULL
);

CREATE TABLE TAXDEPRECYEAR (
    ID          INTEGER NOT NULL,
    YR          INTEGER DEFAULT 0 NOT NULL,
    CATT        INTEGER DEFAULT 0 NOT NULL,
    RATE        FLOAT DEFAULT 0 NOT NULL,
    KIND        INTEGER DEFAULT 0 NOT NULL,
    VALUE0      DM_MONEY DEFAULT 0 NOT NULL,
    VALUE1      DM_MONEY DEFAULT 0 NOT NULL,
    VALUEC      DM_MONEY DEFAULT 0 NOT NULL,
    DEPREC      DM_MONEY DEFAULT 0 NOT NULL,
    "COUNT"     INTEGER DEFAULT 0 NOT NULL,
    VALUE_NEW   DM_MONEY DEFAULT 0 NOT NULL,
    VALUE_ADD   DM_MONEY DEFAULT 0 NOT NULL,
    VALUE_REM   DM_MONEY DEFAULT 0 NOT NULL,
    VALUE_EXCL  DM_MONEY DEFAULT 0 NOT NULL,
    VALUE_COR   DM_MONEY DEFAULT 0 NOT NULL,
    VALUED      DM_MONEY DEFAULT 0 NOT NULL
);

CREATE TABLE TUSERS (
    NM   VARCHAR(15) NOT NULL,
    PSW  VARCHAR(15),
    TP   CHAR(1),
    NR   INTEGER DEFAULT 0 NOT NULL
);

INSERT INTO CATD (ID, CODE, DESCR, RATE) VALUES (1, '0', 'Nav nolietojuma', 0);
INSERT INTO CATD (ID, CODE, DESCR, RATE) VALUES (2, '10 zeme', 'Zeme', 0);
INSERT INTO CATD (ID, CODE, DESCR, RATE) VALUES (3, '20 ēkas', 'Ēkas', 10);
INSERT INTO CATD (ID, CODE, DESCR, RATE) VALUES (4, '30 iek', 'Ražošanas iekārtas', 20);
INSERT INTO CATD (ID, CODE, DESCR, RATE) VALUES (5, '40 dat', 'Datortehnika', 35);
INSERT INTO CATD (ID, CODE, DESCR, RATE) VALUES (6, '50 pār', 'Pārējie', 20);
INSERT INTO CATD (ID, CODE, DESCR, RATE) VALUES (0, '?', 'Nenoteikts', 0);

COMMIT WORK;

INSERT INTO CATT (ID, CODE, DESCR, RATE, KIND, VALUE0) VALUES (1, '0', 'Nav nolietojuma', 0, 0, 0);
INSERT INTO CATT (ID, CODE, DESCR, RATE, KIND, VALUE0) VALUES (2, '1', 'Ēkas', 20, 1, 0);
INSERT INTO CATT (ID, CODE, DESCR, RATE, KIND, VALUE0) VALUES (3, '3', 'Skaitļošanas iekārtas', 70, 0, 0);
INSERT INTO CATT (ID, CODE, DESCR, RATE, KIND, VALUE0) VALUES (4, '4', 'Pārējie', 40, 0, 0);
INSERT INTO CATT (ID, CODE, DESCR, RATE, KIND, VALUE0) VALUES (0, '?', 'Nenoteikts', 0, 0, 0);
INSERT INTO CATT (ID, CODE, DESCR, RATE, KIND, VALUE0) VALUES (5, '4a', 'Vieglās automašīnas', 30, 1, 0);

COMMIT WORK;

INSERT INTO CAT1 (ID, CODE, DESCR, KIND, IDCD, IDCT, "GROUP") VALUES (1, '1 zeme', 'Zeme', 0, 2, 1, 0);
INSERT INTO CAT1 (ID, CODE, DESCR, KIND, IDCD, IDCT, "GROUP") VALUES (2, '2 ekas', 'Ēkas', 0, 3, 2, 1);
INSERT INTO CAT1 (ID, CODE, DESCR, KIND, IDCD, IDCT, "GROUP") VALUES (3, '2 ekas adm', 'Administrācijas ēkas ', 0, 3, 2, 0);
INSERT INTO CAT1 (ID, CODE, DESCR, KIND, IDCD, IDCT, "GROUP") VALUES (4, '3 raz', 'Ražošanas iekārtas', 0, 4, 4, 0);
INSERT INTO CAT1 (ID, CODE, DESCR, KIND, IDCD, IDCT, "GROUP") VALUES (5, '4 par', 'Pārējie', 0, 6, 4, 0);
INSERT INTO CAT1 (ID, CODE, DESCR, KIND, IDCD, IDCT, "GROUP") VALUES (0, '?', 'Nenoteikts', 0, 0, 0, 0);

COMMIT WORK;

INSERT INTO DEPARTMENTS (ID, CODE, DESCR, "GROUP") VALUES (1, 'adm', 'Administrācija', 0);
INSERT INTO DEPARTMENTS (ID, CODE, DESCR, "GROUP") VALUES (0, '?', 'Nenoteikts', 0);

COMMIT WORK;

INSERT INTO EVENTS (ID, CODE, DESCR, SNR, K1) VALUES (2, 'iegeks', 'Iegāde un nodošana ekspluatācijā', 10, 1);
INSERT INTO EVENTS (ID, CODE, DESCR, SNR, K1) VALUES (3, 'ieg', 'Iegāde', 20, 1);
INSERT INTO EVENTS (ID, CODE, DESCR, SNR, K1) VALUES (4, 'izv', 'Izveide', 30, 1);
INSERT INTO EVENTS (ID, CODE, DESCR, SNR, K1) VALUES (5, 'eks', 'Nodošana ekspluatācijā', 40, 1);
INSERT INTO EVENTS (ID, CODE, DESCR, SNR, K1) VALUES (10, 'vieta', 'Pārvietošana', 50, 1);
INSERT INTO EVENTS (ID, CODE, DESCR, SNR, K1) VALUES (20, 'parvert', 'Pārvērtēšana', 60, 1);
INSERT INTO EVENTS (ID, CODE, DESCR, SNR, K1) VALUES (21, 'rekat', 'Kategorijas izmaiņa', 70, 1);
INSERT INTO EVENTS (ID, CODE, DESCR, SNR, K1) VALUES (22, 'kapit', 'Kapitālās izmaksas', 80, 1);
INSERT INTO EVENTS (ID, CODE, DESCR, SNR, K1) VALUES (30, 'nelieto', 'Pārtrauc lietošanu', 90, 1);
INSERT INTO EVENTS (ID, CODE, DESCR, SNR, K1) VALUES (31, 'lieto', 'Atsāk lietošanu', 100, 1);
INSERT INTO EVENTS (ID, CODE, DESCR, SNR, K1) VALUES (40, 'likvid', 'Likvidācija', 110, 1);
INSERT INTO EVENTS (ID, CODE, DESCR, SNR, K1) VALUES (50, 'noliet', 'Nolietojuma aprēķins', 120, 0);
INSERT INTO EVENTS (ID, CODE, DESCR, SNR, K1) VALUES (0, '?', 'Nenoteikts', 0, 1);
INSERT INTO EVENTS (ID, CODE, DESCR, SNR, K1) VALUES (100, 'apr', 'Aprēķins', 130, 0);
INSERT INTO EVENTS (ID, CODE, DESCR, SNR, K1) VALUES (1, 'pienuzsk', 'Pieņemts uzskaitē', 1, 1);

COMMIT WORK;

INSERT INTO PLACES (ID, CODE, DESCR, ADDR, "GROUP") VALUES (1, 'adm', 'Administrācijas birojs', 'Brīvības 1', 0);
INSERT INTO PLACES (ID, CODE, DESCR, ADDR, "GROUP") VALUES (0, '?', 'Nenoteikts', '-', 0);

COMMIT WORK;

INSERT INTO TUSERS (NM, PSW, TP, NR) VALUES ('SYSTEM', NULL, 'A   ', 0);
INSERT INTO TUSERS (NM, PSW, TP, NR) VALUES ('Admin', NULL, 'A   ', 1);

COMMIT WORK;

INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (1, 'version', '001', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (2, 'CompName', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (3, 'CompRegNr', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (4, 'CompRegNrPVN', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (21, 'ShowItemDataPanel', 'false', 'Admin');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (5, 'CompVID', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (6, 'CompAddr', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (7, 'CompAddrInd', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (8, 'CompAddr1', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (9, 'CompAddr2', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (10, 'CompAddr3', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (11, 'CompAddr4', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (12, 'CompAddrG', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (13, 'CompMName', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (14, 'CompMpk', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (15, 'CompPhone', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (16, 'CompAccName', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (17, 'CompAccPh', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (18, 'BankId', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (19, 'BankName', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (20, 'BankAcc', '', 'SYSTEM');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (22, 'ActiveDate', '01.01.0001', 'Admin');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (23, 'ShowItemsFilterPanel', 'false', 'Admin');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (24, 'RSD', '01.01.2016', 'Admin');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (25, 'RED', '31.12.2016', 'Admin');
INSERT INTO PARAMS (ID, PNAME, PVALUE, USR) VALUES (26, 'RYR', '2016', 'Admin');

COMMIT WORK;



/******************************************************************************/
/****                             Primary keys                             ****/
/******************************************************************************/

ALTER TABLE CAT1 ADD CONSTRAINT PK_CAT1 PRIMARY KEY (ID);
ALTER TABLE CATD ADD CONSTRAINT PK_CATD PRIMARY KEY (ID);
ALTER TABLE CATT ADD CONSTRAINT PK_CATT PRIMARY KEY (ID);
ALTER TABLE DEPARTMENTS ADD CONSTRAINT PK_DEPARTMENTS PRIMARY KEY (ID);
ALTER TABLE EVENTS ADD CONSTRAINT PK_EVENTS PRIMARY KEY (ID);
ALTER TABLE ITEMS ADD CONSTRAINT PK_ITEMS PRIMARY KEY (ID);
ALTER TABLE ITEMS_EVENTS ADD CONSTRAINT PK_ITEMS_EVENTS PRIMARY KEY (ID);
ALTER TABLE PARAMS ADD CONSTRAINT PK_PARAMS_ID PRIMARY KEY (ID);
ALTER TABLE PLACES ADD CONSTRAINT PK_PLACES PRIMARY KEY (ID);
ALTER TABLE TAXDEPRECYEAR ADD CONSTRAINT PK_TAXDEPRECYEAR PRIMARY KEY (ID);
ALTER TABLE TUSERS ADD CONSTRAINT PK_TUSERS_NM PRIMARY KEY (NM);


/******************************************************************************/
/****                             Foreign keys                             ****/
/******************************************************************************/

ALTER TABLE CAT1 ADD CONSTRAINT FK_CAT1_IDCD FOREIGN KEY (IDCD) REFERENCES CATD (ID);
ALTER TABLE CAT1 ADD CONSTRAINT FK_CAT1_IDCT FOREIGN KEY (IDCT) REFERENCES CATT (ID);
ALTER TABLE ITEMS ADD CONSTRAINT FK_ITEMS_CAT1 FOREIGN KEY (CAT1) REFERENCES CAT1 (ID);
ALTER TABLE ITEMS ADD CONSTRAINT FK_ITEMS_CATD FOREIGN KEY (CATD) REFERENCES CATD (ID);
ALTER TABLE ITEMS ADD CONSTRAINT FK_ITEMS_CATT FOREIGN KEY (CATT) REFERENCES CATT (ID);
ALTER TABLE ITEMS ADD CONSTRAINT FK_ITEMS_DEPARTMENT FOREIGN KEY (DEPARTMENT) REFERENCES DEPARTMENTS (ID);
ALTER TABLE ITEMS ADD CONSTRAINT FK_ITEMS_PLACE FOREIGN KEY (PLACE) REFERENCES PLACES (ID);
ALTER TABLE ITEMS_EVENTS ADD CONSTRAINT FK_ITEMS_EVENTS_CAT1 FOREIGN KEY (CAT1) REFERENCES CAT1 (ID);
ALTER TABLE ITEMS_EVENTS ADD CONSTRAINT FK_ITEMS_EVENTS_CATD FOREIGN KEY (CATD) REFERENCES CATD (ID);
ALTER TABLE ITEMS_EVENTS ADD CONSTRAINT FK_ITEMS_EVENTS_CATT FOREIGN KEY (CATT) REFERENCES CATT (ID);
ALTER TABLE ITEMS_EVENTS ADD CONSTRAINT FK_ITEMS_EVENTS_DEPARTMENT FOREIGN KEY (DEPARTMENT) REFERENCES DEPARTMENTS (ID);
ALTER TABLE ITEMS_EVENTS ADD CONSTRAINT FK_ITEMS_EVENTS_EVENT FOREIGN KEY ("EVENT") REFERENCES EVENTS (ID);
ALTER TABLE ITEMS_EVENTS ADD CONSTRAINT FK_ITEMS_EVENTS_IDIT FOREIGN KEY (IDIT) REFERENCES ITEMS (ID);
ALTER TABLE ITEMS_EVENTS ADD CONSTRAINT FK_ITEMS_EVENTS_PLACE FOREIGN KEY (PLACE) REFERENCES PLACES (ID);
ALTER TABLE PARAMS ADD CONSTRAINT FK_PARAMS_USR_TUSERS_NM FOREIGN KEY (USR) REFERENCES TUSERS (NM) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TAXDEPRECYEAR ADD CONSTRAINT FK_TAXDEPRECYEAR_CATT FOREIGN KEY (CATT) REFERENCES CATT (ID);


/******************************************************************************/
/****                               Indices                                ****/
/******************************************************************************/

CREATE UNIQUE INDEX CAT1_CODE ON CAT1 (CODE);
CREATE UNIQUE INDEX CATD_CODE ON CATD (CODE);
CREATE UNIQUE INDEX CATT_CODE ON CATT (CODE);
CREATE UNIQUE INDEX DEPARTMENTS_CODE ON DEPARTMENTS (CODE);
CREATE UNIQUE INDEX EVENTS_CODE ON EVENTS (CODE);
CREATE INDEX PARAMS_ID ON PARAMS (ID);
CREATE INDEX PARAMS_PNAME ON PARAMS (PNAME);
CREATE INDEX TUSERSPARAMS ON PARAMS (USR);
CREATE INDEX TAXDEPRECYEAR_CATT ON TAXDEPRECYEAR (CATT);
CREATE UNIQUE INDEX TAXDEPRECYEAR_CATT_YR ON TAXDEPRECYEAR (YR, CATT);
CREATE INDEX TAXDEPRECYEAR_YR ON TAXDEPRECYEAR (YR);


/******************************************************************************/
/****                               Triggers                               ****/
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/****                         Triggers for tables                          ****/
/******************************************************************************/



/* Trigger: CAT1_BI */
CREATE TRIGGER CAT1_BI FOR CAT1
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if ((new.id is null) or (new.id < 0))  then
    new.id = gen_id(gen_cat1_id,1);
end
^

/* Trigger: CATD_BI */
CREATE TRIGGER CATD_BI FOR CATD
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if ((new.id is null) or (new.id < 0)) then
    new.id = gen_id(gen_catd_id,1);
end
^

/* Trigger: CATT_BI */
CREATE TRIGGER CATT_BI FOR CATT
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if ((new.id is null) or (new.id < 0))  then
    new.id = gen_id(gen_catt_id,1);
end
^

/* Trigger: DEPARTMENTS_BI */
CREATE TRIGGER DEPARTMENTS_BI FOR DEPARTMENTS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if ((new.id is null) or (new.id < 0))  then
    new.id = gen_id(gen_DEPARTMENTS_id,1);
end
^

/* Trigger: EVENTS_BI */
CREATE TRIGGER EVENTS_BI FOR EVENTS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if ((new.id is null) or (new.id < 0))  then
    new.id = gen_id(gen_events_id,1);
end
^

/* Trigger: ITEMS_BI */
CREATE TRIGGER ITEMS_BI FOR ITEMS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if ((new.id is null) or (new.id < 0))  then
    new.id = gen_id(gen_items_id,1);
end
^

/* Trigger: ITEMS_EVENTS_BI */
CREATE TRIGGER ITEMS_EVENTS_BI FOR ITEMS_EVENTS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if ((new.id is null) or (new.id < 0))  then
    new.id = gen_id(gen_items_events_id,1);
end
^

/* Trigger: PARAMS_BI */
CREATE TRIGGER PARAMS_BI FOR PARAMS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if ((new.id is null) or (new.id < 0))  then
    new.id = gen_id(gen_params_id,1);
end
^

/* Trigger: PLACES_BI */
CREATE TRIGGER PLACES_BI FOR PLACES
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if ((new.id is null) or (new.id < 0))  then
    new.id = gen_id(gen_places_id,1);
end
^

/* Trigger: TAXDEPRECYEAR_BI */
CREATE TRIGGER TAXDEPRECYEAR_BI FOR TAXDEPRECYEAR
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if ((new.id is null) or (new.id < 0))  then
    new.id = gen_id(gen_taxdeprecyear_id,1);
end
^
SET TERM ; ^



/******************************************************************************/
/****                          Stored procedures                           ****/
/******************************************************************************/



SET TERM ^ ;

ALTER PROCEDURE SP_GEN_CAT1_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_cat1_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_CATD_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_catd_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_CATT_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_catt_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_DEPARTMENTS_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_departments_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_EVENTS_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_events_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_ITEMS_EVENTS_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_items_events_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_ITEMS_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_items_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_PARAMS_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_params_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_PLACES_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_places_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_TAXDEPRECYEAR_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_taxdeprecyear_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_PARAMS (
    USERNAME VARCHAR(20))
RETURNS (
    ID TYPE OF COLUMN PARAMS.ID,
    PNAME TYPE OF COLUMN PARAMS.PNAME,
    PVALUE TYPE OF COLUMN PARAMS.PVALUE,
    USR TYPE OF COLUMN PARAMS.USR)
AS
begin
    FOR SELECT id, pname, pvalue, usr
    FROM params
    WHERE Params.Usr = 'SYSTEM' OR Params.Usr = :username
    ORDER BY Params.PName
    INTO :id, :pname, :pvalue, :usr
    do
    begin
        suspend;
    end
end^


ALTER PROCEDURE SP_SET_USERNAME (
    USERNAME VARCHAR(15))
AS
begin
    rdb$set_context('USER_SESSION', 'UserName', :username);
end^



SET TERM ; ^



/******************************************************************************/
/****                              Privileges                              ****/
/******************************************************************************/


/* Privileges of users */
GRANT ALL ON CAT1 TO AIVARS WITH GRANT OPTION;
GRANT ALL ON CATD TO AIVARS WITH GRANT OPTION;
GRANT ALL ON CATT TO AIVARS WITH GRANT OPTION;
GRANT ALL ON DEPARTMENTS TO AIVARS WITH GRANT OPTION;
GRANT ALL ON EVENTS TO AIVARS WITH GRANT OPTION;
GRANT ALL ON ITEMS TO AIVARS WITH GRANT OPTION;
GRANT ALL ON ITEMS_EVENTS TO AIVARS WITH GRANT OPTION;
GRANT ALL ON PARAMS TO AIVARS WITH GRANT OPTION;
GRANT ALL ON PLACES TO AIVARS WITH GRANT OPTION;
GRANT ALL ON TAXDEPRECYEAR TO AIVARS WITH GRANT OPTION;
GRANT ALL ON TUSERS TO AIVARS WITH GRANT OPTION;
GRANT EXECUTE ON PROCEDURE SP_GEN_CAT1_ID TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_GEN_CATD_ID TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_GEN_CATT_ID TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_GEN_DEPARTMENTS_ID TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_GEN_EVENTS_ID TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_GEN_ITEMS_EVENTS_ID TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_GEN_ITEMS_ID TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_GEN_PARAMS_ID TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_GEN_PLACES_ID TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_GEN_TAXDEPRECYEAR_ID TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_PARAMS TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_SET_USERNAME TO AIVARS;
