
CREATE GLOBAL TEMPORARY TABLE TTEMP_DIFF2 (
    IDL1 INTEGER,
    IDL2 INTEGER,
    DOCID INTEGER,
    ROWID INTEGER)
 ON COMMIT DELETE ROWS;

ALTER TABLE LOPS
  ADD ODT TIMESTAMP;

ALTER TABLE LOPSD
  ADD ODT TIMESTAMP;


SET TERM ^ ;

CREATE PROCEDURE SP_DIFF_01(
  PDOCID INTEGER)
RETURNS (
  IDL TYPE OF COLUMN LOPSD.IDL,
  ID TYPE OF COLUMN LOPSD.ID,
  ZDT TYPE OF COLUMN LOPSD.ZDT,
  DTLD TYPE OF COLUMN LOPSD.DTLD,
  ODT TYPE OF COLUMN LOPSD.ODT,
  USL TYPE OF COLUMN LOPSD.USL,
  DETE TYPE OF COLUMN LOPSD.DETE,
  NRX TYPE OF COLUMN LOPSD.NRX,
  ZNR TYPE OF COLUMN LOPSD.ZNR,
  DOCTYP TYPE OF COLUMN LOPSD.DOCTYP,
  DOCST TYPE OF COLUMN LOPSD.DOCST,
  DOCNR TYPE OF COLUMN LOPSD.DOCNR,
  CLID TYPE OF COLUMN LOPSD.CLID,
  CLID2 TYPE OF COLUMN LOPSD.CLID2,
  DESCR TYPE OF COLUMN LOPSD.DESCR,
  SUMM TYPE OF COLUMN LOPSD.SUMM,
  PVN TYPE OF COLUMN LOPSD.PVN,
  ZU TYPE OF COLUMN LOPSD.ZU,
  TPL INTEGER)
AS
begin
  for select *
  from
  (
    select
        idl, id, zdt, dtld, odt, usl, dete, nrx, znr,
        doctyp, docst, docnr, clid, clid2, descr,
        summ, pvn, zu, 1 as tpl
    from lopsd
    where id = :pdocid

    union all

    select
        -9999999 as idl, id, null as zdt, null as dtld,
        zdt as odt, null as usl, dete, nrx, znr,
        doctyp, docst, docnr, clid, clid2, descr,
        summ, pvn, zu, 2 as tpl
    from opsd
    where id = :pdocid

  )
  into
    :idl, :id, :zdt, :dtld, :odt, :usl, :dete, :nrx, :znr,
    :doctyp, :docst, :docnr, :clid, :clid2, :descr,
    :summ, :pvn, :zu, :tpl
  do
    suspend;
end
^

CREATE PROCEDURE SP_DIFF_02(
  PDOCID INTEGER)
RETURNS (
  IDL TYPE OF COLUMN LOPS.IDL,
  DOCID TYPE OF COLUMN LOPS.DOCID,
  ID TYPE OF COLUMN LOPS.ID,
  DTL TYPE OF COLUMN LOPS.DTL,
  DTLD TYPE OF COLUMN LOPS.DTLD,
  ODT TYPE OF COLUMN LOPS.ODT,
  USL TYPE OF COLUMN LOPS.USL,
  AC11 TYPE OF COLUMN LOPS.AC11,
  AC12 TYPE OF COLUMN LOPS.AC12,
  AC13 TYPE OF COLUMN LOPS.AC13,
  AC14 TYPE OF COLUMN LOPS.AC14,
  AC15 TYPE OF COLUMN LOPS.AC15,
  AC21 TYPE OF COLUMN LOPS.AC21,
  AC22 TYPE OF COLUMN LOPS.AC22,
  AC23 TYPE OF COLUMN LOPS.AC23,
  AC24 TYPE OF COLUMN LOPS.AC24,
  AC25 TYPE OF COLUMN LOPS.AC25,
  SUMMC TYPE OF COLUMN LOPS.SUMMC,
  CUR TYPE OF COLUMN LOPS.CUR,
  SUMM TYPE OF COLUMN LOPS.SUMM,
  QV TYPE OF COLUMN LOPS.QV,
  TPL INTEGER)
AS
begin
  for select *
  from
  (
    select
        idl, docid, id, dtl, dtld, odt, usl,
        ac11, ac12, ac13, ac14, ac15,
        ac21, ac22, ac23, ac24, ac25,
        summc, cur, summ, qv, 1 as tpl
    from lops
    where docid = :pdocid

    union all

    select
        -9999999 + id as idl, docid, id, null as dtl,
        null as dtld, zdt as odt, null as usl,
        ac11, ac12, ac13, ac14, ac15,
        ac21, ac22, ac23, ac24, ac25,
        summc, cur, summ, qv, 2 as tpl
    from ops
    where docid = :pdocid

  )
  into
    :idl, :docid, :id, :dtl, :dtld, :odt, :usl,
    :ac11, :ac12, :ac13, :ac14, :ac15,
    :ac21, :ac22, :ac23, :ac24, :ac25,
    :summc, :cur, :summ, :qv, :tpl
  do
    suspend;
end
^

CREATE PROCEDURE SP_DIFF_11(
  PDATE1 DATE,
  PDATE2 DATE,
  PDATE3 DATE,
  PCLID VARCHAR(15),
  PAC1 VARCHAR(8),
  PAC2 VARCHAR(8),
  PAC3 VARCHAR(5),
  PAC4 VARCHAR(8),
  PAC5 VARCHAR(5))
RETURNS (
  IDL1 TYPE OF COLUMN LOPSD.IDL,
  IDL2 TYPE OF COLUMN LOPS.IDL,
  DOCID TYPE OF COLUMN LOPSD.ID,
  ROWID TYPE OF COLUMN LOPS.ID,
  CLID TYPE OF COLUMN OPSD.CLID,
  AC11 TYPE OF COLUMN OPS.AC11,
  AC12 TYPE OF COLUMN OPS.AC12,
  AC13 TYPE OF COLUMN OPS.AC13,
  AC14 TYPE OF COLUMN OPS.AC14,
  AC15 TYPE OF COLUMN OPS.AC15,
  AC21 TYPE OF COLUMN OPS.AC21,
  AC22 TYPE OF COLUMN OPS.AC22,
  AC23 TYPE OF COLUMN OPS.AC23,
  AC24 TYPE OF COLUMN OPS.AC24,
  AC25 TYPE OF COLUMN OPS.AC25)
AS
begin
    for select
        T3.idl as idl1,
        T4.idl as idl2,
        T3.id as docid,
        T4.id as rowid,
        T3.clid,
        T4.ac11, T4.ac12, T4.ac13, T4.ac14, T4.ac15,
        T4.ac21, T4.ac22, T4.ac23, T4.ac24, T4.ac25
    from
    (
        select T1.idl, T1.id, T1.clid
        from lopsd as T1
        where
            T1.dete between :pdate1 and :pdate2 and
            T1.odt < :pdate3 and
            not exists (
                select idl
                from lopsd as T2
                where
                    T2.id = T1.id and
                    T2.odt < :pdate3 and
                    (T2.odt > T1.odt or
                    T2.odt = T1.odt and
                    T2.idl > T1.idl)
            )
        ) as T3
        join lops as T4
        on T3.id = T4.docid and
            T4.odt < :pdate3 and
            not exists (
                select idl
                from lops as T5
                where
                    T5.id = T4.id and
                    T5.odt < :pdate3 and
                    (T5.odt > T4.odt or
                    T5.odt = T4.odt and
                    T5.idl > T4.idl)
                    
            )

    into
        :idl1, :idl2, :docid, :rowid, :clid,
        :ac11, :ac12, :ac13, :ac14, :ac15,
        :ac21, :ac22, :ac23, :ac24, :ac25
    do
    suspend;
end
^

CREATE PROCEDURE SP_DIFF_12(
  PDATE1 DATE,
  PDATE2 DATE,
  PDATE3 DATE,
  PCLID VARCHAR(15),
  PAC1 VARCHAR(8),
  PAC2 VARCHAR(8),
  PAC3 VARCHAR(5),
  PAC4 VARCHAR(8),
  PAC5 VARCHAR(5))
RETURNS (
  TP INTEGER,
  DOCID TYPE OF COLUMN OPS.DOCID,
  ROWID TYPE OF COLUMN OPS.ID,
  DOCDTL TIMESTAMP,
  DOCDTLD TIMESTAMP,
  DOCODT TIMESTAMP,
  ROWDTL TIMESTAMP,
  ROWDTLD TIMESTAMP,
  ROWODT TIMESTAMP,
  DETE TYPE OF COLUMN OPSD.DETE,
  ZNR TYPE OF COLUMN OPSD.ZNR,
  NRX TYPE OF COLUMN OPSD.NRX,
  DOCTYP TYPE OF COLUMN OPSD.DOCTYP,
  DOCST TYPE OF COLUMN OPSD.DOCST,
  DOCNR TYPE OF COLUMN OPSD.DOCNR,
  DOCTYP2 TYPE OF COLUMN DOCTYP.ID1,
  CLID TYPE OF COLUMN OPSD.CLID,
  CLID2 TYPE OF COLUMN OPSD.CLID2,
  DESCR TYPE OF COLUMN OPSD.DESCR,
  DOCSUMM TYPE OF COLUMN OPSD.SUMM,
  DOCPVN TYPE OF COLUMN OPSD.PVN,
  AC11 TYPE OF COLUMN OPS.AC11,
  AC12 TYPE OF COLUMN OPS.AC12,
  AC13 TYPE OF COLUMN OPS.AC13,
  AC14 TYPE OF COLUMN OPS.AC14,
  AC15 TYPE OF COLUMN OPS.AC15,
  AC21 TYPE OF COLUMN OPS.AC21,
  AC22 TYPE OF COLUMN OPS.AC22,
  AC23 TYPE OF COLUMN OPS.AC23,
  AC24 TYPE OF COLUMN OPS.AC24,
  AC25 TYPE OF COLUMN OPS.AC25,
  SUMMC TYPE OF COLUMN OPS.SUMMC,
  CUR TYPE OF COLUMN OPS.CUR,
  SUMM TYPE OF COLUMN OPS.SUMM,
  QV TYPE OF COLUMN OPS.QV,
  DESCR2 TYPE OF COLUMN OPS.DESCR)
AS
begin

    insert into
    ttemp_diff2(idl1, idl2, docid, rowid)
    select distinct idl1, idl2, docid, rowid
    from sp_diff_11(:pdate1, :pdate2, :pdate3, :pclid,
            :pac1, :ac21, :pac3, :pac4, :pac5) as T1
    where exists (
        select idl
        from lopsd
        where
            T1.docid = lopsd.id and
            lopsd.dtld > :pdate3

        union all

        select idl
        from lops
        where
            T1.rowid = lops.id and
            lops.dtld > :pdate3

        union all

        select id
        from opsd
        where
            T1.docid = opsd.id and
            opsd.zdt > :pdate3

        union all

        select id
        from ops
        where
            T1.rowid = ops.id and
            ops.zdt > :pdate3
    );

    for select distinct *
    from
    (
        select
            1 as tp,
            lops.docid, lops.id as rowid,
            lopsd.zdt as docdtl, lopsd.dtld as docdtld, lopsd.odt as docodt,
            lops.dtl as rowdtl, lops.dtld as rowdtld, lops.odt as rowodt,
            lopsd.dete, lopsd.znr, lopsd.nrx,
            lopsd.doctyp, lopsd.docst, lopsd.docnr,
            lopsd.clid, lopsd.clid2, lopsd.descr, 
            lopsd.summ as docsumm, lopsd.pvn as docpvn, 
            lops.ac11,  lops.ac12, lops.ac13, lops.ac14, lops.ac15,
            lops.ac21,  lops.ac22, lops.ac23, lops.ac24, lops.ac25,
            lops.summc, lops.cur, lops.summ, lops.qv, null as descr2
    
        from ttemp_diff2 as T1
        join lopsd on T1.idl1 = lopsd.idl
        join lops on T1.idl2 = lops.idl
        where
            (:pclid is null or :pclid = lopsd.clid) and
            (:pac1 is null or :pac1 = lops.ac11 or :pac1 = lops.ac21) and
            (:pac2 is null or :pac2 = lops.ac12 or :pac2 = lops.ac22) and
            (:pac3 is null or :pac3 = lops.ac13 or :pac3 = lops.ac23) and
            (:pac4 is null or :pac4 = lops.ac14 or :pac4 = lops.ac24) and
            (:pac5 is null or :pac5 = lops.ac15 or :pac5 = lops.ac25)


    union all

        select
            2 as tp,
            ops.docid, ops.id as rowid,
            null as docdtl, null as docdtld, opsd.zdt as docodt,
            null as rowdtl, null as rowdtld, ops.zdt as rowodt,
            opsd.dete, opsd.znr, opsd.nrx,
            opsd.doctyp, opsd.docst, opsd.docnr,
            opsd.clid, opsd.clid2, opsd.descr,
            opsd.summ as docsumm, opsd.pvn as docpvn,
            ops.ac11,  ops.ac12, ops.ac13, ops.ac14, ops.ac15,
            ops.ac21,  ops.ac22, ops.ac23, ops.ac24, ops.ac25,
            ops.summc, ops.cur, ops.summ, ops.qv, ops.descr as descr2
    
        from ttemp_diff2 as T1
        join lopsd on T1.idl1 = lopsd.idl
        join lops on T1.idl2 = lops.idl
        join ops on T1.rowid = ops.id
        join opsd on ops.docid = opsd.id
        where
            (:pclid is null or :pclid = lopsd.clid) and
            (:pac1 is null or :pac1 = lops.ac11 or :pac1 = lops.ac21) and
            (:pac2 is null or :pac2 = lops.ac12 or :pac2 = lops.ac22) and
            (:pac3 is null or :pac3 = lops.ac13 or :pac3 = lops.ac23) and
            (:pac4 is null or :pac4 = lops.ac14 or :pac4 = lops.ac24) and
            (:pac5 is null or :pac5 = lops.ac15 or :pac5 = lops.ac25)

    union all

        select
            1 as tp,
            lops.docid, lops.id as rowid,
            lopsd.zdt as docdtl, lopsd.dtld as docdtld, lopsd.odt as docodt,
            lops.dtl as rowdtl, lops.dtld as rowdtld, lops.odt as rowodt,
            lopsd.dete, lopsd.znr, lopsd.nrx,
            lopsd.doctyp, lopsd.docst, lopsd.docnr,
            lopsd.clid, lopsd.clid2, lopsd.descr, 
            lopsd.summ as docsumm, lopsd.pvn as docpvn, 
            lops.ac11,  lops.ac12, lops.ac13, lops.ac14, lops.ac15,
            lops.ac21,  lops.ac22, lops.ac23, lops.ac24, lops.ac25,
            lops.summc, lops.cur, lops.summ, lops.qv, null as descr2

        from ttemp_diff2 as T1
        join lopsd on T1.idl1 = lopsd.idl
        join lops on T1.idl2 = lops.idl
        join ops on T1.rowid = ops.id
        join opsd on ops.docid = opsd.id
        where
            not (
                (:pclid is null or :pclid = lopsd.clid) and
                (:pac1 is null or :pac1 = lops.ac11 or :pac1 = lops.ac21) and
                (:pac2 is null or :pac2 = lops.ac12 or :pac2 = lops.ac22) and
                (:pac3 is null or :pac3 = lops.ac13 or :pac3 = lops.ac23) and
                (:pac4 is null or :pac4 = lops.ac14 or :pac4 = lops.ac24) and
                (:pac5 is null or :pac5 = lops.ac15 or :pac5 = lops.ac25)
            ) and (
                (:pclid is null or :pclid = opsd.clid) and
                (:pac1 is null or :pac1 = ops.ac11 or :pac1 = ops.ac21) and
                (:pac2 is null or :pac2 = ops.ac12 or :pac2 = ops.ac22) and
                (:pac3 is null or :pac3 = ops.ac13 or :pac3 = ops.ac23) and
                (:pac4 is null or :pac4 = ops.ac14 or :pac4 = ops.ac24) and
                (:pac5 is null or :pac5 = ops.ac15 or :pac5 = ops.ac25)
            )


    union all

        select
            2 as tp,
            ops.docid, ops.id as rowid,
            null as docdtl, null as docdtld, opsd.zdt as docodt,
            null as rowdtl, null as rowdtld, ops.zdt as rowodt,
            opsd.dete, opsd.znr, opsd.nrx,
            opsd.doctyp, opsd.docst, opsd.docnr,
            opsd.clid, opsd.clid2, opsd.descr,
            opsd.summ as docsumm, opsd.pvn as docpvn,
            ops.ac11,  ops.ac12, ops.ac13, ops.ac14, ops.ac15,
            ops.ac21,  ops.ac22, ops.ac23, ops.ac24, ops.ac25,
            ops.summc, ops.cur, ops.summ, ops.qv, ops.descr as descr2
    
        from ttemp_diff2 as T1
        join lopsd on T1.idl1 = lopsd.idl
        join lops on T1.idl2 = lops.idl
        join ops on T1.rowid = ops.id
        join opsd on ops.docid = opsd.id
        where
            not (
                (:pclid is null or :pclid = lopsd.clid) and
                (:pac1 is null or :pac1 = lops.ac11 or :pac1 = lops.ac21) and
                (:pac2 is null or :pac2 = lops.ac12 or :pac2 = lops.ac22) and
                (:pac3 is null or :pac3 = lops.ac13 or :pac3 = lops.ac23) and
                (:pac4 is null or :pac4 = lops.ac14 or :pac4 = lops.ac24) and
                (:pac5 is null or :pac5 = lops.ac15 or :pac5 = lops.ac25)
            ) and (
                (:pclid is null or :pclid = opsd.clid) and
                (:pac1 is null or :pac1 = ops.ac11 or :pac1 = ops.ac21) and
                (:pac2 is null or :pac2 = ops.ac12 or :pac2 = ops.ac22) and
                (:pac3 is null or :pac3 = ops.ac13 or :pac3 = ops.ac23) and
                (:pac4 is null or :pac4 = ops.ac14 or :pac4 = ops.ac24) and
                (:pac5 is null or :pac5 = ops.ac15 or :pac5 = ops.ac25)
            )

    union all

        select
            3 as tp,
            ops.docid, ops.id as rowid,
            null as docdtl, null as docdtld, opsd.zdt as docodt,
            null as rowdtl, null as rowdtld, ops.zdt as rowodt,
            opsd.dete, opsd.znr, opsd.nrx,
            opsd.doctyp, opsd.docst, opsd.docnr,
            opsd.clid, opsd.clid2, opsd.descr,
            opsd.summ as docsumm, opsd.pvn as docpvn,
            ops.ac11,  ops.ac12, ops.ac13, ops.ac14, ops.ac15,
            ops.ac21,  ops.ac22, ops.ac23, ops.ac24, ops.ac25,
            ops.summc, ops.cur, ops.summ, ops.qv, ops.descr as descr2
    
        from
            opsd join ops
            on
                ops.docid = opsd.id and
                opsd.dete between :pdate1 and :pdate2 and
                opsd.zdt > :pdate3
            left join ttemp_diff2 as T1
            on ops.id = T1.rowid
        where
            T1.idl1 is null and
            (:pclid is null or :pclid = opsd.clid) and
            (:pac1 is null or :pac1 = ops.ac11 or :pac1 = ops.ac21) and
            (:pac2 is null or :pac2 = ops.ac12 or :pac2 = ops.ac22) and
            (:pac3 is null or :pac3 = ops.ac13 or :pac3 = ops.ac23) and
            (:pac4 is null or :pac4 = ops.ac14 or :pac4 = ops.ac24) and
            (:pac5 is null or :pac5 = ops.ac15 or :pac5 = ops.ac25)

    )
    order by docid, rowid, tp, iif(rowodt > docodt, docodt, rowodt)
    into
        :tp, :docid, :rowid,
        :docdtl, :docdtld, :docodt,
        :rowdtl, :rowdtld, :rowodt,
        :dete, :znr, :nrx, 
        :doctyp, :docst, :docnr,
        :clid, :clid2, :descr, 
        :docsumm, :docpvn,
        :ac11, :ac12, :ac13, :ac14, :ac15, 
        :ac21, :ac22, :ac23, :ac24, :ac25,
        :summc, :cur, :summ, :qv, :descr2

    do
    suspend;
end
^

CREATE PROCEDURE SP_FIXLOPSODT
AS
declare variable vidl integer;
declare variable viddoc integer;
declare variable vidrow integer;
declare variable vpid integer;
declare variable vdt timestamp;
declare variable vdt2 timestamp;
declare variable vpdt timestamp;
declare variable vodt timestamp;
begin
    vpid = null;
    vpdt = null;

    for select idl, id, docid, adt, odt
    from
    (
        select idl, id, docid, iif(dtld is null, dtl, dtld) as adt, odt
        from lops
    ) as T1
    order by id, adt
    into :vidl, :vidrow, :viddoc, :vdt, :vodt
    do
    begin
        if (vpid is null or vpid <> vidrow) then begin

            vpid = vidrow;
            vpdt = vdt;

            if (vodt is null) then begin

                vdt2 = null;

                select min(iif(dtld is null, zdt, dtld))
                from lopsd
                where id = :viddoc
                into :vdt2;

                if (vdt2 is not null) then begin

                    select first 1 dete
                    from lopsd
                    where id = :viddoc and :vdt2 = (iif(dtld is null, zdt, dtld))
                    order by idl
                    into :vdt2;

               end else begin

                    select dete
                    from opsd
                    where opsd.id = :viddoc
                    into :vdt2;

               end

               update lops set odt = :vdt2 where idl = :vidl;

            end
        end else begin

            if (:vpdt is not null) then begin
               update lops set odt = :vpdt where idl = :vidl;
            end

            vpdt = vdt;

        end
    end

    vpid = null;
    vpdt = null;

    for select idl, id, adt, dete, odt
    from
    (
        select idl, id, iif(dtld is null, zdt, dtld) as adt, dete, odt
        from lopsd
    ) as T1
    order by id, adt
    into :vidl, :viddoc, :vdt, :vdt2, :vodt
    do
    begin
        if (vpid is null or vpid <> viddoc) then begin

            vpid = viddoc;
            vpdt = vdt;

            if (vodt is null) then begin

               vdt = vdt2;
               update lopsd set odt = :vdt2 where idl = :vidl;

            end

        end else begin

            if (:vpdt is not null) then begin
               update lopsd set odt = :vpdt where idl = :vidl;
            end

            vpdt = vdt;

        end
    end


end
^

CREATE PROCEDURE SP_FIXOPSDATES
AS
declare variable vid integer;
declare variable vzdt timestamp;
begin
    for select ops.id, opsd.zdt
    from ops join opsd
    on ops.docid = opsd.id and ops.zdt is null
    into :vid, :vzdt
    do
    begin
        update ops
        set ops.zdt = :vzdt
        where ops.id = :vid and ops.zdt is null;
    end
end
^

ALTER PROCEDURE SP_OPS_DELETE_LOG(
  ID INTEGER,
  USR VARCHAR(15),
  ORIGINAL_DOCID INTEGER,
  ORIGINAL_AC11 VARCHAR(8),
  ORIGINAL_AC12 VARCHAR(8),
  ORIGINAL_AC13 VARCHAR(5),
  ORIGINAL_AC14 VARCHAR(8),
  ORIGINAL_AC15 VARCHAR(5),
  ORIGINAL_AC21 VARCHAR(8),
  ORIGINAL_AC22 VARCHAR(8),
  ORIGINAL_AC23 VARCHAR(5),
  ORIGINAL_AC24 VARCHAR(8),
  ORIGINAL_AC25 VARCHAR(5),
  ORIGINAL_SUMMC NUMERIC(15,4),
  ORIGINAL_CUR VARCHAR(3),
  ORIGINAL_SUMM NUMERIC(15,4),
  ORIGINAL_QV FLOAT,
  ORIGINAL_ZDT TIMESTAMP)
AS
DECLARE idl INT;
    DECLARE now timestamp;
    DECLARE xdt timestamp;
BEGIN
    now = localtimestamp(0);
    xdt = dateadd(-1 hour to now);

    IF (:Original_ZDt IS NULL OR :Original_ZDt < xdt)
    THEN BEGIN
        INSERT INTO LOPS 
            (dtl, dtld, usl, id, DocId,
            AC11, AC12, AC13, AC14, AC15,
            AC21, AC22, AC23, AC24, AC25,
            SummC, Cur, Summ, QV, ODT)
        VALUES 
        (
            :now,
            :now,
            :Usr,
            :id,
            :Original_DocId, 
            :Original_AC11,
            :Original_AC12, 
            :Original_AC13, 
            :Original_AC14, 
            :Original_AC15, 
            :Original_AC21, 
            :Original_AC22, 
            :Original_AC23, 
            :Original_AC24, 
            :Original_AC25, 
            :Original_SummC, 
            :Original_Cur, 
            :Original_Summ, 
            :Original_QV,
            :ORIGINAL_ZDT
        );
    END
    ELSE BEGIN

        UPDATE LOPS
        SET 
            dtld = :now
        WHERE LOPS.id = :id;

    END
END
^

ALTER PROCEDURE SP_OPS_UPDATE_LOG(
  ID INTEGER,
  USR VARCHAR(15),
  ORIGINAL_DOCID INTEGER,
  ORIGINAL_AC11 VARCHAR(8),
  ORIGINAL_AC12 VARCHAR(8),
  ORIGINAL_AC13 VARCHAR(5),
  ORIGINAL_AC14 VARCHAR(8),
  ORIGINAL_AC15 VARCHAR(5),
  ORIGINAL_AC21 VARCHAR(8),
  ORIGINAL_AC22 VARCHAR(8),
  ORIGINAL_AC23 VARCHAR(5),
  ORIGINAL_AC24 VARCHAR(8),
  ORIGINAL_AC25 VARCHAR(5),
  ORIGINAL_SUMMC NUMERIC(15,4),
  ORIGINAL_CUR VARCHAR(3),
  ORIGINAL_SUMM NUMERIC(15,4),
  ORIGINAL_QV FLOAT,
  ORIGINAL_ZDT TIMESTAMP)
AS
declare variable IDL integer;
    declare variable NOW timestamp;
    declare variable XDT timestamp;
BEGIN
    now = localtimestamp(0);
    xdt = dateadd(-1 hour to now);

    IF (:Original_ZDt IS NULL OR :Original_ZDt < xdt)
    THEN BEGIN
        INSERT INTO LOPS 
            (dtl, usl, id, DocId,
            AC11, AC12, AC13, AC14, AC15,
            AC21, AC22, AC23, AC24, AC25,
            SummC, Cur, Summ, QV, ODT)
        VALUES 
        (
            :now,
            :Usr,
            :id,
            :Original_DocId, 
            :Original_AC11,
            :Original_AC12, 
            :Original_AC13, 
            :Original_AC14, 
            :Original_AC15, 
            :Original_AC21, 
            :Original_AC22, 
            :Original_AC23, 
            :Original_AC24, 
            :Original_AC25, 
            :Original_SummC, 
            :Original_Cur, 
            :Original_Summ, 
            :Original_QV,
            :ORIGINAL_ZDT
        );
    END
END
^

ALTER PROCEDURE SP_OPSD_DELETE_LOG(
  ID INTEGER,
  USR VARCHAR(15),
  ORIGINAL_DATE DATE,
  ORIGINAL_NRX VARCHAR(5),
  ORIGINAL_DOCTYP VARCHAR(10),
  ORIGINAL_DOCST VARCHAR(6),
  ORIGINAL_DOCNR VARCHAR(15),
  ORIGINAL_CLID VARCHAR(15),
  ORIGINAL_CLID2 VARCHAR(15),
  ORIGINAL_DESCR VARCHAR(80),
  ORIGINAL_SUMM NUMERIC(15,4),
  ORIGINAL_PVN NUMERIC(15,4),
  ORIGINAL_ZNR INTEGER,
  ORIGINAL_ZDT TIMESTAMP)
AS
declare variable IDL integer;
    declare variable NOW timestamp;
    declare variable XDT timestamp;
begin
    now = current_timestamp(0);
    xdt = dateadd(-1 hour to now);

    IF (:Original_ZDt IS NULL OR :Original_ZDt < xdt)
    THEN BEGIN

        INSERT INTO LOPSD
            (id, ZDt, dtld, ZU, DETE, NrX,
            DocTyp, DocSt, DocNr,
            ClId, ClId2, Descr, Summ, PVN, ZNR, ODT)
        VALUES (
            :id,
            :now,
            :now,
            :Usr,
            :Original_Date, 
            :Original_NrX, 
            :Original_DocTyp, 
            :Original_DocSt, 
            :Original_DocNr, 
            :Original_ClId, 
            :Original_ClId2, 
            :Original_Descr, 
            :Original_Summ, 
            :Original_PVN, 
            :Original_ZNR,
            :ORIGINAL_ZDT
            );

    END
    ELSE BEGIN

        UPDATE LOPSD 
        SET 
            dtld = :now
        WHERE LOPSD.id = :id;

    END

end
^

ALTER PROCEDURE SP_OPSD_UPDATE_LOG(
  ID INTEGER,
  USR VARCHAR(15),
  ORIGINAL_DATE DATE,
  ORIGINAL_NRX VARCHAR(5),
  ORIGINAL_DOCTYP VARCHAR(10),
  ORIGINAL_DOCST VARCHAR(6),
  ORIGINAL_DOCNR VARCHAR(15),
  ORIGINAL_CLID VARCHAR(15),
  ORIGINAL_CLID2 VARCHAR(15),
  ORIGINAL_DESCR VARCHAR(80),
  ORIGINAL_SUMM NUMERIC(15,4),
  ORIGINAL_PVN NUMERIC(15,4),
  ORIGINAL_ZNR INTEGER,
  ORIGINAL_ZDT TIMESTAMP)
AS
declare variable NOW timestamp;
    declare variable XDT timestamp;
begin
    now = localtimestamp(0);
    xdt = dateadd(-1 hour to now);

    IF (:Original_ZDt IS NULL OR :Original_ZDt < xdt)
    THEN BEGIN
        INSERT INTO LOPSD
            (id, ZDt, ZU, DETE, NrX,
            DocTyp, DocSt, DocNr,
            ClId, ClId2, Descr, Summ, PVN, ZNR, ODT)
        VALUES (
            :id,
            :now,
            :Usr,
            :Original_Date, 
            :Original_NrX, 
            :Original_DocTyp, 
            :Original_DocSt, 
            :Original_DocNr, 
            :Original_ClId, 
            :Original_ClId2, 
            :Original_Descr, 
            :Original_Summ, 
            :Original_PVN, 
            :Original_ZNR,
            :ORIGINAL_ZDT
            );

    END

end
^

SET TERM ; ^

GRANT EXECUTE ON PROCEDURE SP_DIFF_01 TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_DIFF_11 TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_DIFF_02 TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_DIFF_12 TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_FIXLOPSODT TO AIVARS;
GRANT EXECUTE ON PROCEDURE SP_FIXOPSDATES TO AIVARS;
GRANT SELECT, INSERT, UPDATE, DELETE, REFERENCES ON TTEMP_DIFF2 TO AIVARS WITH GRANT OPTION;

EXECUTE PROCEDURE SP_FIXOPSDATES;
EXECUTE PROCEDURE SP_FIXLOPSODT;

UPDATE Params
SET PVALUE = '099'
WHERE PNAME = 'version';
