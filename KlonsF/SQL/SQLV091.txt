SET TERM ^ ;

ALTER PROCEDURE SP_CURRCHECK_01(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */,
  PCUR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_01(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_01_CLID(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_01_CLID2(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_02(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_02_CLID(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_10(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_10_CLID(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_11(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_21(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PACLEN INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_CUR_01(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCUR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_CUR_01_CLID(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(8) /* COLLATE UTF8 - default */,
  PCUR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_MT_11(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN TREPMT.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPMT.SPID */ INTEGER,
  AD /* TYPE OF COLUMN TREPMT.AD */ VARCHAR(3) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN TREPMT.AC1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN TREPMT.AC2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  ACN1 /* TYPE OF COLUMN TREPMT.ACN1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  ACN2 /* TYPE OF COLUMN TREPMT.ACN2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  M1 /* TYPE OF COLUMN TREPMT.M1 */ NUMERIC(15,2),
  M2 /* TYPE OF COLUMN TREPMT.M2 */ NUMERIC(15,2),
  M3 /* TYPE OF COLUMN TREPMT.M3 */ NUMERIC(15,2),
  M4 /* TYPE OF COLUMN TREPMT.M4 */ NUMERIC(15,2),
  M5 /* TYPE OF COLUMN TREPMT.M5 */ NUMERIC(15,2),
  M6 /* TYPE OF COLUMN TREPMT.M6 */ NUMERIC(15,2),
  M7 /* TYPE OF COLUMN TREPMT.M7 */ NUMERIC(15,2),
  M8 /* TYPE OF COLUMN TREPMT.M8 */ NUMERIC(15,2),
  M9 /* TYPE OF COLUMN TREPMT.M9 */ NUMERIC(15,2),
  M10 /* TYPE OF COLUMN TREPMT.M10 */ NUMERIC(15,2),
  M11 /* TYPE OF COLUMN TREPMT.M11 */ NUMERIC(15,2),
  M12 /* TYPE OF COLUMN TREPMT.M12 */ NUMERIC(15,2),
  N1 /* TYPE OF COLUMN TREPMT.N1 */ NUMERIC(15,2),
  N2 /* TYPE OF COLUMN TREPMT.N2 */ NUMERIC(15,2),
  N3 /* TYPE OF COLUMN TREPMT.N3 */ NUMERIC(15,2),
  N4 /* TYPE OF COLUMN TREPMT.N4 */ NUMERIC(15,2),
  N5 /* TYPE OF COLUMN TREPMT.N5 */ NUMERIC(15,2),
  N6 /* TYPE OF COLUMN TREPMT.N6 */ NUMERIC(15,2),
  N7 /* TYPE OF COLUMN TREPMT.N7 */ NUMERIC(15,2),
  N8 /* TYPE OF COLUMN TREPMT.N8 */ NUMERIC(15,2),
  N9 /* TYPE OF COLUMN TREPMT.N9 */ NUMERIC(15,2),
  N10 /* TYPE OF COLUMN TREPMT.N10 */ NUMERIC(15,2),
  N11 /* TYPE OF COLUMN TREPMT.N11 */ NUMERIC(15,2),
  N12 /* TYPE OF COLUMN TREPMT.N12 */ NUMERIC(15,2),
  MT /* TYPE OF COLUMN TREPMT.MT */ NUMERIC(15,2),
  NT /* TYPE OF COLUMN TREPMT.NT */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_MT_12(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN TREPMT.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPMT.SPID */ INTEGER,
  AD /* TYPE OF COLUMN TREPMT.AD */ VARCHAR(3) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN TREPMT.AC1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN TREPMT.AC2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  ACN1 /* TYPE OF COLUMN TREPMT.ACN1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  ACN2 /* TYPE OF COLUMN TREPMT.ACN2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  M1 /* TYPE OF COLUMN TREPMT.M1 */ NUMERIC(15,2),
  M2 /* TYPE OF COLUMN TREPMT.M2 */ NUMERIC(15,2),
  M3 /* TYPE OF COLUMN TREPMT.M3 */ NUMERIC(15,2),
  M4 /* TYPE OF COLUMN TREPMT.M4 */ NUMERIC(15,2),
  M5 /* TYPE OF COLUMN TREPMT.M5 */ NUMERIC(15,2),
  M6 /* TYPE OF COLUMN TREPMT.M6 */ NUMERIC(15,2),
  M7 /* TYPE OF COLUMN TREPMT.M7 */ NUMERIC(15,2),
  M8 /* TYPE OF COLUMN TREPMT.M8 */ NUMERIC(15,2),
  M9 /* TYPE OF COLUMN TREPMT.M9 */ NUMERIC(15,2),
  M10 /* TYPE OF COLUMN TREPMT.M10 */ NUMERIC(15,2),
  M11 /* TYPE OF COLUMN TREPMT.M11 */ NUMERIC(15,2),
  M12 /* TYPE OF COLUMN TREPMT.M12 */ NUMERIC(15,2),
  N1 /* TYPE OF COLUMN TREPMT.N1 */ NUMERIC(15,2),
  N2 /* TYPE OF COLUMN TREPMT.N2 */ NUMERIC(15,2),
  N3 /* TYPE OF COLUMN TREPMT.N3 */ NUMERIC(15,2),
  N4 /* TYPE OF COLUMN TREPMT.N4 */ NUMERIC(15,2),
  N5 /* TYPE OF COLUMN TREPMT.N5 */ NUMERIC(15,2),
  N6 /* TYPE OF COLUMN TREPMT.N6 */ NUMERIC(15,2),
  N7 /* TYPE OF COLUMN TREPMT.N7 */ NUMERIC(15,2),
  N8 /* TYPE OF COLUMN TREPMT.N8 */ NUMERIC(15,2),
  N9 /* TYPE OF COLUMN TREPMT.N9 */ NUMERIC(15,2),
  N10 /* TYPE OF COLUMN TREPMT.N10 */ NUMERIC(15,2),
  N11 /* TYPE OF COLUMN TREPMT.N11 */ NUMERIC(15,2),
  N12 /* TYPE OF COLUMN TREPMT.N12 */ NUMERIC(15,2),
  MT /* TYPE OF COLUMN TREPMT.MT */ NUMERIC(15,2),
  NT /* TYPE OF COLUMN TREPMT.NT */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_MT_21(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN TREPMT.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPMT.SPID */ INTEGER,
  AD /* TYPE OF COLUMN TREPMT.AD */ VARCHAR(3) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN TREPMT.AC1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN TREPMT.AC2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  ACN1 /* TYPE OF COLUMN TREPMT.ACN1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  ACN2 /* TYPE OF COLUMN TREPMT.ACN2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  M1 /* TYPE OF COLUMN TREPMT.M1 */ NUMERIC(15,2),
  M2 /* TYPE OF COLUMN TREPMT.M2 */ NUMERIC(15,2),
  M3 /* TYPE OF COLUMN TREPMT.M3 */ NUMERIC(15,2),
  M4 /* TYPE OF COLUMN TREPMT.M4 */ NUMERIC(15,2),
  M5 /* TYPE OF COLUMN TREPMT.M5 */ NUMERIC(15,2),
  M6 /* TYPE OF COLUMN TREPMT.M6 */ NUMERIC(15,2),
  M7 /* TYPE OF COLUMN TREPMT.M7 */ NUMERIC(15,2),
  M8 /* TYPE OF COLUMN TREPMT.M8 */ NUMERIC(15,2),
  M9 /* TYPE OF COLUMN TREPMT.M9 */ NUMERIC(15,2),
  M10 /* TYPE OF COLUMN TREPMT.M10 */ NUMERIC(15,2),
  M11 /* TYPE OF COLUMN TREPMT.M11 */ NUMERIC(15,2),
  M12 /* TYPE OF COLUMN TREPMT.M12 */ NUMERIC(15,2),
  N1 /* TYPE OF COLUMN TREPMT.N1 */ NUMERIC(15,2),
  N2 /* TYPE OF COLUMN TREPMT.N2 */ NUMERIC(15,2),
  N3 /* TYPE OF COLUMN TREPMT.N3 */ NUMERIC(15,2),
  N4 /* TYPE OF COLUMN TREPMT.N4 */ NUMERIC(15,2),
  N5 /* TYPE OF COLUMN TREPMT.N5 */ NUMERIC(15,2),
  N6 /* TYPE OF COLUMN TREPMT.N6 */ NUMERIC(15,2),
  N7 /* TYPE OF COLUMN TREPMT.N7 */ NUMERIC(15,2),
  N8 /* TYPE OF COLUMN TREPMT.N8 */ NUMERIC(15,2),
  N9 /* TYPE OF COLUMN TREPMT.N9 */ NUMERIC(15,2),
  N10 /* TYPE OF COLUMN TREPMT.N10 */ NUMERIC(15,2),
  N11 /* TYPE OF COLUMN TREPMT.N11 */ NUMERIC(15,2),
  N12 /* TYPE OF COLUMN TREPMT.N12 */ NUMERIC(15,2),
  MT /* TYPE OF COLUMN TREPMT.MT */ NUMERIC(15,2),
  NT /* TYPE OF COLUMN TREPMT.NT */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_MT_22(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN TREPMT.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPMT.SPID */ INTEGER,
  AD /* TYPE OF COLUMN TREPMT.AD */ VARCHAR(3) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN TREPMT.AC1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN TREPMT.AC2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  ACN1 /* TYPE OF COLUMN TREPMT.ACN1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  ACN2 /* TYPE OF COLUMN TREPMT.ACN2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  M1 /* TYPE OF COLUMN TREPMT.M1 */ NUMERIC(15,2),
  M2 /* TYPE OF COLUMN TREPMT.M2 */ NUMERIC(15,2),
  M3 /* TYPE OF COLUMN TREPMT.M3 */ NUMERIC(15,2),
  M4 /* TYPE OF COLUMN TREPMT.M4 */ NUMERIC(15,2),
  M5 /* TYPE OF COLUMN TREPMT.M5 */ NUMERIC(15,2),
  M6 /* TYPE OF COLUMN TREPMT.M6 */ NUMERIC(15,2),
  M7 /* TYPE OF COLUMN TREPMT.M7 */ NUMERIC(15,2),
  M8 /* TYPE OF COLUMN TREPMT.M8 */ NUMERIC(15,2),
  M9 /* TYPE OF COLUMN TREPMT.M9 */ NUMERIC(15,2),
  M10 /* TYPE OF COLUMN TREPMT.M10 */ NUMERIC(15,2),
  M11 /* TYPE OF COLUMN TREPMT.M11 */ NUMERIC(15,2),
  M12 /* TYPE OF COLUMN TREPMT.M12 */ NUMERIC(15,2),
  N1 /* TYPE OF COLUMN TREPMT.N1 */ NUMERIC(15,2),
  N2 /* TYPE OF COLUMN TREPMT.N2 */ NUMERIC(15,2),
  N3 /* TYPE OF COLUMN TREPMT.N3 */ NUMERIC(15,2),
  N4 /* TYPE OF COLUMN TREPMT.N4 */ NUMERIC(15,2),
  N5 /* TYPE OF COLUMN TREPMT.N5 */ NUMERIC(15,2),
  N6 /* TYPE OF COLUMN TREPMT.N6 */ NUMERIC(15,2),
  N7 /* TYPE OF COLUMN TREPMT.N7 */ NUMERIC(15,2),
  N8 /* TYPE OF COLUMN TREPMT.N8 */ NUMERIC(15,2),
  N9 /* TYPE OF COLUMN TREPMT.N9 */ NUMERIC(15,2),
  N10 /* TYPE OF COLUMN TREPMT.N10 */ NUMERIC(15,2),
  N11 /* TYPE OF COLUMN TREPMT.N11 */ NUMERIC(15,2),
  N12 /* TYPE OF COLUMN TREPMT.N12 */ NUMERIC(15,2),
  MT /* TYPE OF COLUMN TREPMT.MT */ NUMERIC(15,2),
  NT /* TYPE OF COLUMN TREPMT.NT */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_NP_11(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_APGR_NP_12(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PACLEN INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_CURCHECK_01(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(8) /* COLLATE UTF8 - default */,
  PCUR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_CURRDIFF_01(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(8) /* COLLATE UTF8 - default */,
  PCUR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_DARZ_1(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID /* TYPE OF COLUMN TREPDARZ1.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPDARZ1.SPID */ INTEGER,
  DID /* TYPE OF COLUMN TREPDARZ1.DID */ INTEGER,
  RID /* TYPE OF COLUMN TREPDARZ1.RID */ INTEGER,
  DETE /* TYPE OF COLUMN TREPDARZ1.DETE */ DATE,
  NRX /* TYPE OF COLUMN TREPDARZ1.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN TREPDARZ1.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN TREPDARZ1.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN TREPDARZ1.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN TREPDARZ1.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN TREPDARZ1.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN TREPDARZ1.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  DESCR /* TYPE OF COLUMN TREPDARZ1.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN TREPDARZ1.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN TREPDARZ1.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AA /* TYPE OF COLUMN TREPDARZ1.AA */ NUMERIC(15,2),
  A1 /* TYPE OF COLUMN TREPDARZ1.A1 */ NUMERIC(15,2),
  A2 /* TYPE OF COLUMN TREPDARZ1.A2 */ NUMERIC(15,2),
  A3 /* TYPE OF COLUMN TREPDARZ1.A3 */ NUMERIC(15,2),
  A4 /* TYPE OF COLUMN TREPDARZ1.A4 */ NUMERIC(15,2),
  A5 /* TYPE OF COLUMN TREPDARZ1.A5 */ NUMERIC(15,2),
  A6 /* TYPE OF COLUMN TREPDARZ1.A6 */ NUMERIC(15,2),
  A7 /* TYPE OF COLUMN TREPDARZ1.A7 */ NUMERIC(15,2),
  A8 /* TYPE OF COLUMN TREPDARZ1.A8 */ NUMERIC(15,2),
  A9 /* TYPE OF COLUMN TREPDARZ1.A9 */ NUMERIC(15,2),
  A10 /* TYPE OF COLUMN TREPDARZ1.A10 */ NUMERIC(15,2),
  A11 /* TYPE OF COLUMN TREPDARZ1.A11 */ NUMERIC(15,2),
  A12 /* TYPE OF COLUMN TREPDARZ1.A12 */ NUMERIC(15,2),
  A13 /* TYPE OF COLUMN TREPDARZ1.A13 */ NUMERIC(15,2),
  A14 /* TYPE OF COLUMN TREPDARZ1.A14 */ NUMERIC(15,2),
  A15 /* TYPE OF COLUMN TREPDARZ1.A15 */ NUMERIC(15,2),
  A16 /* TYPE OF COLUMN TREPDARZ1.A16 */ NUMERIC(15,2),
  A17 /* TYPE OF COLUMN TREPDARZ1.A17 */ NUMERIC(15,2),
  A18 /* TYPE OF COLUMN TREPDARZ1.A18 */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_DARZ_3(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID /* TYPE OF COLUMN TREPDARZ1.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPDARZ1.SPID */ INTEGER,
  DID /* TYPE OF COLUMN TREPDARZ1.DID */ INTEGER,
  RID /* TYPE OF COLUMN TREPDARZ1.RID */ INTEGER,
  DETE /* TYPE OF COLUMN TREPDARZ1.DETE */ DATE,
  NRX /* TYPE OF COLUMN TREPDARZ1.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN TREPDARZ1.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN TREPDARZ1.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN TREPDARZ1.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN TREPDARZ1.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN TREPDARZ1.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN TREPDARZ1.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  DESCR /* TYPE OF COLUMN TREPDARZ1.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN TREPDARZ1.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN TREPDARZ1.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AA /* TYPE OF COLUMN TREPDARZ1.AA */ NUMERIC(15,2),
  A1 /* TYPE OF COLUMN TREPDARZ1.A1 */ NUMERIC(15,2),
  A2 /* TYPE OF COLUMN TREPDARZ1.A2 */ NUMERIC(15,2),
  A3 /* TYPE OF COLUMN TREPDARZ1.A3 */ NUMERIC(15,2),
  A4 /* TYPE OF COLUMN TREPDARZ1.A4 */ NUMERIC(15,2),
  A5 /* TYPE OF COLUMN TREPDARZ1.A5 */ NUMERIC(15,2),
  A6 /* TYPE OF COLUMN TREPDARZ1.A6 */ NUMERIC(15,2),
  A7 /* TYPE OF COLUMN TREPDARZ1.A7 */ NUMERIC(15,2),
  A8 /* TYPE OF COLUMN TREPDARZ1.A8 */ NUMERIC(15,2),
  A9 /* TYPE OF COLUMN TREPDARZ1.A9 */ NUMERIC(15,2),
  A10 /* TYPE OF COLUMN TREPDARZ1.A10 */ NUMERIC(15,2),
  A11 /* TYPE OF COLUMN TREPDARZ1.A11 */ NUMERIC(15,2),
  A12 /* TYPE OF COLUMN TREPDARZ1.A12 */ NUMERIC(15,2),
  A13 /* TYPE OF COLUMN TREPDARZ1.A13 */ NUMERIC(15,2),
  A14 /* TYPE OF COLUMN TREPDARZ1.A14 */ NUMERIC(15,2),
  A15 /* TYPE OF COLUMN TREPDARZ1.A15 */ NUMERIC(15,2),
  A16 /* TYPE OF COLUMN TREPDARZ1.A16 */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_DOKS_11(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */,
  PAC11 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC12 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC13 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC14 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC15 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC21 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC22 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC23 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC24 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC25 VARCHAR(5) /* COLLATE UTF8 - default */,
  PDOCGR VARCHAR(10) /* COLLATE UTF8 - default */,
  PANDOR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_KG_11(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_KIEO_1(
  PDID INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_KIEO_21(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_KIZO_21(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_KORESP_01(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS3A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS3A.SPID */ INTEGER,
  RAC /* TYPE OF COLUMN ROPS3A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS3A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS3A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS3A.SCR */ NUMERIC(15,2),
  AC1 /* TYPE OF COLUMN ROPS3A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS3A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_KORESP_01_CLID(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS3A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS3A.SPID */ INTEGER,
  RAC /* TYPE OF COLUMN ROPS3A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS3A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS3A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS3A.SCR */ NUMERIC(15,2),
  AC1 /* TYPE OF COLUMN ROPS3A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS3A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_KORESP_01_CLID2(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS3A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS3A.SPID */ INTEGER,
  RAC /* TYPE OF COLUMN ROPS3A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS3A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS3A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS3A.SCR */ NUMERIC(15,2),
  AC1 /* TYPE OF COLUMN ROPS3A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS3A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_KORESP_01_CUR(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */,
  PCUR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS3A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS3A.SPID */ INTEGER,
  RAC /* TYPE OF COLUMN ROPS3A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS3A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS3A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS3A.SCR */ NUMERIC(15,2),
  AC1 /* TYPE OF COLUMN ROPS3A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS3A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_KORESP_02(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS3A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS3A.SPID */ INTEGER,
  RAC /* TYPE OF COLUMN ROPS3A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS3A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS3A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS3A.SCR */ NUMERIC(15,2),
  AC1 /* TYPE OF COLUMN ROPS3A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS3A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_KORESP_02_CLID(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS3A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS3A.SPID */ INTEGER,
  RAC /* TYPE OF COLUMN ROPS3A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS3A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS3A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS3A.SCR */ NUMERIC(15,2),
  AC1 /* TYPE OF COLUMN ROPS3A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS3A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_KORESP_11(
  PSD DATE,
  PED DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_KORESP_11_CLID(
  PSD DATE,
  PED DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_KORESP_11_CLID2(
  PSD DATE,
  PED DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_KORESP_11_CUR(
  PSD DATE,
  PED DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */,
  PCUR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_NPMT_11(
  SDT DATE,
  EDT DATE,
  PAD VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN TREPMT.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPMT.SPID */ INTEGER,
  AD /* TYPE OF COLUMN TREPMT.AD */ VARCHAR(3) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN TREPMT.AC1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN TREPMT.AC2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  ACN1 /* TYPE OF COLUMN TREPMT.ACN1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  ACN2 /* TYPE OF COLUMN TREPMT.ACN2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  M1 /* TYPE OF COLUMN TREPMT.M1 */ NUMERIC(15,2),
  M2 /* TYPE OF COLUMN TREPMT.M2 */ NUMERIC(15,2),
  M3 /* TYPE OF COLUMN TREPMT.M3 */ NUMERIC(15,2),
  M4 /* TYPE OF COLUMN TREPMT.M4 */ NUMERIC(15,2),
  M5 /* TYPE OF COLUMN TREPMT.M5 */ NUMERIC(15,2),
  M6 /* TYPE OF COLUMN TREPMT.M6 */ NUMERIC(15,2),
  M7 /* TYPE OF COLUMN TREPMT.M7 */ NUMERIC(15,2),
  M8 /* TYPE OF COLUMN TREPMT.M8 */ NUMERIC(15,2),
  M9 /* TYPE OF COLUMN TREPMT.M9 */ NUMERIC(15,2),
  M10 /* TYPE OF COLUMN TREPMT.M10 */ NUMERIC(15,2),
  M11 /* TYPE OF COLUMN TREPMT.M11 */ NUMERIC(15,2),
  M12 /* TYPE OF COLUMN TREPMT.M12 */ NUMERIC(15,2),
  N1 /* TYPE OF COLUMN TREPMT.N1 */ NUMERIC(15,2),
  N2 /* TYPE OF COLUMN TREPMT.N2 */ NUMERIC(15,2),
  N3 /* TYPE OF COLUMN TREPMT.N3 */ NUMERIC(15,2),
  N4 /* TYPE OF COLUMN TREPMT.N4 */ NUMERIC(15,2),
  N5 /* TYPE OF COLUMN TREPMT.N5 */ NUMERIC(15,2),
  N6 /* TYPE OF COLUMN TREPMT.N6 */ NUMERIC(15,2),
  N7 /* TYPE OF COLUMN TREPMT.N7 */ NUMERIC(15,2),
  N8 /* TYPE OF COLUMN TREPMT.N8 */ NUMERIC(15,2),
  N9 /* TYPE OF COLUMN TREPMT.N9 */ NUMERIC(15,2),
  N10 /* TYPE OF COLUMN TREPMT.N10 */ NUMERIC(15,2),
  N11 /* TYPE OF COLUMN TREPMT.N11 */ NUMERIC(15,2),
  N12 /* TYPE OF COLUMN TREPMT.N12 */ NUMERIC(15,2),
  MT /* TYPE OF COLUMN TREPMT.MT */ NUMERIC(15,2),
  NT /* TYPE OF COLUMN TREPMT.NT */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_NPMT_12(
  SDT DATE,
  EDT DATE,
  PAD VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN TREPMT.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPMT.SPID */ INTEGER,
  AD /* TYPE OF COLUMN TREPMT.AD */ VARCHAR(3) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN TREPMT.AC1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN TREPMT.AC2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  ACN1 /* TYPE OF COLUMN TREPMT.ACN1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  ACN2 /* TYPE OF COLUMN TREPMT.ACN2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  M1 /* TYPE OF COLUMN TREPMT.M1 */ NUMERIC(15,2),
  M2 /* TYPE OF COLUMN TREPMT.M2 */ NUMERIC(15,2),
  M3 /* TYPE OF COLUMN TREPMT.M3 */ NUMERIC(15,2),
  M4 /* TYPE OF COLUMN TREPMT.M4 */ NUMERIC(15,2),
  M5 /* TYPE OF COLUMN TREPMT.M5 */ NUMERIC(15,2),
  M6 /* TYPE OF COLUMN TREPMT.M6 */ NUMERIC(15,2),
  M7 /* TYPE OF COLUMN TREPMT.M7 */ NUMERIC(15,2),
  M8 /* TYPE OF COLUMN TREPMT.M8 */ NUMERIC(15,2),
  M9 /* TYPE OF COLUMN TREPMT.M9 */ NUMERIC(15,2),
  M10 /* TYPE OF COLUMN TREPMT.M10 */ NUMERIC(15,2),
  M11 /* TYPE OF COLUMN TREPMT.M11 */ NUMERIC(15,2),
  M12 /* TYPE OF COLUMN TREPMT.M12 */ NUMERIC(15,2),
  N1 /* TYPE OF COLUMN TREPMT.N1 */ NUMERIC(15,2),
  N2 /* TYPE OF COLUMN TREPMT.N2 */ NUMERIC(15,2),
  N3 /* TYPE OF COLUMN TREPMT.N3 */ NUMERIC(15,2),
  N4 /* TYPE OF COLUMN TREPMT.N4 */ NUMERIC(15,2),
  N5 /* TYPE OF COLUMN TREPMT.N5 */ NUMERIC(15,2),
  N6 /* TYPE OF COLUMN TREPMT.N6 */ NUMERIC(15,2),
  N7 /* TYPE OF COLUMN TREPMT.N7 */ NUMERIC(15,2),
  N8 /* TYPE OF COLUMN TREPMT.N8 */ NUMERIC(15,2),
  N9 /* TYPE OF COLUMN TREPMT.N9 */ NUMERIC(15,2),
  N10 /* TYPE OF COLUMN TREPMT.N10 */ NUMERIC(15,2),
  N11 /* TYPE OF COLUMN TREPMT.N11 */ NUMERIC(15,2),
  N12 /* TYPE OF COLUMN TREPMT.N12 */ NUMERIC(15,2),
  MT /* TYPE OF COLUMN TREPMT.MT */ NUMERIC(15,2),
  NT /* TYPE OF COLUMN TREPMT.NT */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_NPMT_13(
  SDT DATE,
  EDT DATE,
  PAD VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN TREPMT.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPMT.SPID */ INTEGER,
  AD /* TYPE OF COLUMN TREPMT.AD */ VARCHAR(3) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN TREPMT.AC1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN TREPMT.AC2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  ACN1 /* TYPE OF COLUMN TREPMT.ACN1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  ACN2 /* TYPE OF COLUMN TREPMT.ACN2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  M1 /* TYPE OF COLUMN TREPMT.M1 */ NUMERIC(15,2),
  M2 /* TYPE OF COLUMN TREPMT.M2 */ NUMERIC(15,2),
  M3 /* TYPE OF COLUMN TREPMT.M3 */ NUMERIC(15,2),
  M4 /* TYPE OF COLUMN TREPMT.M4 */ NUMERIC(15,2),
  M5 /* TYPE OF COLUMN TREPMT.M5 */ NUMERIC(15,2),
  M6 /* TYPE OF COLUMN TREPMT.M6 */ NUMERIC(15,2),
  M7 /* TYPE OF COLUMN TREPMT.M7 */ NUMERIC(15,2),
  M8 /* TYPE OF COLUMN TREPMT.M8 */ NUMERIC(15,2),
  M9 /* TYPE OF COLUMN TREPMT.M9 */ NUMERIC(15,2),
  M10 /* TYPE OF COLUMN TREPMT.M10 */ NUMERIC(15,2),
  M11 /* TYPE OF COLUMN TREPMT.M11 */ NUMERIC(15,2),
  M12 /* TYPE OF COLUMN TREPMT.M12 */ NUMERIC(15,2),
  N1 /* TYPE OF COLUMN TREPMT.N1 */ NUMERIC(15,2),
  N2 /* TYPE OF COLUMN TREPMT.N2 */ NUMERIC(15,2),
  N3 /* TYPE OF COLUMN TREPMT.N3 */ NUMERIC(15,2),
  N4 /* TYPE OF COLUMN TREPMT.N4 */ NUMERIC(15,2),
  N5 /* TYPE OF COLUMN TREPMT.N5 */ NUMERIC(15,2),
  N6 /* TYPE OF COLUMN TREPMT.N6 */ NUMERIC(15,2),
  N7 /* TYPE OF COLUMN TREPMT.N7 */ NUMERIC(15,2),
  N8 /* TYPE OF COLUMN TREPMT.N8 */ NUMERIC(15,2),
  N9 /* TYPE OF COLUMN TREPMT.N9 */ NUMERIC(15,2),
  N10 /* TYPE OF COLUMN TREPMT.N10 */ NUMERIC(15,2),
  N11 /* TYPE OF COLUMN TREPMT.N11 */ NUMERIC(15,2),
  N12 /* TYPE OF COLUMN TREPMT.N12 */ NUMERIC(15,2),
  MT /* TYPE OF COLUMN TREPMT.MT */ NUMERIC(15,2),
  NT /* TYPE OF COLUMN TREPMT.NT */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_NPMT_14(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID /* TYPE OF COLUMN TREPMT.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPMT.SPID */ INTEGER,
  AD /* TYPE OF COLUMN TREPMT.AD */ VARCHAR(3) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN TREPMT.AC1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN TREPMT.AC2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  ACN1 /* TYPE OF COLUMN TREPMT.ACN1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  ACN2 /* TYPE OF COLUMN TREPMT.ACN2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  M1 /* TYPE OF COLUMN TREPMT.M1 */ NUMERIC(15,2),
  M2 /* TYPE OF COLUMN TREPMT.M2 */ NUMERIC(15,2),
  M3 /* TYPE OF COLUMN TREPMT.M3 */ NUMERIC(15,2),
  M4 /* TYPE OF COLUMN TREPMT.M4 */ NUMERIC(15,2),
  M5 /* TYPE OF COLUMN TREPMT.M5 */ NUMERIC(15,2),
  M6 /* TYPE OF COLUMN TREPMT.M6 */ NUMERIC(15,2),
  M7 /* TYPE OF COLUMN TREPMT.M7 */ NUMERIC(15,2),
  M8 /* TYPE OF COLUMN TREPMT.M8 */ NUMERIC(15,2),
  M9 /* TYPE OF COLUMN TREPMT.M9 */ NUMERIC(15,2),
  M10 /* TYPE OF COLUMN TREPMT.M10 */ NUMERIC(15,2),
  M11 /* TYPE OF COLUMN TREPMT.M11 */ NUMERIC(15,2),
  M12 /* TYPE OF COLUMN TREPMT.M12 */ NUMERIC(15,2),
  N1 /* TYPE OF COLUMN TREPMT.N1 */ NUMERIC(15,2),
  N2 /* TYPE OF COLUMN TREPMT.N2 */ NUMERIC(15,2),
  N3 /* TYPE OF COLUMN TREPMT.N3 */ NUMERIC(15,2),
  N4 /* TYPE OF COLUMN TREPMT.N4 */ NUMERIC(15,2),
  N5 /* TYPE OF COLUMN TREPMT.N5 */ NUMERIC(15,2),
  N6 /* TYPE OF COLUMN TREPMT.N6 */ NUMERIC(15,2),
  N7 /* TYPE OF COLUMN TREPMT.N7 */ NUMERIC(15,2),
  N8 /* TYPE OF COLUMN TREPMT.N8 */ NUMERIC(15,2),
  N9 /* TYPE OF COLUMN TREPMT.N9 */ NUMERIC(15,2),
  N10 /* TYPE OF COLUMN TREPMT.N10 */ NUMERIC(15,2),
  N11 /* TYPE OF COLUMN TREPMT.N11 */ NUMERIC(15,2),
  N12 /* TYPE OF COLUMN TREPMT.N12 */ NUMERIC(15,2),
  MT /* TYPE OF COLUMN TREPMT.MT */ NUMERIC(15,2),
  NT /* TYPE OF COLUMN TREPMT.NT */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_NPMT_21(
  SDT DATE,
  EDT DATE,
  PAD VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN TREPMT.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPMT.SPID */ INTEGER,
  AD /* TYPE OF COLUMN TREPMT.AD */ VARCHAR(3) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN TREPMT.AC1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN TREPMT.AC2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  ACN1 /* TYPE OF COLUMN TREPMT.ACN1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  ACN2 /* TYPE OF COLUMN TREPMT.ACN2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  M1 /* TYPE OF COLUMN TREPMT.M1 */ NUMERIC(15,2),
  M2 /* TYPE OF COLUMN TREPMT.M2 */ NUMERIC(15,2),
  M3 /* TYPE OF COLUMN TREPMT.M3 */ NUMERIC(15,2),
  M4 /* TYPE OF COLUMN TREPMT.M4 */ NUMERIC(15,2),
  M5 /* TYPE OF COLUMN TREPMT.M5 */ NUMERIC(15,2),
  M6 /* TYPE OF COLUMN TREPMT.M6 */ NUMERIC(15,2),
  M7 /* TYPE OF COLUMN TREPMT.M7 */ NUMERIC(15,2),
  M8 /* TYPE OF COLUMN TREPMT.M8 */ NUMERIC(15,2),
  M9 /* TYPE OF COLUMN TREPMT.M9 */ NUMERIC(15,2),
  M10 /* TYPE OF COLUMN TREPMT.M10 */ NUMERIC(15,2),
  M11 /* TYPE OF COLUMN TREPMT.M11 */ NUMERIC(15,2),
  M12 /* TYPE OF COLUMN TREPMT.M12 */ NUMERIC(15,2),
  N1 /* TYPE OF COLUMN TREPMT.N1 */ NUMERIC(15,2),
  N2 /* TYPE OF COLUMN TREPMT.N2 */ NUMERIC(15,2),
  N3 /* TYPE OF COLUMN TREPMT.N3 */ NUMERIC(15,2),
  N4 /* TYPE OF COLUMN TREPMT.N4 */ NUMERIC(15,2),
  N5 /* TYPE OF COLUMN TREPMT.N5 */ NUMERIC(15,2),
  N6 /* TYPE OF COLUMN TREPMT.N6 */ NUMERIC(15,2),
  N7 /* TYPE OF COLUMN TREPMT.N7 */ NUMERIC(15,2),
  N8 /* TYPE OF COLUMN TREPMT.N8 */ NUMERIC(15,2),
  N9 /* TYPE OF COLUMN TREPMT.N9 */ NUMERIC(15,2),
  N10 /* TYPE OF COLUMN TREPMT.N10 */ NUMERIC(15,2),
  N11 /* TYPE OF COLUMN TREPMT.N11 */ NUMERIC(15,2),
  N12 /* TYPE OF COLUMN TREPMT.N12 */ NUMERIC(15,2),
  MT /* TYPE OF COLUMN TREPMT.MT */ NUMERIC(15,2),
  NT /* TYPE OF COLUMN TREPMT.NT */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_NPMT_22(
  SDT DATE,
  EDT DATE,
  PAD VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN TREPMT.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPMT.SPID */ INTEGER,
  AD /* TYPE OF COLUMN TREPMT.AD */ VARCHAR(3) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN TREPMT.AC1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN TREPMT.AC2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  ACN1 /* TYPE OF COLUMN TREPMT.ACN1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  ACN2 /* TYPE OF COLUMN TREPMT.ACN2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  M1 /* TYPE OF COLUMN TREPMT.M1 */ NUMERIC(15,2),
  M2 /* TYPE OF COLUMN TREPMT.M2 */ NUMERIC(15,2),
  M3 /* TYPE OF COLUMN TREPMT.M3 */ NUMERIC(15,2),
  M4 /* TYPE OF COLUMN TREPMT.M4 */ NUMERIC(15,2),
  M5 /* TYPE OF COLUMN TREPMT.M5 */ NUMERIC(15,2),
  M6 /* TYPE OF COLUMN TREPMT.M6 */ NUMERIC(15,2),
  M7 /* TYPE OF COLUMN TREPMT.M7 */ NUMERIC(15,2),
  M8 /* TYPE OF COLUMN TREPMT.M8 */ NUMERIC(15,2),
  M9 /* TYPE OF COLUMN TREPMT.M9 */ NUMERIC(15,2),
  M10 /* TYPE OF COLUMN TREPMT.M10 */ NUMERIC(15,2),
  M11 /* TYPE OF COLUMN TREPMT.M11 */ NUMERIC(15,2),
  M12 /* TYPE OF COLUMN TREPMT.M12 */ NUMERIC(15,2),
  N1 /* TYPE OF COLUMN TREPMT.N1 */ NUMERIC(15,2),
  N2 /* TYPE OF COLUMN TREPMT.N2 */ NUMERIC(15,2),
  N3 /* TYPE OF COLUMN TREPMT.N3 */ NUMERIC(15,2),
  N4 /* TYPE OF COLUMN TREPMT.N4 */ NUMERIC(15,2),
  N5 /* TYPE OF COLUMN TREPMT.N5 */ NUMERIC(15,2),
  N6 /* TYPE OF COLUMN TREPMT.N6 */ NUMERIC(15,2),
  N7 /* TYPE OF COLUMN TREPMT.N7 */ NUMERIC(15,2),
  N8 /* TYPE OF COLUMN TREPMT.N8 */ NUMERIC(15,2),
  N9 /* TYPE OF COLUMN TREPMT.N9 */ NUMERIC(15,2),
  N10 /* TYPE OF COLUMN TREPMT.N10 */ NUMERIC(15,2),
  N11 /* TYPE OF COLUMN TREPMT.N11 */ NUMERIC(15,2),
  N12 /* TYPE OF COLUMN TREPMT.N12 */ NUMERIC(15,2),
  MT /* TYPE OF COLUMN TREPMT.MT */ NUMERIC(15,2),
  NT /* TYPE OF COLUMN TREPMT.NT */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_NPMT_24(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID /* TYPE OF COLUMN TREPMT.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPMT.SPID */ INTEGER,
  AD /* TYPE OF COLUMN TREPMT.AD */ VARCHAR(3) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN TREPMT.AC1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN TREPMT.AC2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  ACN1 /* TYPE OF COLUMN TREPMT.ACN1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  ACN2 /* TYPE OF COLUMN TREPMT.ACN2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  M1 /* TYPE OF COLUMN TREPMT.M1 */ NUMERIC(15,2),
  M2 /* TYPE OF COLUMN TREPMT.M2 */ NUMERIC(15,2),
  M3 /* TYPE OF COLUMN TREPMT.M3 */ NUMERIC(15,2),
  M4 /* TYPE OF COLUMN TREPMT.M4 */ NUMERIC(15,2),
  M5 /* TYPE OF COLUMN TREPMT.M5 */ NUMERIC(15,2),
  M6 /* TYPE OF COLUMN TREPMT.M6 */ NUMERIC(15,2),
  M7 /* TYPE OF COLUMN TREPMT.M7 */ NUMERIC(15,2),
  M8 /* TYPE OF COLUMN TREPMT.M8 */ NUMERIC(15,2),
  M9 /* TYPE OF COLUMN TREPMT.M9 */ NUMERIC(15,2),
  M10 /* TYPE OF COLUMN TREPMT.M10 */ NUMERIC(15,2),
  M11 /* TYPE OF COLUMN TREPMT.M11 */ NUMERIC(15,2),
  M12 /* TYPE OF COLUMN TREPMT.M12 */ NUMERIC(15,2),
  N1 /* TYPE OF COLUMN TREPMT.N1 */ NUMERIC(15,2),
  N2 /* TYPE OF COLUMN TREPMT.N2 */ NUMERIC(15,2),
  N3 /* TYPE OF COLUMN TREPMT.N3 */ NUMERIC(15,2),
  N4 /* TYPE OF COLUMN TREPMT.N4 */ NUMERIC(15,2),
  N5 /* TYPE OF COLUMN TREPMT.N5 */ NUMERIC(15,2),
  N6 /* TYPE OF COLUMN TREPMT.N6 */ NUMERIC(15,2),
  N7 /* TYPE OF COLUMN TREPMT.N7 */ NUMERIC(15,2),
  N8 /* TYPE OF COLUMN TREPMT.N8 */ NUMERIC(15,2),
  N9 /* TYPE OF COLUMN TREPMT.N9 */ NUMERIC(15,2),
  N10 /* TYPE OF COLUMN TREPMT.N10 */ NUMERIC(15,2),
  N11 /* TYPE OF COLUMN TREPMT.N11 */ NUMERIC(15,2),
  N12 /* TYPE OF COLUMN TREPMT.N12 */ NUMERIC(15,2),
  MT /* TYPE OF COLUMN TREPMT.MT */ NUMERIC(15,2),
  NT /* TYPE OF COLUMN TREPMT.NT */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_NPMT_44(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID /* TYPE OF COLUMN TREPMT.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPMT.SPID */ INTEGER,
  AD /* TYPE OF COLUMN TREPMT.AD */ VARCHAR(3) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN TREPMT.AC1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN TREPMT.AC2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  ACN1 /* TYPE OF COLUMN TREPMT.ACN1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  ACN2 /* TYPE OF COLUMN TREPMT.ACN2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  M1 /* TYPE OF COLUMN TREPMT.M1 */ NUMERIC(15,2),
  M2 /* TYPE OF COLUMN TREPMT.M2 */ NUMERIC(15,2),
  M3 /* TYPE OF COLUMN TREPMT.M3 */ NUMERIC(15,2),
  M4 /* TYPE OF COLUMN TREPMT.M4 */ NUMERIC(15,2),
  M5 /* TYPE OF COLUMN TREPMT.M5 */ NUMERIC(15,2),
  M6 /* TYPE OF COLUMN TREPMT.M6 */ NUMERIC(15,2),
  M7 /* TYPE OF COLUMN TREPMT.M7 */ NUMERIC(15,2),
  M8 /* TYPE OF COLUMN TREPMT.M8 */ NUMERIC(15,2),
  M9 /* TYPE OF COLUMN TREPMT.M9 */ NUMERIC(15,2),
  M10 /* TYPE OF COLUMN TREPMT.M10 */ NUMERIC(15,2),
  M11 /* TYPE OF COLUMN TREPMT.M11 */ NUMERIC(15,2),
  M12 /* TYPE OF COLUMN TREPMT.M12 */ NUMERIC(15,2),
  N1 /* TYPE OF COLUMN TREPMT.N1 */ NUMERIC(15,2),
  N2 /* TYPE OF COLUMN TREPMT.N2 */ NUMERIC(15,2),
  N3 /* TYPE OF COLUMN TREPMT.N3 */ NUMERIC(15,2),
  N4 /* TYPE OF COLUMN TREPMT.N4 */ NUMERIC(15,2),
  N5 /* TYPE OF COLUMN TREPMT.N5 */ NUMERIC(15,2),
  N6 /* TYPE OF COLUMN TREPMT.N6 */ NUMERIC(15,2),
  N7 /* TYPE OF COLUMN TREPMT.N7 */ NUMERIC(15,2),
  N8 /* TYPE OF COLUMN TREPMT.N8 */ NUMERIC(15,2),
  N9 /* TYPE OF COLUMN TREPMT.N9 */ NUMERIC(15,2),
  N10 /* TYPE OF COLUMN TREPMT.N10 */ NUMERIC(15,2),
  N11 /* TYPE OF COLUMN TREPMT.N11 */ NUMERIC(15,2),
  N12 /* TYPE OF COLUMN TREPMT.N12 */ NUMERIC(15,2),
  MT /* TYPE OF COLUMN TREPMT.MT */ NUMERIC(15,2),
  NT /* TYPE OF COLUMN TREPMT.NT */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_PERS_11(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_PERS_12(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS2A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS2A.SPID */ INTEGER,
  AC /* TYPE OF COLUMN ROPS2A.AC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC /* TYPE OF COLUMN ROPS2A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS2A.NAME */ VARCHAR(150) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS2A.B0 */ NUMERIC(15,2),
  SDB /* TYPE OF COLUMN ROPS2A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS2A.SCR */ NUMERIC(15,2),
  TDB /* TYPE OF COLUMN ROPS2A.TDB */ NUMERIC(15,2),
  TCR /* TYPE OF COLUMN ROPS2A.TCR */ NUMERIC(15,2),
  CLID /* TYPE OF COLUMN ROPS2A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME1 /* TYPE OF COLUMN ROPS2A.NAME1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS2A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  RNAME /* TYPE OF COLUMN ROPS2A.RNAME */ VARCHAR(150) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_PERS_13(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN TREPA1.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPA1.SPID */ INTEGER,
  I1 /* TYPE OF COLUMN TREPA1.I1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NM /* TYPE OF COLUMN TREPA1.NM */ VARCHAR(50) /* COLLATE UTF8 - default */,
  DT /* TYPE OF COLUMN TREPA1.DT */ DATE,
  ST /* TYPE OF COLUMN TREPA1.ST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  NR /* TYPE OF COLUMN TREPA1.NR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  S1 /* TYPE OF COLUMN TREPA1.S1 */ NUMERIC(15,2),
  S2 /* TYPE OF COLUMN TREPA1.S2 */ NUMERIC(15,2),
  S3 /* TYPE OF COLUMN TREPA1.S3 */ NUMERIC(15,2),
  S4 /* TYPE OF COLUMN TREPA1.S4 */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_PERS_14(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN TREPA1.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPA1.SPID */ INTEGER,
  I1 /* TYPE OF COLUMN TREPA1.I1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NM /* TYPE OF COLUMN TREPA1.NM */ VARCHAR(50) /* COLLATE UTF8 - default */,
  DT /* TYPE OF COLUMN TREPA1.DT */ DATE,
  ST /* TYPE OF COLUMN TREPA1.ST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  NR /* TYPE OF COLUMN TREPA1.NR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  S1 /* TYPE OF COLUMN TREPA1.S1 */ NUMERIC(15,2),
  S2 /* TYPE OF COLUMN TREPA1.S2 */ NUMERIC(15,2),
  S3 /* TYPE OF COLUMN TREPA1.S3 */ NUMERIC(15,2),
  S4 /* TYPE OF COLUMN TREPA1.S4 */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_PERS_15(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN TREPA1.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPA1.SPID */ INTEGER,
  I1 /* TYPE OF COLUMN TREPA1.I1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NM /* TYPE OF COLUMN TREPA1.NM */ VARCHAR(50) /* COLLATE UTF8 - default */,
  DT /* TYPE OF COLUMN TREPA1.DT */ DATE,
  ST /* TYPE OF COLUMN TREPA1.ST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  NR /* TYPE OF COLUMN TREPA1.NR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  S1 /* TYPE OF COLUMN TREPA1.S1 */ NUMERIC(15,2),
  S2 /* TYPE OF COLUMN TREPA1.S2 */ NUMERIC(15,2),
  S3 /* TYPE OF COLUMN TREPA1.S3 */ NUMERIC(15,2),
  S4 /* TYPE OF COLUMN TREPA1.S4 */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_PERS_16(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN TREPA1.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPA1.SPID */ INTEGER,
  I1 /* TYPE OF COLUMN TREPA1.I1 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NM /* TYPE OF COLUMN TREPA1.NM */ VARCHAR(50) /* COLLATE UTF8 - default */,
  DT /* TYPE OF COLUMN TREPA1.DT */ DATE,
  ST /* TYPE OF COLUMN TREPA1.ST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  NR /* TYPE OF COLUMN TREPA1.NR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  S1 /* TYPE OF COLUMN TREPA1.S1 */ NUMERIC(15,2),
  S2 /* TYPE OF COLUMN TREPA1.S2 */ NUMERIC(15,2),
  S3 /* TYPE OF COLUMN TREPA1.S3 */ NUMERIC(15,2),
  S4 /* TYPE OF COLUMN TREPA1.S4 */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_PVN_22(
  PSD DATE,
  PED DATE,
  RG1 /* MONEY */ NUMERIC(15,2),
  RG2 /* MONEY */ NUMERIC(15,2))
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_PVN_32(
  PSD DATE,
  PED DATE,
  RG1 /* MONEY */ NUMERIC(15,2),
  RG2 /* MONEY */ NUMERIC(15,2))
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_PVN_41(
  PSD DATE,
  PED DATE,
  RG1 /* MONEY */ NUMERIC(15,2),
  RG2 /* MONEY */ NUMERIC(15,2))
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_PVN_42(
  PSD DATE,
  PED DATE,
  RG1 /* MONEY */ NUMERIC(15,2),
  RG2 /* MONEY */ NUMERIC(15,2))
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_PVN_52(
  PSD DATE,
  PED DATE,
  RG1 /* MONEY */ NUMERIC(15,2),
  RG2 /* MONEY */ NUMERIC(15,2))
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_PVN_CHECK_01(
  PSD DATE,
  PED DATE,
  RG1 /* MONEY */ NUMERIC(15,2),
  LIKME /* MONEY */ NUMERIC(15,2))
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_PVN_CHECK_02(
  PSD DATE,
  PED DATE,
  RG1 /* MONEY */ NUMERIC(15,2),
  LIKME /* MONEY */ NUMERIC(15,2))
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_PVNZ_01(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID /* TYPE OF COLUMN TREPPVNZ1.ID */ INTEGER,
  SPID /* TYPE OF COLUMN TREPPVNZ1.SPID */ INTEGER,
  DID /* TYPE OF COLUMN TREPPVNZ1.DID */ INTEGER,
  RID /* TYPE OF COLUMN TREPPVNZ1.RID */ INTEGER,
  DETE /* TYPE OF COLUMN TREPPVNZ1.DETE */ DATE,
  NRX /* TYPE OF COLUMN TREPPVNZ1.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN TREPPVNZ1.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN TREPPVNZ1.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN TREPPVNZ1.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  DOCSTR /* TYPE OF COLUMN TREPPVNZ1.DOCSTR */ VARCHAR(200) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN TREPPVNZ1.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN TREPPVNZ1.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN TREPPVNZ1.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  DESCR /* TYPE OF COLUMN TREPPVNZ1.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AA /* TYPE OF COLUMN TREPPVNZ1.AA */ NUMERIC(15,2),
  A8 /* TYPE OF COLUMN TREPPVNZ1.A8 */ NUMERIC(15,2),
  A9 /* TYPE OF COLUMN TREPPVNZ1.A9 */ NUMERIC(15,2),
  A10 /* TYPE OF COLUMN TREPPVNZ1.A10 */ NUMERIC(15,2),
  A11 /* TYPE OF COLUMN TREPPVNZ1.A11 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  A12 /* TYPE OF COLUMN TREPPVNZ1.A12 */ NUMERIC(15,2),
  A13 /* TYPE OF COLUMN TREPPVNZ1.A13 */ NUMERIC(15,2),
  A14 /* TYPE OF COLUMN TREPPVNZ1.A14 */ NUMERIC(15,2),
  A15 /* TYPE OF COLUMN TREPPVNZ1.A15 */ NUMERIC(15,2),
  A16 /* TYPE OF COLUMN TREPPVNZ1.A16 */ NUMERIC(15,2),
  A17 /* TYPE OF COLUMN TREPPVNZ1.A17 */ NUMERIC(15,2),
  A18 /* TYPE OF COLUMN TREPPVNZ1.A18 */ NUMERIC(15,2),
  A19 /* TYPE OF COLUMN TREPPVNZ1.A19 */ NUMERIC(15,2),
  A20 /* TYPE OF COLUMN TREPPVNZ1.A20 */ NUMERIC(15,2),
  A21 /* TYPE OF COLUMN TREPPVNZ1.A21 */ NUMERIC(15,2),
  A22 /* TYPE OF COLUMN TREPPVNZ1.A22 */ NUMERIC(15,2),
  A23 /* TYPE OF COLUMN TREPPVNZ1.A23 */ NUMERIC(15,2),
  A24 /* TYPE OF COLUMN TREPPVNZ1.A24 */ NUMERIC(15,2),
  A25 /* TYPE OF COLUMN TREPPVNZ1.A25 */ NUMERIC(15,2),
  A26 /* TYPE OF COLUMN TREPPVNZ1.A26 */ NUMERIC(15,2),
  A27 /* TYPE OF COLUMN TREPPVNZ1.A27 */ NUMERIC(15,2),
  A28 /* TYPE OF COLUMN TREPPVNZ1.A28 */ NUMERIC(15,2),
  A29 /* TYPE OF COLUMN TREPPVNZ1.A29 */ NUMERIC(15,2),
  A30 /* TYPE OF COLUMN TREPPVNZ1.A30 */ NUMERIC(15,2),
  A31 /* TYPE OF COLUMN TREPPVNZ1.A31 */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_SKAIDRA_01(
  SDT DATE,
  EDT DATE,
  PSUMM NUMERIC(14,5),
  PPERTYP VARCHAR(5) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_REP_SKAIDRA_02(
  SDT DATE,
  EDT DATE,
  PSUMM NUMERIC(14,5),
  PPERTYP VARCHAR(5) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN ROPS1A.ID */ INTEGER,
  SPID /* TYPE OF COLUMN ROPS1A.SPID */ INTEGER,
  DID /* TYPE OF COLUMN ROPS1A.DID */ INTEGER,
  DETE /* TYPE OF COLUMN ROPS1A.DETE */ DATE,
  NRX /* TYPE OF COLUMN ROPS1A.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  DOCTYP /* TYPE OF COLUMN ROPS1A.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP1 /* TYPE OF COLUMN ROPS1A.DOCTYP1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN ROPS1A.DOCTYP2 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN ROPS1A.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN ROPS1A.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN ROPS1A.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN ROPS1A.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN ROPS1A.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN ROPS1A.NAME2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN ROPS1A.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN ROPS1A.REGNR2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  B0 /* TYPE OF COLUMN ROPS1A.B0 */ NUMERIC(15,2),
  DESCR /* TYPE OF COLUMN ROPS1A.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  DESCR2 /* TYPE OF COLUMN ROPS1A.DESCR2 */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC1 /* TYPE OF COLUMN ROPS1A.AC1 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC2 /* TYPE OF COLUMN ROPS1A.AC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SAC1 /* TYPE OF COLUMN ROPS1A.SAC1 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SAC2 /* TYPE OF COLUMN ROPS1A.SAC2 */ VARCHAR(50) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN ROPS1A.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN ROPS1A.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN ROPS1A.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN ROPS1A.PVN */ NUMERIC(15,2),
  RAC /* TYPE OF COLUMN ROPS1A.RAC */ VARCHAR(8) /* COLLATE UTF8 - default */,
  SDB /* TYPE OF COLUMN ROPS1A.SDB */ NUMERIC(15,2),
  SCR /* TYPE OF COLUMN ROPS1A.SCR */ NUMERIC(15,2),
  RAC2 /* TYPE OF COLUMN ROPS1A.RAC2 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC3 /* TYPE OF COLUMN ROPS1A.RAC3 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  RAC4 /* TYPE OF COLUMN ROPS1A.RAC4 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  RAC5 /* TYPE OF COLUMN ROPS1A.RAC5 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  QV /* TYPE OF COLUMN ROPS1A.QV */ FLOAT,
  ZNR /* TYPE OF COLUMN ROPS1A.ZNR */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_VWOPS_FILTER_AND(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */,
  PAC11 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC12 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC13 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC14 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC15 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC21 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC22 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC23 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC24 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC25 VARCHAR(5) /* COLLATE UTF8 - default */,
  PDOCGR VARCHAR(10) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN OPS.ID */ INTEGER,
  DOCID /* TYPE OF COLUMN OPS.DOCID */ INTEGER,
  DETE /* TYPE OF COLUMN OPSD.DETE */ DATE,
  NRX /* TYPE OF COLUMN OPSD.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  ZNR /* TYPE OF COLUMN OPSD.ZNR */ INTEGER,
  DOCTYP /* TYPE OF COLUMN OPSD.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN OPSD.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN OPSD.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN DOCTYP.ID1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN OPSD.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN PERSONS.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN PERSONS.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN OPSD.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN PERSONS.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN PERSONS.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  DESCR /* TYPE OF COLUMN OPSD.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC11 /* TYPE OF COLUMN OPS.AC11 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC12 /* TYPE OF COLUMN OPS.AC12 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC13 /* TYPE OF COLUMN OPS.AC13 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  AC14 /* TYPE OF COLUMN OPS.AC14 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC15 /* TYPE OF COLUMN OPS.AC15 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  AC21 /* TYPE OF COLUMN OPS.AC21 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC22 /* TYPE OF COLUMN OPS.AC22 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC23 /* TYPE OF COLUMN OPS.AC23 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  AC24 /* TYPE OF COLUMN OPS.AC24 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC25 /* TYPE OF COLUMN OPS.AC25 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN OPS.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN OPS.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN OPS.SUMM */ NUMERIC(15,2),
  QV /* TYPE OF COLUMN OPS.QV */ FLOAT,
  DESCR2 /* TYPE OF COLUMN OPS.DESCR */ VARCHAR(50) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_VWOPS_FILTER_OR(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */,
  PAC11 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC12 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC13 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC14 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC15 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC21 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC22 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC23 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC24 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC25 VARCHAR(5) /* COLLATE UTF8 - default */,
  PDOCGR VARCHAR(10) /* COLLATE UTF8 - default */)
RETURNS (
  ID /* TYPE OF COLUMN OPS.ID */ INTEGER,
  DOCID /* TYPE OF COLUMN OPS.DOCID */ INTEGER,
  DETE /* TYPE OF COLUMN OPSD.DETE */ DATE,
  NRX /* TYPE OF COLUMN OPSD.NRX */ VARCHAR(5) /* COLLATE UTF8 - default */,
  ZNR /* TYPE OF COLUMN OPSD.ZNR */ INTEGER,
  DOCTYP /* TYPE OF COLUMN OPSD.DOCTYP */ VARCHAR(10) /* COLLATE UTF8 - default */,
  DOCST /* TYPE OF COLUMN OPSD.DOCST */ VARCHAR(6) /* COLLATE UTF8 - default */,
  DOCNR /* TYPE OF COLUMN OPSD.DOCNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  DOCTYP2 /* TYPE OF COLUMN DOCTYP.ID1 */ VARCHAR(10) /* COLLATE UTF8 - default */,
  CLID /* TYPE OF COLUMN OPSD.CLID */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME /* TYPE OF COLUMN PERSONS.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR /* TYPE OF COLUMN PERSONS.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  CLID2 /* TYPE OF COLUMN OPSD.CLID2 */ VARCHAR(15) /* COLLATE UTF8 - default */,
  NAME2 /* TYPE OF COLUMN PERSONS.NAME */ VARCHAR(50) /* COLLATE UTF8 - default */,
  REGNR2 /* TYPE OF COLUMN PERSONS.REGNR */ VARCHAR(15) /* COLLATE UTF8 - default */,
  DESCR /* TYPE OF COLUMN OPSD.DESCR */ VARCHAR(80) /* COLLATE UTF8 - default */,
  AC11 /* TYPE OF COLUMN OPS.AC11 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC12 /* TYPE OF COLUMN OPS.AC12 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC13 /* TYPE OF COLUMN OPS.AC13 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  AC14 /* TYPE OF COLUMN OPS.AC14 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC15 /* TYPE OF COLUMN OPS.AC15 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  AC21 /* TYPE OF COLUMN OPS.AC21 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC22 /* TYPE OF COLUMN OPS.AC22 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC23 /* TYPE OF COLUMN OPS.AC23 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  AC24 /* TYPE OF COLUMN OPS.AC24 */ VARCHAR(8) /* COLLATE UTF8 - default */,
  AC25 /* TYPE OF COLUMN OPS.AC25 */ VARCHAR(5) /* COLLATE UTF8 - default */,
  SUMMC /* TYPE OF COLUMN OPS.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN OPS.CUR */ VARCHAR(3) /* COLLATE UTF8 - default */,
  SUMM /* TYPE OF COLUMN OPS.SUMM */ NUMERIC(15,2),
  QV /* TYPE OF COLUMN OPS.QV */ FLOAT,
  DESCR2 /* TYPE OF COLUMN OPS.DESCR */ VARCHAR(50) /* COLLATE UTF8 - default */)
AS
BEGIN
  SUSPEND;
END
^


/******************************************************************************/
/****                           Altering tables                            ****/
/******************************************************************************/
SET TERM ; ^

ALTER TABLE ACP21 ALTER COLUMN NAME
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE PERSONS ALTER COLUMN NAME
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE ROPS1A ALTER COLUMN NAME
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE ROPS1A ALTER COLUMN NAME2
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE ROPS1A ALTER COLUMN SAC1
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE ROPS1A ALTER COLUMN SAC2
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE ROPS2A ALTER COLUMN NAME1
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE ROPS2B ALTER COLUMN NAME
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE ROPS3A ALTER COLUMN NAME
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE TABLE1 ALTER COLUMN FIELD3
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE TABLE1 ALTER COLUMN FIELD4
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE TABLE1 ALTER COLUMN FIELD6
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE TABLE1 ALTER COLUMN FIELD7
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE TABLE1 ALTER COLUMN FIELD9
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE TREPA1 ALTER COLUMN NM
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE TREPDARZ1 ALTER COLUMN NAME
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE TREPMT ALTER COLUMN ACN1
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE TREPMT ALTER COLUMN ACN2
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE TREPPVNZ1 ALTER COLUMN NAME
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE TREPUDOCS ALTER COLUMN TT
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE VW_OPS ALTER COLUMN NAME
  TYPE VARCHAR(100) CHARACTER SET UTF8;

ALTER TABLE VW_OPS ALTER COLUMN NAME2
  TYPE VARCHAR(100) CHARACTER SET UTF8;


/******************************************************************************/
/****                   Restoring deactivated procedures                   ****/
/******************************************************************************/
SET TERM ^ ;

ALTER PROCEDURE SP_CURRCHECK_01(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */,
  PCUR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
    FOR SELECT DISTINCT
        gen_id(GEN_ROPS2A_ID, 1) as id,
        current_connection as spid,
        OPSd.id AS did, 
        OPSd.Dete AS Dete,
        OPSd.NrX AS NrX,
        OPSd.DocTyp AS DocTyp,
        DocTyp.id1 AS DocTyp1, 
        null as DocTyp2,
        OPSd.DocSt AS DocSt,
        OPSd.DocNr AS DocNr,
        OPSd.ClId AS Clid,
        OPSd.ClId2 AS Clid2,
        Persons.Name AS Name, 
        Persons2.Name AS Name2, 
        Persons.RegNr AS RegNr,
        Persons2.RegNr AS RegNr2,
        0 AS b0, 
        OPSd.Descr AS Descr,
        null AS Descr2,
        null AS AC1,
        null AS AC2,
        null AS SAC1,
        null AS SAC2,
        0 AS SummC,
        null AS Cur,
        OPSd.Summ AS Summ,
        OPSd.PVN AS PVN,
        null AS Rac,
        0 AS Sdb,
        0 AS SCr,
        null AS Rac2,
        null AS Rac3,
        null AS Rac4,
        null AS Rac5,
        0 AS qv,
        OPSd.ZNR AS ZNR

    FROM OPSd
        JOIN OPS ON OPSd.id = OPS.DocId
        LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
        LEFT JOIN Persons ON OPSd.ClId = Persons.ClId
        LEFT JOIN Persons AS Persons2 ON OPSd.ClId2 = Persons2.ClId        
        LEFT JOIN Currency ON Currency.id = OPS.cur AND Currency.dete = OPSd.Dete
    WHERE 
        OPSd.Dete BETWEEN :sdt AND :edt AND
        OPS.Cur <> 'EUR' AND
        (OPS.AC11 LIKE :pac OR OPS.AC21 LIKE :pac) AND
        (
            Currency.id IS NULL OR
            ROUND(OPS.SummC*Currency.rate,2) <> OPS.Summ
        )
    ORDER BY Dete, DocId


    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_APGR_01(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) as ID,
        current_connection as SPID,
        :PAC as AC,
        null as RAC,
        acp21.name as NAME,
        0 as b0,
        coalesce(T2.ADb, 0.00) as sdb,
        coalesce(T2.ACr, 0.00) as scr,
        coalesce(T2.BDb, 0.00) as tdb,
        coalesce(T2.BCr, 0.00) as tcr,
        null as clid,
        null as name1,
        null as regnr,
        null as rname
    FROM
    (
        SELECT SUM(SDb) AS ADb, SUM(SCr) AS ACr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC11 AS AC,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SDb,
                0.00 as SCr,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TDb,
                0.00 as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE OPSd.Dete <= :edt AND OPS.AC11 LIKE :pac

            UNION ALL

            SELECT 
                OPS.AC21 AS AC,
                0.00 as SDb,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SCr,
                0.00 as TDb,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE OPSd.Dete <= :edt AND OPS.AC21 LIKE :pac

            UNION ALL

            SELECT 
                Bal0.AC11 AS AC,
                Bal0.SummD AS SDb,
                Bal0.SummC AS SCr,
                0.00 AS TDb,
                0.00 AS TCr
            FROM Bal0
            WHERE Bal0.AC11 LIKE :pac

        ) AS T1

    ) AS T2
    LEFT JOIN AcP21 ON :pac = AcP21.AC

    INTO
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname

    do
    begin
        suspend;
    end

end
^

ALTER PROCEDURE SP_REP_APGR_01_CLID(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) as ID,
        current_connection as SPID,
        :PAC as AC,
        null as RAC,
        acp21.name as NAME,
        0 as b0,
        coalesce(T2.ADb, 0.00) as sdb,
        coalesce(T2.ACr, 0.00) as scr,
        coalesce(T2.BDb, 0.00) as tdb,
        coalesce(T2.BCr, 0.00) as tcr,
        :pclid as clid,
        Persons.Name as name1,
        Persons.regnr as regnr,
        null as rname
    FROM
    (
        SELECT SUM(SDb) AS ADb, SUM(SCr) AS ACr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC11 AS AC,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SDb,
                0.00 as SCr,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TDb,
                0.00 as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE
                OPSd.Dete <= :edt AND
                OPS.AC11 LIKE :pac AND
                OPSd.clid = :pclid


            UNION ALL

            SELECT 
                OPS.AC21 AS AC,
                0.00 as SDb,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SCr,
                0.00 as TDb,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE
                OPSd.Dete <= :edt AND
                OPS.AC21 LIKE :pac AND
                OPSd.clid = :pclid

            UNION ALL

            SELECT 
                Bal0.AC11 AS AC,
                Bal0.SummD AS SDb,
                Bal0.SummC AS SCr,
                0.00 AS TDb,
                0.00 AS TCr
            FROM Bal0
            WHERE
                Bal0.AC11 LIKE :pac AND
                Bal0.ClId = :pclid

        ) AS T1

    ) AS T2
    LEFT JOIN AcP21 ON :pac = AcP21.AC
    LEFT JOIN Persons ON :pclid = Persons.ClId

    INTO
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname

    do
    begin
        suspend;
    end

end
^

ALTER PROCEDURE SP_REP_APGR_01_CLID2(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) as ID,
        current_connection as SPID,
        :PAC as AC,
        null as RAC,
        acp21.name as NAME,
        0 as b0,
        coalesce(T2.ADb, 0.00) as sdb,
        coalesce(T2.ACr, 0.00) as scr,
        coalesce(T2.BDb, 0.00) as tdb,
        coalesce(T2.BCr, 0.00) as tcr,
        :pclid as clid,
        Persons.Name as name1,
        Persons.regnr as regnr,
        null as rname
    FROM
    (
        SELECT SUM(SDb) AS ADb, SUM(SCr) AS ACr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC11 AS AC,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SDb,
                0.00 as SCr,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TDb,
                0.00 as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE
                OPSd.Dete <= :edt AND
                OPS.AC11 LIKE :pac AND
                OPSd.clid2 = :pclid


            UNION ALL

            SELECT 
                OPS.AC21 AS AC,
                0.00 as SDb,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SCr,
                0.00 as TDb,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE
                OPSd.Dete <= :edt AND
                OPS.AC21 LIKE :pac AND
                OPSd.clid2 = :pclid

            UNION ALL

            SELECT 
                Bal0.AC11 AS AC,
                Bal0.SummD AS SDb,
                Bal0.SummC AS SCr,
                0.00 AS TDb,
                0.00 AS TCr
            FROM Bal0
            WHERE
                Bal0.AC11 LIKE :pac AND
                Bal0.ClId = :pclid

        ) AS T1

    ) AS T2
    LEFT JOIN AcP21 ON :pac = AcP21.AC
    LEFT JOIN Persons ON :pclid = Persons.ClId

    INTO
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname

    do
    begin
        suspend;
    end

end
^

ALTER PROCEDURE SP_REP_APGR_02(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) as ID,
        current_connection as SPID,
        T2.AC as AC,
        null as RAC,
        acp21.name as NAME,
        T2.ADb - T2.ACr as b0,
        T2.ADb as sdb,
        T2.ACr as scr,
        T2.BDb as tdb,
        T2.BCr as tcr,
        null as clid,
        null as name1,
        null as regnr,
        null as rname
    FROM
    (
        SELECT AC, SUM(SDb) AS ADb, SUM(SCr) AS ACr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC11 AS AC,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SDb,
                0.00 as SCr,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TDb,
                0.00 as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE OPSd.Dete <= :edt AND OPS.AC11 LIKE :pac

            UNION ALL

            SELECT 
                OPS.AC21 AS AC,
                0.00 as SDb,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SCr,
                0.00 as TDb,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE OPSd.Dete <= :edt AND OPS.AC21 LIKE :pac

            UNION ALL

            SELECT 
                Bal0.AC11 AS AC,
                Bal0.SummD AS SDb,
                Bal0.SummC AS SCr,
                0.00 AS TDb,
                0.00 AS TCr
            FROM Bal0
            WHERE Bal0.AC11 LIKE :pac

        ) AS T1
        GROUP BY AC

    ) AS T2
    LEFT JOIN AcP21 ON T2.AC = AcP21.AC

    WHERE 
        (T2.ADb - T2.ACr) <> 0.00 OR
        T2.BDb <> 0.00 OR
        T2.BCr <> 0.00

    ORDER BY AC

    INTO
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname

    do
    begin
        suspend;
    end

end
^

ALTER PROCEDURE SP_REP_APGR_02_CLID(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) as ID,
        current_connection as SPID,
        T2.AC as AC,
        null as RAC,
        acp21.name as NAME,
        T2.ADb - T2.ACr as b0,
        T2.ADb as sdb,
        T2.ACr as scr,
        T2.BDb as tdb,
        T2.BCr as tcr,
        T2.Clid as clid,
        Persons.Name as name1,
        Persons.regnr as regnr,
        null as rname
    FROM
    (
        SELECT T1.AC, T1.clid, SUM(SDb) AS ADb, SUM(SCr) AS ACr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC11 AS AC,
                OPSd.ClId AS Clid,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SDb,
                0.00 as SCr,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TDb,
                0.00 as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE
                OPSd.Dete <= :edt AND
                OPS.AC11 LIKE :pac AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)


            UNION ALL

            SELECT 
                OPS.AC21 AS AC,
                OPSd.ClId AS Clid,
                0.00 as SDb,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SCr,
                0.00 as TDb,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE
                OPSd.Dete <= :edt AND
                OPS.AC21 LIKE :pac AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                Bal0.AC11 AS AC,
                Bal0.ClId AS Clid,
                Bal0.SummD AS SDb,
                Bal0.SummC AS SCr,
                0.00 AS TDb,
                0.00 AS TCr
            FROM Bal0
            WHERE
                Bal0.AC11 LIKE :pac AND
                (:pclid IS NULL OR Bal0.ClId = :pclid)

        ) AS T1
        GROUP BY T1.AC, T1.clid

    ) AS T2
    LEFT JOIN AcP21 ON T2.AC = AcP21.AC
    LEFT JOIN Persons ON T2.Clid = Persons.ClId

    WHERE 
        (T2.ADb - T2.ACr) <> 0.00 OR
        T2.BDb <> 0.00 OR
        T2.BCr <> 0.00

    ORDER BY AC, Clid

    INTO
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname

    do
    begin
        suspend;
    end

end
^

ALTER PROCEDURE SP_REP_APGR_10(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) as ID,
        current_connection as SPID,
        :PAC as AC,
        null as RAC,
        acp21.name as NAME,
        0 as b0,
        coalesce(T2.ADb, 0.00) as sdb,
        coalesce(T2.ACr, 0.00) as scr,
        coalesce(T2.BDb, 0.00) as tdb,
        coalesce(T2.BCr, 0.00) as tcr,
        null as clid,
        null as name1,
        null as regnr,
        null as rname
    FROM
    (
        SELECT SUM(SDb) AS ADb, SUM(SCr) AS ACr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC11 AS AC,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SDb,
                0.00 as SCr,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TDb,
                0.00 as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE OPSd.Dete <= :edt AND OPS.AC11 LIKE :pac

            UNION ALL

            SELECT 
                OPS.AC21 AS AC,
                0.00 as SDb,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SCr,
                0.00 as TDb,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE OPSd.Dete <= :edt AND OPS.AC21 LIKE :pac

            UNION ALL

            SELECT 
                Bal0.AC11 AS AC,
                Bal0.SummD AS SDb,
                Bal0.SummC AS SCr,
                0.00 AS TDb,
                0.00 AS TCr
            FROM Bal0
            WHERE Bal0.AC11 LIKE :pac

        ) AS T1

    ) AS T2
    LEFT JOIN AcP21 ON :pac = AcP21.AC

    INTO
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname

    do
    begin
        suspend;
    end

end
^

ALTER PROCEDURE SP_REP_APGR_10_CLID(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) as ID,
        current_connection as SPID,
        T2.AC as AC,
        null as RAC,
        acp21.name as NAME,
        0 as b0,
        T2.ADb as sdb,
        T2.ACr as scr,
        T2.BDb as tdb,
        T2.BCr as tcr,
        T2.Clid as clid,
        Persons.Name as name1,
        Persons.regnr as regnr,
        null as rname
    FROM
    (
        SELECT T1.AC, T1.clid, SUM(SDb) AS ADb, SUM(SCr) AS ACr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC11 AS AC,
                OPSd.ClId AS Clid,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SDb,
                0.00 as SCr,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TDb,
                0.00 as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE
                OPSd.Dete <= :edt AND
                OPS.AC11 LIKE :pac AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)


            UNION ALL

            SELECT 
                OPS.AC21 AS AC,
                OPSd.ClId AS Clid,
                0.00 as SDb,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SCr,
                0.00 as TDb,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE
                OPSd.Dete <= :edt AND
                OPS.AC21 LIKE :pac AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                Bal0.AC11 AS AC,
                Bal0.ClId AS Clid,
                Bal0.SummD AS SDb,
                Bal0.SummC AS SCr,
                0.00 AS TDb,
                0.00 AS TCr
            FROM Bal0
            WHERE
                Bal0.AC11 LIKE :pac AND
                (:pclid IS NULL OR Bal0.ClId = :pclid)

        ) AS T1
        GROUP BY T1.AC, T1.clid

    ) AS T2
    LEFT JOIN AcP21 ON :pac = AcP21.AC
    LEFT JOIN Persons ON T2.Clid = Persons.ClId

    WHERE 
        (T2.ADb - T2.ACr) <> 0.00 OR
        T2.BDb <> 0.00 OR
        T2.BCr <> 0.00

    ORDER BY AC, Clid

    INTO
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname

    do
    begin
        suspend;
    end

end
^

ALTER PROCEDURE SP_REP_APGR_11(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) as ID,
        current_connection as SPID,
        T2.AC as AC,
        null as RAC,
        acp21.name as NAME,
        T2.ADb - T2.ACr as b0,
        T2.ADb as sdb,
        T2.ACr as scr,
        T2.BDb as tdb,
        T2.BCr as tcr,
        null as clid,
        null as name1,
        null as regnr,
        null as rname
    FROM
    (
        SELECT AC, SUM(SDb) AS ADb, SUM(SCr) AS ACr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC11 AS AC,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SDb,
                0.00 as SCr,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TDb,
                0.00 as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE OPSd.Dete <= :edt AND OPS.AC11 LIKE :pac

            UNION ALL

            SELECT 
                OPS.AC21 AS AC,
                0.00 as SDb,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SCr,
                0.00 as TDb,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE OPSd.Dete <= :edt AND OPS.AC21 LIKE :pac

            UNION ALL

            SELECT 
                Bal0.AC11 AS AC,
                Bal0.SummD AS SDb,
                Bal0.SummC AS SCr,
                0.00 AS TDb,
                0.00 AS TCr
            FROM Bal0
            WHERE Bal0.AC11 LIKE :pac

        ) AS T1
        GROUP BY AC

    ) AS T2
    LEFT JOIN AcP21 ON T2.AC = AcP21.AC

    WHERE 
        (T2.ADb - T2.ACr) <> 0.00 OR
        T2.BDb <> 0.00 OR
        T2.BCr <> 0.00

    ORDER BY AC

    INTO
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname

    do
    begin
        suspend;
    end

end
^

ALTER PROCEDURE SP_REP_APGR_21(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PACLEN INTEGER)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) as ID,
        current_connection as SPID,
        T2.AC as AC,
        null as RAC,
        acp21.name as NAME,
        T2.ADb - T2.ACr as b0,
        T2.ADb as sdb,
        T2.ACr as scr,
        T2.BDb as tdb,
        T2.BCr as tcr,
        null as clid,
        null as name1,
        null as regnr,
        null as rname
    FROM
    (
        SELECT AC, SUM(SDb) AS ADb, SUM(SCr) AS ACr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                LEFT(OPS.AC11, :paclen) AS AC,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SDb,
                0.00 as SCr,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TDb,
                0.00 as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE OPSd.Dete <= :edt AND OPS.AC11 LIKE :pac

            UNION ALL

            SELECT 
                LEFT(OPS.AC21, :paclen) AS AC,
                0.00 as SDb,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SCr,
                0.00 as TDb,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE OPSd.Dete <= :edt AND OPS.AC21 LIKE :pac

            UNION ALL

            SELECT 
                LEFT(Bal0.AC11, :paclen) AS AC,
                Bal0.SummD AS SDb,
                Bal0.SummC AS SCr,
                0.00 AS TDb,
                0.00 AS TCr
            FROM Bal0
            WHERE Bal0.AC11 LIKE :pac

        ) AS T1
        GROUP BY AC

    ) AS T2
    LEFT JOIN AcP21 ON T2.AC = AcP21.AC

    WHERE 
        (T2.ADb - T2.ACr) <> 0.00 OR
        T2.BDb <> 0.00 OR
        T2.BCr <> 0.00

    ORDER BY AC

    INTO
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname

    do
    begin
        suspend;
    end

end
^

ALTER PROCEDURE SP_REP_APGR_CUR_01(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCUR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) as ID,
        current_connection as SPID,
        T2.AC as AC,
        null as RAC,
        acp21.name as NAME,
        T2.ADb - T2.ACr as b0,
        T2.ADb as sdb,
        T2.ACr as scr,
        T2.BDb as tdb,
        T2.BCr as tcr,
        null as clid,
        null as name1,
        null as regnr,
        null as rname
    FROM
    (
        SELECT AC, SUM(SDb) AS ADb, SUM(SCr) AS ACr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC11 AS AC,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SDb,
                0.00 as SCr,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TDb,
                0.00 as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE
                OPSd.Dete <= :edt AND
                OPS.AC11 = :pac AND
                OPS.Cur = :pcur

            UNION ALL

            SELECT 
                OPS.AC21 AS AC,
                0.00 as SDb,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SCr,
                0.00 as TDb,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE
                OPSd.Dete <= :edt AND
                OPS.AC21 = :pac AND
                OPS.Cur = :pcur

            UNION ALL

            SELECT 
                Bal0.AC11 AS AC,
                Bal0.SummD AS SDb,
                Bal0.SummC AS SCr,
                0.00 AS TDb,
                0.00 AS TCr
            FROM Bal0
            WHERE Bal0.AC11 = :pac AND Bal0.Cur = :pcur

        ) AS T1
        GROUP BY AC

    ) AS T2
    LEFT JOIN AcP21 ON T2.AC = AcP21.AC

    WHERE 
        (T2.ADb - T2.ACr) <> 0.00 OR
        T2.BDb <> 0.00 OR
        T2.BCr <> 0.00

    ORDER BY AC

    INTO
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname

    do
    begin
        suspend;
    end

end
^

ALTER PROCEDURE SP_REP_APGR_CUR_01_CLID(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(8) /* COLLATE UTF8 - default */,
  PCUR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) as ID,
        current_connection as SPID,
        T2.AC as AC,
        null as RAC,
        acp21.name as NAME,
        T2.ADb - T2.ACr as b0,
        T2.ADb as sdb,
        T2.ACr as scr,
        T2.BDb as tdb,
        T2.BCr as tcr,
        T2.Clid as clid,
        Persons.Name as name1,
        Persons.regnr as regnr,
        null as rname
    FROM
    (
        SELECT AC, T1.Clid AS Clid, SUM(SDb) AS ADb, SUM(SCr) AS ACr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC11 AS AC,
                OPSd.ClId AS Clid,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SDb,
                0.00 as SCr,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TDb,
                0.00 as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE
                OPSd.Dete <= :edt AND
                OPS.AC11 LIKE :pac AND
                OPS.Cur = :pcur AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                OPS.AC21 AS AC,
                OPSd.ClId AS Clid,
                0.00 as SDb,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END as SCr,
                0.00 as TDb,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END as TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE
                OPSd.Dete <= :edt AND
                OPS.AC21 = :pac AND
                OPS.Cur = :pcur AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                Bal0.AC11 AS AC,
                Bal0.ClId AS Clid,
                Bal0.SummD AS SDb,
                Bal0.SummC AS SCr,
                0.00 AS TDb,
                0.00 AS TCr
            FROM Bal0
            WHERE
                Bal0.AC11 = :pac AND
                Bal0.Cur = :pcur AND
                (:pclid IS NULL OR Bal0.ClId = :pclid)

        ) AS T1
        GROUP BY AC, T1.Clid

    ) AS T2
    LEFT JOIN AcP21 ON T2.AC = AcP21.AC
    LEFT JOIN Persons ON T2.Clid = Persons.ClId

    WHERE 
        (T2.ADb - T2.ACr) <> 0.00 OR
        T2.BDb <> 0.00 OR
        T2.BCr <> 0.00

    ORDER BY AC

    INTO
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname

    do
    begin
        suspend;
    end

end
^

ALTER PROCEDURE SP_REP_APGR_MT_11(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN TREPMT.ID,
  SPID TYPE OF COLUMN TREPMT.SPID,
  AD TYPE OF COLUMN TREPMT.AD /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN TREPMT.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN TREPMT.AC2 /* COLLATE UTF8 - default */,
  ACN1 TYPE OF COLUMN TREPMT.ACN1 /* COLLATE UTF8 - default */,
  ACN2 TYPE OF COLUMN TREPMT.ACN2 /* COLLATE UTF8 - default */,
  M1 TYPE OF COLUMN TREPMT.M1,
  M2 TYPE OF COLUMN TREPMT.M2,
  M3 TYPE OF COLUMN TREPMT.M3,
  M4 TYPE OF COLUMN TREPMT.M4,
  M5 TYPE OF COLUMN TREPMT.M5,
  M6 TYPE OF COLUMN TREPMT.M6,
  M7 TYPE OF COLUMN TREPMT.M7,
  M8 TYPE OF COLUMN TREPMT.M8,
  M9 TYPE OF COLUMN TREPMT.M9,
  M10 TYPE OF COLUMN TREPMT.M10,
  M11 TYPE OF COLUMN TREPMT.M11,
  M12 TYPE OF COLUMN TREPMT.M12,
  N1 TYPE OF COLUMN TREPMT.N1,
  N2 TYPE OF COLUMN TREPMT.N2,
  N3 TYPE OF COLUMN TREPMT.N3,
  N4 TYPE OF COLUMN TREPMT.N4,
  N5 TYPE OF COLUMN TREPMT.N5,
  N6 TYPE OF COLUMN TREPMT.N6,
  N7 TYPE OF COLUMN TREPMT.N7,
  N8 TYPE OF COLUMN TREPMT.N8,
  N9 TYPE OF COLUMN TREPMT.N9,
  N10 TYPE OF COLUMN TREPMT.N10,
  N11 TYPE OF COLUMN TREPMT.N11,
  N12 TYPE OF COLUMN TREPMT.N12,
  MT TYPE OF COLUMN TREPMT.MT,
  NT TYPE OF COLUMN TREPMT.NT)
AS
begin
    FOR SELECT
        gen_id(GEN_TREPMT_ID, 1) AS id,
        current_connection AS spid,
        null AS ad,
        T3.AC AS AC1,
        null AS AC2,
        AcP21.Name AS ACN1,
        NULL AS ACN2,
        M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12,
        N1,N2,N3,N4,N5,N6,N7,N8,N9,N10,N11,N12,
        0 AS MT, 0 as NT
    FROM
    (
        SELECT 
            AC,
            SUM(CASE WHEN MT = 1 THEN ADb ELSE 0.00 END) AS M1,
            SUM(CASE WHEN MT = 2 THEN ADb ELSE 0.00 END) AS M2,
            SUM(CASE WHEN MT = 3 THEN ADb ELSE 0.00 END) AS M3,
            SUM(CASE WHEN MT = 4 THEN ADb ELSE 0.00 END) AS M4,
            SUM(CASE WHEN MT = 5 THEN ADb ELSE 0.00 END) AS M5,
            SUM(CASE WHEN MT = 6 THEN ADb ELSE 0.00 END) AS M6,
            SUM(CASE WHEN MT = 7 THEN ADb ELSE 0.00 END) AS M7,
            SUM(CASE WHEN MT = 8 THEN ADb ELSE 0.00 END) AS M8,
            SUM(CASE WHEN MT = 9 THEN ADb ELSE 0.00 END) AS M9,
            SUM(CASE WHEN MT = 10 THEN ADb ELSE 0.00 END) AS M10,
            SUM(CASE WHEN MT = 11 THEN ADb ELSE 0.00 END) AS M11,
            SUM(CASE WHEN MT = 12 THEN ADb ELSE 0.00 END) AS M12,
            
            SUM(CASE WHEN MT = 1 THEN ACr ELSE 0.00 END) AS N1,
            SUM(CASE WHEN MT = 2 THEN ACr ELSE 0.00 END) AS N2,
            SUM(CASE WHEN MT = 3 THEN ACr ELSE 0.00 END) AS N3,
            SUM(CASE WHEN MT = 4 THEN ACr ELSE 0.00 END) AS N4,
            SUM(CASE WHEN MT = 5 THEN ACr ELSE 0.00 END) AS N5,
            SUM(CASE WHEN MT = 6 THEN ACr ELSE 0.00 END) AS N6,
            SUM(CASE WHEN MT = 7 THEN ACr ELSE 0.00 END) AS N7,
            SUM(CASE WHEN MT = 8 THEN ACr ELSE 0.00 END) AS N8,
            SUM(CASE WHEN MT = 9 THEN ACr ELSE 0.00 END) AS N9,
            SUM(CASE WHEN MT = 10 THEN ACr ELSE 0.00 END) AS N10,
            SUM(CASE WHEN MT = 11 THEN ACr ELSE 0.00 END) AS N11,
            SUM(CASE WHEN MT = 12 THEN ACr ELSE 0.00 END) AS N12

        FROM
        (
            SELECT AC, MT, SUM(SDb) AS ADb, SUM(SCr) AS ACr
            FROM
            (
                SELECT 
                    OPS.AC11 AS AC,
                    EXTRACT(MONTH FROM OPSd.Dete) AS MT,
                    OPS.Summ AS SDb,
                    0.00 AS SCr

                FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
                WHERE OPSd.Dete BETWEEN :sdt AND :edt AND OPS.AC11 LIKE :pac

                UNION ALL

                SELECT 
                    OPS.AC21 AS AC,
                    EXTRACT(MONTH FROM OPSd.Dete) AS MT,
                    0.00 AS SDb,
                    OPS.Summ AS SCr

                FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
                WHERE OPSd.Dete BETWEEN :sdt AND :edt AND OPS.AC21 LIKE :pac

            ) AS T1

            GROUP BY T1.AC, T1.MT

        ) AS T2
        GROUP BY T2.AC
    ) AS T3

    LEFT JOIN AcP21 ON AcP21.AC = T3.AC
    ORDER BY AC1

    into
        id, spid, ad, ac1, ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_APGR_MT_12(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN TREPMT.ID,
  SPID TYPE OF COLUMN TREPMT.SPID,
  AD TYPE OF COLUMN TREPMT.AD /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN TREPMT.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN TREPMT.AC2 /* COLLATE UTF8 - default */,
  ACN1 TYPE OF COLUMN TREPMT.ACN1 /* COLLATE UTF8 - default */,
  ACN2 TYPE OF COLUMN TREPMT.ACN2 /* COLLATE UTF8 - default */,
  M1 TYPE OF COLUMN TREPMT.M1,
  M2 TYPE OF COLUMN TREPMT.M2,
  M3 TYPE OF COLUMN TREPMT.M3,
  M4 TYPE OF COLUMN TREPMT.M4,
  M5 TYPE OF COLUMN TREPMT.M5,
  M6 TYPE OF COLUMN TREPMT.M6,
  M7 TYPE OF COLUMN TREPMT.M7,
  M8 TYPE OF COLUMN TREPMT.M8,
  M9 TYPE OF COLUMN TREPMT.M9,
  M10 TYPE OF COLUMN TREPMT.M10,
  M11 TYPE OF COLUMN TREPMT.M11,
  M12 TYPE OF COLUMN TREPMT.M12,
  N1 TYPE OF COLUMN TREPMT.N1,
  N2 TYPE OF COLUMN TREPMT.N2,
  N3 TYPE OF COLUMN TREPMT.N3,
  N4 TYPE OF COLUMN TREPMT.N4,
  N5 TYPE OF COLUMN TREPMT.N5,
  N6 TYPE OF COLUMN TREPMT.N6,
  N7 TYPE OF COLUMN TREPMT.N7,
  N8 TYPE OF COLUMN TREPMT.N8,
  N9 TYPE OF COLUMN TREPMT.N9,
  N10 TYPE OF COLUMN TREPMT.N10,
  N11 TYPE OF COLUMN TREPMT.N11,
  N12 TYPE OF COLUMN TREPMT.N12,
  MT TYPE OF COLUMN TREPMT.MT,
  NT TYPE OF COLUMN TREPMT.NT)
AS
begin
    FOR SELECT
        gen_id(GEN_TREPMT_ID, 1) AS id,
        current_connection AS spid,
        null AS ad,
        T3.AC1 AS AC1,
        T3.AC2 AS AC2,
        AcP21.Name AS ACN1,
        AcP24.Name AS ACN2,
        M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12,
        N1,N2,N3,N4,N5,N6,N7,N8,N9,N10,N11,N12,
        0 AS MT, 0 as NT
    FROM
    (
        SELECT 
            AC1, AC2,
            SUM(CASE WHEN MT = 1 THEN ADb ELSE 0.00 END) AS M1,
            SUM(CASE WHEN MT = 2 THEN ADb ELSE 0.00 END) AS M2,
            SUM(CASE WHEN MT = 3 THEN ADb ELSE 0.00 END) AS M3,
            SUM(CASE WHEN MT = 4 THEN ADb ELSE 0.00 END) AS M4,
            SUM(CASE WHEN MT = 5 THEN ADb ELSE 0.00 END) AS M5,
            SUM(CASE WHEN MT = 6 THEN ADb ELSE 0.00 END) AS M6,
            SUM(CASE WHEN MT = 7 THEN ADb ELSE 0.00 END) AS M7,
            SUM(CASE WHEN MT = 8 THEN ADb ELSE 0.00 END) AS M8,
            SUM(CASE WHEN MT = 9 THEN ADb ELSE 0.00 END) AS M9,
            SUM(CASE WHEN MT = 10 THEN ADb ELSE 0.00 END) AS M10,
            SUM(CASE WHEN MT = 11 THEN ADb ELSE 0.00 END) AS M11,
            SUM(CASE WHEN MT = 12 THEN ADb ELSE 0.00 END) AS M12,
            
            SUM(CASE WHEN MT = 1 THEN ACr ELSE 0.00 END) AS N1,
            SUM(CASE WHEN MT = 2 THEN ACr ELSE 0.00 END) AS N2,
            SUM(CASE WHEN MT = 3 THEN ACr ELSE 0.00 END) AS N3,
            SUM(CASE WHEN MT = 4 THEN ACr ELSE 0.00 END) AS N4,
            SUM(CASE WHEN MT = 5 THEN ACr ELSE 0.00 END) AS N5,
            SUM(CASE WHEN MT = 6 THEN ACr ELSE 0.00 END) AS N6,
            SUM(CASE WHEN MT = 7 THEN ACr ELSE 0.00 END) AS N7,
            SUM(CASE WHEN MT = 8 THEN ACr ELSE 0.00 END) AS N8,
            SUM(CASE WHEN MT = 9 THEN ACr ELSE 0.00 END) AS N9,
            SUM(CASE WHEN MT = 10 THEN ACr ELSE 0.00 END) AS N10,
            SUM(CASE WHEN MT = 11 THEN ACr ELSE 0.00 END) AS N11,
            SUM(CASE WHEN MT = 12 THEN ACr ELSE 0.00 END) AS N12

        FROM
        (
            SELECT AC1, AC2, MT, SUM(SDb) AS ADb, SUM(SCr) AS ACr
            FROM
            (
                SELECT 
                    OPS.AC11 AS AC1,
                    OPS.AC14 AS AC2,
                    EXTRACT(MONTH FROM OPSd.Dete) AS MT,
                    OPS.Summ AS SDb,
                    0.00 AS SCr

                FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
                WHERE OPSd.Dete BETWEEN :sdt AND :edt AND OPS.AC11 LIKE :pac

                UNION ALL

                SELECT 
                    OPS.AC21 AS AC,
                    OPS.AC24 AS AC2,
                    EXTRACT(MONTH FROM OPSd.Dete) AS MT,
                    0.00 AS SDb,
                    OPS.Summ AS SCr

                FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
                WHERE OPSd.Dete BETWEEN :sdt AND :edt AND OPS.AC21 LIKE :pac

            ) AS T1

            GROUP BY T1.AC2, T1.AC1, T1.MT

        ) AS T2
        GROUP BY T2.AC2, T2.AC1
    ) AS T3

    LEFT JOIN AcP21 ON AcP21.AC = T3.AC1
    LEFT JOIN AcP24 ON AcP24.idx = T3.AC2

    ORDER BY AC2, AC1

    into
        id, spid, ad, ac1, ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_APGR_MT_21(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN TREPMT.ID,
  SPID TYPE OF COLUMN TREPMT.SPID,
  AD TYPE OF COLUMN TREPMT.AD /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN TREPMT.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN TREPMT.AC2 /* COLLATE UTF8 - default */,
  ACN1 TYPE OF COLUMN TREPMT.ACN1 /* COLLATE UTF8 - default */,
  ACN2 TYPE OF COLUMN TREPMT.ACN2 /* COLLATE UTF8 - default */,
  M1 TYPE OF COLUMN TREPMT.M1,
  M2 TYPE OF COLUMN TREPMT.M2,
  M3 TYPE OF COLUMN TREPMT.M3,
  M4 TYPE OF COLUMN TREPMT.M4,
  M5 TYPE OF COLUMN TREPMT.M5,
  M6 TYPE OF COLUMN TREPMT.M6,
  M7 TYPE OF COLUMN TREPMT.M7,
  M8 TYPE OF COLUMN TREPMT.M8,
  M9 TYPE OF COLUMN TREPMT.M9,
  M10 TYPE OF COLUMN TREPMT.M10,
  M11 TYPE OF COLUMN TREPMT.M11,
  M12 TYPE OF COLUMN TREPMT.M12,
  N1 TYPE OF COLUMN TREPMT.N1,
  N2 TYPE OF COLUMN TREPMT.N2,
  N3 TYPE OF COLUMN TREPMT.N3,
  N4 TYPE OF COLUMN TREPMT.N4,
  N5 TYPE OF COLUMN TREPMT.N5,
  N6 TYPE OF COLUMN TREPMT.N6,
  N7 TYPE OF COLUMN TREPMT.N7,
  N8 TYPE OF COLUMN TREPMT.N8,
  N9 TYPE OF COLUMN TREPMT.N9,
  N10 TYPE OF COLUMN TREPMT.N10,
  N11 TYPE OF COLUMN TREPMT.N11,
  N12 TYPE OF COLUMN TREPMT.N12,
  MT TYPE OF COLUMN TREPMT.MT,
  NT TYPE OF COLUMN TREPMT.NT)
AS
begin
-- Mx - debeta summa, Nx - daudzums
    FOR SELECT
        gen_id(GEN_TREPMT_ID, 1) AS id,
        current_connection AS spid,
        null AS ad,
        T3.AC1 AS AC1,
        T3.AC2 AS AC2,
        AcP21.Name AS ACN1,
        AcP24.Name AS ACN2,
        M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12,
        N1,N2,N3,N4,N5,N6,N7,N8,N9,N10,N11,N12,
        0 AS MT, 0 as NT
    FROM
    (
        SELECT 
            AC1, AC2,
            SUM(CASE WHEN MT = 1 THEN ADb ELSE 0.00 END) AS M1,
            SUM(CASE WHEN MT = 2 THEN ADb ELSE 0.00 END) AS M2,
            SUM(CASE WHEN MT = 3 THEN ADb ELSE 0.00 END) AS M3,
            SUM(CASE WHEN MT = 4 THEN ADb ELSE 0.00 END) AS M4,
            SUM(CASE WHEN MT = 5 THEN ADb ELSE 0.00 END) AS M5,
            SUM(CASE WHEN MT = 6 THEN ADb ELSE 0.00 END) AS M6,
            SUM(CASE WHEN MT = 7 THEN ADb ELSE 0.00 END) AS M7,
            SUM(CASE WHEN MT = 8 THEN ADb ELSE 0.00 END) AS M8,
            SUM(CASE WHEN MT = 9 THEN ADb ELSE 0.00 END) AS M9,
            SUM(CASE WHEN MT = 10 THEN ADb ELSE 0.00 END) AS M10,
            SUM(CASE WHEN MT = 11 THEN ADb ELSE 0.00 END) AS M11,
            SUM(CASE WHEN MT = 12 THEN ADb ELSE 0.00 END) AS M12,
            
            SUM(CASE WHEN MT = 1 THEN AQV ELSE 0.00 END) AS N1,
            SUM(CASE WHEN MT = 2 THEN AQV ELSE 0.00 END) AS N2,
            SUM(CASE WHEN MT = 3 THEN AQV ELSE 0.00 END) AS N3,
            SUM(CASE WHEN MT = 4 THEN AQV ELSE 0.00 END) AS N4,
            SUM(CASE WHEN MT = 5 THEN AQV ELSE 0.00 END) AS N5,
            SUM(CASE WHEN MT = 6 THEN AQV ELSE 0.00 END) AS N6,
            SUM(CASE WHEN MT = 7 THEN AQV ELSE 0.00 END) AS N7,
            SUM(CASE WHEN MT = 8 THEN AQV ELSE 0.00 END) AS N8,
            SUM(CASE WHEN MT = 9 THEN AQV ELSE 0.00 END) AS N9,
            SUM(CASE WHEN MT = 10 THEN AQV ELSE 0.00 END) AS N10,
            SUM(CASE WHEN MT = 11 THEN AQV ELSE 0.00 END) AS N11,
            SUM(CASE WHEN MT = 12 THEN AQV ELSE 0.00 END) AS N12

        FROM
        (
            SELECT AC1, AC2, MT, SUM(SDb) AS ADb, SUM(SQV) AS AQV
            FROM
            (
                SELECT 
                    OPS.AC11 AS AC1,
                    OPS.AC14 AS AC2,
                    EXTRACT(MONTH FROM OPSd.Dete) AS MT,
                    OPS.Summ AS SDb,
                    coalesce(OPS.QV, 0.00) AS SQV

                FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
                WHERE OPSd.Dete BETWEEN :sdt AND :edt AND OPS.AC11 LIKE :pac

            ) AS T1

            GROUP BY T1.AC1, T1.AC2, T1.MT

        ) AS T2
        GROUP BY T2.AC1, T2.AC2
    ) AS T3

    LEFT JOIN AcP21 ON AcP21.AC = T3.AC1
    LEFT JOIN AcP24 ON AcP24.idx = T3.AC2

    ORDER BY AC1, AC2

    into
        id, spid, ad, ac1, ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_APGR_MT_22(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN TREPMT.ID,
  SPID TYPE OF COLUMN TREPMT.SPID,
  AD TYPE OF COLUMN TREPMT.AD /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN TREPMT.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN TREPMT.AC2 /* COLLATE UTF8 - default */,
  ACN1 TYPE OF COLUMN TREPMT.ACN1 /* COLLATE UTF8 - default */,
  ACN2 TYPE OF COLUMN TREPMT.ACN2 /* COLLATE UTF8 - default */,
  M1 TYPE OF COLUMN TREPMT.M1,
  M2 TYPE OF COLUMN TREPMT.M2,
  M3 TYPE OF COLUMN TREPMT.M3,
  M4 TYPE OF COLUMN TREPMT.M4,
  M5 TYPE OF COLUMN TREPMT.M5,
  M6 TYPE OF COLUMN TREPMT.M6,
  M7 TYPE OF COLUMN TREPMT.M7,
  M8 TYPE OF COLUMN TREPMT.M8,
  M9 TYPE OF COLUMN TREPMT.M9,
  M10 TYPE OF COLUMN TREPMT.M10,
  M11 TYPE OF COLUMN TREPMT.M11,
  M12 TYPE OF COLUMN TREPMT.M12,
  N1 TYPE OF COLUMN TREPMT.N1,
  N2 TYPE OF COLUMN TREPMT.N2,
  N3 TYPE OF COLUMN TREPMT.N3,
  N4 TYPE OF COLUMN TREPMT.N4,
  N5 TYPE OF COLUMN TREPMT.N5,
  N6 TYPE OF COLUMN TREPMT.N6,
  N7 TYPE OF COLUMN TREPMT.N7,
  N8 TYPE OF COLUMN TREPMT.N8,
  N9 TYPE OF COLUMN TREPMT.N9,
  N10 TYPE OF COLUMN TREPMT.N10,
  N11 TYPE OF COLUMN TREPMT.N11,
  N12 TYPE OF COLUMN TREPMT.N12,
  MT TYPE OF COLUMN TREPMT.MT,
  NT TYPE OF COLUMN TREPMT.NT)
AS
begin
-- Mx - debeta summa, Nx - daudzums
    FOR SELECT
        gen_id(GEN_TREPMT_ID, 1) AS id,
        current_connection AS spid,
        null AS ad,
        T3.AC1 AS AC1,
        T3.AC2 AS AC2,
        AcP21.Name AS ACN1,
        AcP24.Name AS ACN2,
        M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12,
        N1,N2,N3,N4,N5,N6,N7,N8,N9,N10,N11,N12,
        0 AS MT, 0 as NT
    FROM
    (
        SELECT 
            AC1, AC2,
            SUM(CASE WHEN MT = 1 THEN ADb ELSE 0.00 END) AS M1,
            SUM(CASE WHEN MT = 2 THEN ADb ELSE 0.00 END) AS M2,
            SUM(CASE WHEN MT = 3 THEN ADb ELSE 0.00 END) AS M3,
            SUM(CASE WHEN MT = 4 THEN ADb ELSE 0.00 END) AS M4,
            SUM(CASE WHEN MT = 5 THEN ADb ELSE 0.00 END) AS M5,
            SUM(CASE WHEN MT = 6 THEN ADb ELSE 0.00 END) AS M6,
            SUM(CASE WHEN MT = 7 THEN ADb ELSE 0.00 END) AS M7,
            SUM(CASE WHEN MT = 8 THEN ADb ELSE 0.00 END) AS M8,
            SUM(CASE WHEN MT = 9 THEN ADb ELSE 0.00 END) AS M9,
            SUM(CASE WHEN MT = 10 THEN ADb ELSE 0.00 END) AS M10,
            SUM(CASE WHEN MT = 11 THEN ADb ELSE 0.00 END) AS M11,
            SUM(CASE WHEN MT = 12 THEN ADb ELSE 0.00 END) AS M12,
            
            SUM(CASE WHEN MT = 1 THEN AQV ELSE 0.00 END) AS N1,
            SUM(CASE WHEN MT = 2 THEN AQV ELSE 0.00 END) AS N2,
            SUM(CASE WHEN MT = 3 THEN AQV ELSE 0.00 END) AS N3,
            SUM(CASE WHEN MT = 4 THEN AQV ELSE 0.00 END) AS N4,
            SUM(CASE WHEN MT = 5 THEN AQV ELSE 0.00 END) AS N5,
            SUM(CASE WHEN MT = 6 THEN AQV ELSE 0.00 END) AS N6,
            SUM(CASE WHEN MT = 7 THEN AQV ELSE 0.00 END) AS N7,
            SUM(CASE WHEN MT = 8 THEN AQV ELSE 0.00 END) AS N8,
            SUM(CASE WHEN MT = 9 THEN AQV ELSE 0.00 END) AS N9,
            SUM(CASE WHEN MT = 10 THEN AQV ELSE 0.00 END) AS N10,
            SUM(CASE WHEN MT = 11 THEN AQV ELSE 0.00 END) AS N11,
            SUM(CASE WHEN MT = 12 THEN AQV ELSE 0.00 END) AS N12

        FROM
        (
            SELECT AC1, AC2, MT, SUM(SDb) AS ADb, SUM(SQV) AS AQV
            FROM
            (
                SELECT 
                    OPS.AC21 AS AC1,
                    OPS.AC24 AS AC2,
                    EXTRACT(MONTH FROM OPSd.Dete) AS MT,
                    OPS.Summ AS SDb,
                    coalesce(OPS.QV, 0.00) AS SQV

                FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
                WHERE OPSd.Dete BETWEEN :sdt AND :edt AND OPS.AC21 LIKE :pac

            ) AS T1

            GROUP BY T1.AC1, T1.AC2, T1.MT

        ) AS T2
        GROUP BY T2.AC1, T2.AC2
    ) AS T3

    LEFT JOIN AcP21 ON AcP21.AC = T3.AC1
    LEFT JOIN AcP24 ON AcP24.idx = T3.AC2

    ORDER BY AC1, AC2

    into
        id, spid, ad, ac1, ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_APGR_NP_11(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) AS id,
        current_connection AS spid,
        T2.AC AS AC,
        NULL AS RAC,
        AcP21.Name AS Name,
        0.00 AS B0,
        0.00 AS SDb,
        0.00 AS SCr,
        T2.BDb AS TDb,
        T2.BCr AS TCr,
        NULL AS Clid,
        NULL AS Name1,
        NULL AS RegNr,
        NULL AS RName
    FROM
    (
        SELECT AC, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC12 AS AC,
                OPS.Summ AS TDb,
                0.00 AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE OPSd.Dete BETWEEN :sdt AND :edt AND OPS.AC12 LIKE :pac

            UNION ALL

            SELECT 
                OPS.AC22 AS AC,
                0.00 AS TDb,
                OPS.Summ AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE OPSd.Dete BETWEEN :sdt AND :edt AND OPS.AC22 LIKE :pac

        ) AS T1

        GROUP BY T1.AC
    ) AS T2    

    LEFT JOIN AcP21    ON AcP21.AC = T2.AC
    
    ORDER BY AC

    into
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname
    do
    begin
        suspend;
    end

end
^

ALTER PROCEDURE SP_REP_APGR_NP_12(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PACLEN INTEGER)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) AS id,
        current_connection AS spid,
        T2.AC AS AC,
        NULL AS RAC,
        AcP21.Name AS Name,
        0.00 AS B0,
        0.00 AS SDb,
        0.00 AS SCr,
        T2.BDb AS TDb,
        T2.BCr AS TCr,
        NULL AS Clid,
        NULL AS Name1,
        NULL AS RegNr,
        NULL AS RName
    FROM
    (
        SELECT AC, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                LEFT(OPS.AC12, :paclen) AS AC,
                OPS.Summ AS TDb,
                0.00 AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE OPSd.Dete BETWEEN :sdt AND :edt AND OPS.AC12 LIKE :pac

            UNION ALL

            SELECT 
                LEFT(OPS.AC22, :paclen) AS AC,
                0.00 AS TDb,
                OPS.Summ AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE OPSd.Dete BETWEEN :sdt AND :edt AND OPS.AC22 LIKE :pac

        ) AS T1

        GROUP BY T1.AC
    ) AS T2    

    LEFT JOIN AcP21    ON AcP21.AC = T2.AC
    
    ORDER BY AC

    into
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname
    do
    begin
        suspend;
    end

end
^

ALTER PROCEDURE SP_REP_CURCHECK_01(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(8) /* COLLATE UTF8 - default */,
  PCUR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
--meklÄ“jam dokumentus ar valÅ«tas konvertÄcijas kÄ¼Å«dÄm
    FOR SELECT
        gen_id(GEN_ROPS1A_ID, 1) as id,
        0 as spid,
        T1.id AS did, 
        T1.Dete AS Dete,
        T1.NrX AS NrX,
        T1.DocTyp AS DocTyp,
        DocTyp.id1 AS DocTyp1, 
        null AS DocTyp2,
        T1.DocSt AS DocSt,
        T1.DocNr AS DocNr,
        T1.ClId AS Clid,
        T1.ClId2 AS Clid2,
        Persons.Name AS Name,
        Persons2.Name AS Name2, 
        Persons.RegNr AS RegNr,
        Persons2.RegNr AS RegNr2,
        0 as b0, 
        T1.Descr AS Descr,
        null AS Descr2,
        null AS AC1,
        null AS AC2,
        null AS SAC1,
        null AS SAC2,
        0 AS SummC,
        null AS Cur,
        T1.Summ AS Summ,
        T1.PVN AS PVN,
        null AS Rac,
        0 AS Sdb,
        0 AS Scr,
        null AS Rac2,
        null AS Rac3,
        null AS Rac4,
        null AS Rac5,
        0 AS qv,
        T1.ZNR AS ZNR
    FROM
        (
            SELECT DISTINCT OPSd.*
            FROM 
                OPSd INNER JOIN OPS ON OPSd.id = OPS.DocId
                LEFT JOIN Currency 
                ON Currency.id = OPS.Cur AND Currency.Dete = OPSd.Dete
            WHERE 
                OPSd.Dete BETWEEN :sdt AND :edt AND 
                OPS.Cur <> 'EUR' AND
                (OPS.AC11 LIKE :pac OR OPS.AC21 LIKE :pac) AND
                (
                    Currency.id IS NULL OR
                    ROUND(OPS.SummC*Currency.rate,2) <> OPS.Summ
                )
        ) AS T1

        LEFT JOIN DocTyp ON T1.DocTyp = DocTyp.id
        LEFT JOIN Persons ON T1.ClId = Persons.ClId
        LEFT JOIN Persons AS Persons2 ON T1.ClId2 = Persons2.ClId        

    ORDER BY T1.Dete, T1.id

    into
        :id, :spid, :did, :dete, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_CURRDIFF_01(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(8) /* COLLATE UTF8 - default */,
  PCUR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) AS id,
        current_connection AS spid,
        T2.AC AS AC,
        NULL AS RAC,
        AcP21.Name AS Name,
        0.00 as b0,
        T2.ADb AS SDb,
        T2.ACr AS SCr,
        T2.BDb AS TDb,
        T2.BCr AS TCr,
        T2.Clid AS Clid,
        Persons.Name AS Name1,
        Persons.regnr AS regnr,
        null as rname
    FROM
    (
        SELECT AC, T1.Clid AS Clid, SUM(SDb) AS ADb, SUM(SCr) AS ACr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            -- :pcur ***************
            SELECT 
                OPS.AC11 AS AC,
                OPSd.ClId AS Clid,
                OPS.SummC AS SDb,
                0.00 AS SCr,
                OPS.Summ AS TDb,
                0.00 AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE 
                OPSd.Dete <= :edt AND 
                OPS.AC11 = :pac AND 
                OPS.Cur = :pcur AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                OPS.AC21 AS AC,
                OPSd.ClId AS Clid,
                0.00 AS SDb,
                OPS.SummC AS SCr,
                0.00 AS TDb,
                OPS.Summ AS TCr


            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE 
                OPSd.Dete <= :edt AND 
                OPS.AC21 = :pac AND 
                OPS.Cur = :pcur AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            -- EUR ***************
            UNION ALL

            SELECT 
                OPS.AC11 AS AC,
                OPSd.ClId AS Clid,
                0.00 AS SDb,
                0.00 AS SCr,
                OPS.Summ AS TDb,
                0.00 AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE 
                OPSd.Dete <= :edt AND 
                OPS.AC11 = :pac AND 
                OPS.Cur = 'EUR' AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                OPS.AC21 AS AC,
                OPSd.ClId AS Clid,
                0.00 AS SDb,
                0.00 AS SCr,
                0.00 AS TDb,
                OPS.Summ AS TCr


            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE 
                OPSd.Dete <= :edt AND 
                OPS.AC21 = :pac AND 
                OPS.Cur = 'EUR' AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                Bal0.AC11 AS AC,
                Bal0.ClId AS Clid,
                Bal0.SummDC AS SDb,
                Bal0.SummCC AS SCr,
                Bal0.SummD AS TDb,
                Bal0.SummC AS TCr
            FROM Bal0
            WHERE 
                Bal0.AC11 = :pac AND 
                Bal0.Cur = :pcur AND
                (:pclid IS NULL OR Bal0.ClId = :pclid)
            
            UNION ALL

            SELECT 
                Bal0.AC11 AS AC,
                Bal0.ClId AS Clid,
                0.00 AS SDb,
                0.00 AS SCr,
                Bal0.SummD AS TDb,
                Bal0.SummC AS TCr
            FROM Bal0
            WHERE 
                Bal0.AC11 = :pac AND 
                Bal0.Cur = 'EUR' AND
                (:pclid IS NULL OR Bal0.ClId = :pclid)

        ) AS T1
        GROUP BY AC, T1.Clid

    ) AS T2    
    LEFT JOIN AcP21 ON T2.AC = AcP21.AC
    LEFT JOIN Persons ON T2.Clid = Persons.ClId
    ORDER BY AC

    
    into
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_DARZ_1(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID TYPE OF COLUMN TREPDARZ1.ID,
  SPID TYPE OF COLUMN TREPDARZ1.SPID,
  DID TYPE OF COLUMN TREPDARZ1.DID,
  RID TYPE OF COLUMN TREPDARZ1.RID,
  DETE TYPE OF COLUMN TREPDARZ1.DETE,
  NRX TYPE OF COLUMN TREPDARZ1.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN TREPDARZ1.DOCTYP /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN TREPDARZ1.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN TREPDARZ1.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN TREPDARZ1.CLID /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN TREPDARZ1.NAME /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN TREPDARZ1.REGNR /* COLLATE UTF8 - default */,
  DESCR TYPE OF COLUMN TREPDARZ1.DESCR /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN TREPDARZ1.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN TREPDARZ1.AC2 /* COLLATE UTF8 - default */,
  AA TYPE OF COLUMN TREPDARZ1.AA,
  A1 TYPE OF COLUMN TREPDARZ1.A1,
  A2 TYPE OF COLUMN TREPDARZ1.A2,
  A3 TYPE OF COLUMN TREPDARZ1.A3,
  A4 TYPE OF COLUMN TREPDARZ1.A4,
  A5 TYPE OF COLUMN TREPDARZ1.A5,
  A6 TYPE OF COLUMN TREPDARZ1.A6,
  A7 TYPE OF COLUMN TREPDARZ1.A7,
  A8 TYPE OF COLUMN TREPDARZ1.A8,
  A9 TYPE OF COLUMN TREPDARZ1.A9,
  A10 TYPE OF COLUMN TREPDARZ1.A10,
  A11 TYPE OF COLUMN TREPDARZ1.A11,
  A12 TYPE OF COLUMN TREPDARZ1.A12,
  A13 TYPE OF COLUMN TREPDARZ1.A13,
  A14 TYPE OF COLUMN TREPDARZ1.A14,
  A15 TYPE OF COLUMN TREPDARZ1.A15,
  A16 TYPE OF COLUMN TREPDARZ1.A16,
  A17 TYPE OF COLUMN TREPDARZ1.A17,
  A18 TYPE OF COLUMN TREPDARZ1.A18)
AS
begin
    FOR SELECT
        gen_id(GEN_TREPDARZ1_ID, 1) AS id,
        current_connection AS spid,
        DocId AS did,
        0 AS rid,
        MAX(Dete) AS Dete,
        MAX(NrX) AS NrX,
        MAX(DocTyp.id1) AS DocTyp,
        MAX(DocSt) AS DocSt,
        MAX(DocNr) AS DocNr,
        MAX(OPSd.clid) AS clid,
        MAX(Persons.name) AS Name,
        MAX(Persons.regnr) AS RegNr,
        MAX(OPSd.descr) AS Descr,

        null AS AC1,
        null AS AC2,
        null AS AA,

        SUM(CASE WHEN AC13 = 'KA' THEN OPS.Summ ELSE 0.00 END) AS A1,
        SUM(CASE WHEN AC23 = 'KA' THEN OPS.Summ ELSE 0.00 END) AS A2,
        
        SUM(CASE WHEN AC13 = 'BA' THEN OPS.Summ ELSE 0.00 END) AS A3,
        SUM(CASE WHEN AC23 = 'BA' THEN OPS.Summ ELSE 0.00 END) AS A4,
                                                                
        SUM(CASE WHEN AC13 = 'CN' THEN OPS.Summ ELSE 0.00 END) AS A5,
        SUM(CASE WHEN AC23 = 'CN' THEN OPS.Summ ELSE 0.00 END) AS A6,

        SUM(CASE WHEN AC23 = 'LIE' THEN OPS.Summ ELSE 0.00 END) AS A7,
        SUM(CASE WHEN AC23 = 'NIE' THEN OPS.Summ ELSE 0.00 END) AS A8,
        SUM(CASE WHEN AC23 = 'SUB' THEN OPS.Summ ELSE 0.00 END) AS A9,
        SUM(CASE WHEN AC23 = 'ZIE' THEN OPS.Summ ELSE 0.00 END) AS A10,
        SUM(CASE WHEN AC23 = 'CIE' THEN OPS.Summ ELSE 0.00 END) AS A11,

        SUM(CASE WHEN AC13 = 'LIZ' THEN OPS.Summ ELSE 0.00 END) AS A12,
        SUM(CASE WHEN AC13 = 'NIZ' THEN OPS.Summ ELSE 0.00 END) AS A13,
        SUM(CASE WHEN AC13 = 'PIZ' THEN OPS.Summ ELSE 0.00 END) AS A14,
        SUM(CASE WHEN AC13 = 'ZIZ' THEN OPS.Summ ELSE 0.00 END) AS A15,
        SUM(CASE WHEN AC13 = 'CIZ' THEN OPS.Summ ELSE 0.00 END) AS A16,

        SUM(CASE WHEN AC13 = 'LIZ1' THEN OPS.Summ ELSE 0.00 END) AS A17,
        SUM(CASE WHEN AC13 = 'NIZ1' THEN OPS.Summ ELSE 0.00 END) AS A18

    FROM
        OPSd JOIN OPS ON OPSd.id = OPS.DocId
        LEFT JOIN persons ON OPSd.clid = Persons.clid
        LEFT JOIN doctyp ON OPSd.doctyp = doctyp.id
    WHERE
        OPSd.Dete BETWEEN :sdt AND :edt AND
        OPS.AC13 IS NOT NULL AND
        OPS.AC23 IS NOT NULL
    GROUP BY DocId
    ORDER BY Dete, did


    into
        :id, :spid, :did, :rid, :dete, :nrx,
        :doctyp, :docst, :docnr, :clid, :name, :regnr,
        :descr, :ac1, :ac2, :aa,
        :a1, :a2, :a3, :a4, :a5, :a6, :a7, :a8,
        :a9, :a10, :a11, :a12, :a13, :a14,:a15,:a16,:a17,:a18
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_DARZ_3(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID TYPE OF COLUMN TREPDARZ1.ID,
  SPID TYPE OF COLUMN TREPDARZ1.SPID,
  DID TYPE OF COLUMN TREPDARZ1.DID,
  RID TYPE OF COLUMN TREPDARZ1.RID,
  DETE TYPE OF COLUMN TREPDARZ1.DETE,
  NRX TYPE OF COLUMN TREPDARZ1.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN TREPDARZ1.DOCTYP /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN TREPDARZ1.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN TREPDARZ1.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN TREPDARZ1.CLID /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN TREPDARZ1.NAME /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN TREPDARZ1.REGNR /* COLLATE UTF8 - default */,
  DESCR TYPE OF COLUMN TREPDARZ1.DESCR /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN TREPDARZ1.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN TREPDARZ1.AC2 /* COLLATE UTF8 - default */,
  AA TYPE OF COLUMN TREPDARZ1.AA,
  A1 TYPE OF COLUMN TREPDARZ1.A1,
  A2 TYPE OF COLUMN TREPDARZ1.A2,
  A3 TYPE OF COLUMN TREPDARZ1.A3,
  A4 TYPE OF COLUMN TREPDARZ1.A4,
  A5 TYPE OF COLUMN TREPDARZ1.A5,
  A6 TYPE OF COLUMN TREPDARZ1.A6,
  A7 TYPE OF COLUMN TREPDARZ1.A7,
  A8 TYPE OF COLUMN TREPDARZ1.A8,
  A9 TYPE OF COLUMN TREPDARZ1.A9,
  A10 TYPE OF COLUMN TREPDARZ1.A10,
  A11 TYPE OF COLUMN TREPDARZ1.A11,
  A12 TYPE OF COLUMN TREPDARZ1.A12,
  A13 TYPE OF COLUMN TREPDARZ1.A13,
  A14 TYPE OF COLUMN TREPDARZ1.A14,
  A15 TYPE OF COLUMN TREPDARZ1.A15,
  A16 TYPE OF COLUMN TREPDARZ1.A16)
AS
begin
    FOR SELECT
        gen_id(GEN_TREPDARZ1_ID, 1) AS id,
        current_connection AS spid,
        DocId AS did,
        0 AS rid,
        MAX(Dete) AS Dete,
        MAX(NrX) AS NrX,
        MAX(DocTyp.id1) AS DocTyp,
        MAX(DocSt) AS DocSt,
        MAX(DocNr) AS DocNr,
        MAX(OPSd.clid) AS clid,
        MAX(Persons.name) AS Name,
        MAX(Persons.regnr) AS RegNr,
        MAX(OPSd.descr) AS Descr,

        null AS AC1,
        null AS AC2,
        null AS AA,

        SUM(CASE WHEN AC13 = 'KA' THEN OPS.Summ ELSE 0.00 END) AS A1,
        SUM(CASE WHEN AC23 = 'KA' THEN OPS.Summ ELSE 0.00 END) AS A2,
        
        SUM(CASE WHEN AC13 = 'BA' THEN OPS.Summ ELSE 0.00 END) AS A3,
        SUM(CASE WHEN AC23 = 'BA' THEN OPS.Summ ELSE 0.00 END) AS A4,
        
        SUM(CASE WHEN AC13 = 'CN' THEN OPS.Summ ELSE 0.00 END) AS A5,
        SUM(CASE WHEN AC23 = 'CN' THEN OPS.Summ ELSE 0.00 END) AS A6,

        SUM(CASE WHEN AC23 = 'LIE' OR AC23 = 'SUB' THEN OPS.Summ ELSE 0.00 END) AS A7,
        SUM(CASE WHEN AC23 = 'NIE' THEN OPS.Summ ELSE 0.00 END) AS A8,
        SUM(CASE WHEN AC23 = 'ZIE' OR AC23 = 'CIE' THEN OPS.Summ ELSE 0.00 END) AS A9,

        SUM(CASE WHEN AC13 = 'DIZ' THEN OPS.Summ ELSE 0.00 END) AS A10,
        SUM(CASE WHEN AC13 = 'MIZ' THEN OPS.Summ ELSE 0.00 END) AS A11,
        SUM(CASE WHEN AC13 = 'LIZ' OR AC13 = 'NIZ' OR AC13 = 'PIZ' THEN OPS.Summ ELSE 0.00 END) AS A12,
        SUM(CASE WHEN AC13 = 'ZIZ' OR AC13 = 'CIZ' THEN OPS.Summ ELSE 0.00 END) AS A13,
        
        0 AS A14,
        0 AS A15,
        0 AS A16

    FROM
        OPSd JOIN OPS ON OPSd.id = OPS.DocId
        LEFT JOIN persons ON OPSd.clid = Persons.clid
        LEFT JOIN doctyp ON OPSd.doctyp = doctyp.id
    WHERE
        OPSd.Dete BETWEEN :sdt AND :edt AND
        OPS.AC13 IS NOT NULL AND
        OPS.AC23 IS NOT NULL
    GROUP BY DocId
    ORDER BY Dete, did

    into
        :id, :spid, :did, :rid, :DETE, :nrx,
        :doctyp, :docst, :docnr, :clid, :name, :regnr,
        :descr, :ac1, :ac2, :aa,
        :a1, :a2, :a3, :a4, :a5, :a6, :a7, :a8,
        :a9, :a10, :a11, :a12, :a13, :a14,:a15,:a16
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_DOKS_11(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */,
  PAC11 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC12 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC13 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC14 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC15 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC21 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC22 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC23 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC24 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC25 VARCHAR(5) /* COLLATE UTF8 - default */,
  PDOCGR VARCHAR(10) /* COLLATE UTF8 - default */,
  PANDOR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
    IF
    (
        :PAC11 IS NULL AND 
        :PAC12 IS NULL AND 
        :PAC13 IS NULL AND 
        :PAC14 IS NULL AND
        :PAC15 IS NULL AND
        :PAC21 IS NULL AND 
        :PAC22 IS NULL AND 
        :PAC23 IS NULL AND 
        :PAC24 IS NULL AND
        :PAC25 IS NULL
    ) THEN
    BEGIN
        FOR SELECT
            gen_id(GEN_ROPS1A_ID, 1) as id,
            current_connection as spid,
            OPSd.id AS did, 
            OPSd.Dete AS Dete,
            OPSd.NrX AS NrX,
            OPSd.DocTyp AS DocTyp,
            DocTyp.id1 AS DocTyp1, 
            null as DocTyp2,
            OPSd.DocSt AS DocSt,
            OPSd.DocNr AS DocNr,
            OPSd.ClId AS Clid,
            OPSd.ClId2 AS Clid2,
            Persons.Name AS Name, 
            Persons2.Name AS Name2, 
            Persons.RegNr AS RegNr,
            Persons2.RegNr AS RegNr2,
            0 AS b0, 
            OPSd.Descr AS Descr,
            null AS Descr2,
            null AS AC1,
            null AS AC2,
            null AS SAC1,
            null AS SAC2,
            0 AS SummC,
            null AS Cur,
            OPSd.Summ AS Summ,
            OPSd.PVN AS PVN,
            null AS Rac,
            0 AS Sdb,
            0 AS SCr,
            null AS Rac2,
            null AS Rac3,
            null AS Rac4,
            null AS Rac5,
            0 AS qv,
            OPSd.ZNR AS ZNR

        FROM OPSd
            LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
            LEFT JOIN Persons ON OPSd.ClId = Persons.ClId
            LEFT JOIN Persons AS Persons2 ON OPSd.ClId2 = Persons2.ClId        
        WHERE 
        (
            (:PDATE1 IS NULL OR Dete >= :PDATE1) AND
            (:PDATE2 IS NULL OR Dete <= :PDATE2) AND
            (:PCLID IS NULL OR OPSd.ClId = :PCLID OR ClId2 = :pclid) AND
            (:PTEXT IS NULL OR OPSd.Descr LIKE :PTEXT) AND
            (
                :PDOCGR IS NULL OR EXISTS(
                    SELECT DTA.ID
                    FROM doctypb AS DTB inner join doctypa AS DTA on DTB.ida = DTA.id
                    WHERE DTB.ID = OPSD.doctyp AND DTA.ID = :PDOCGR
                )
            )
        )
        ORDER BY Dete, did
        into
            :id, :spid, :did, :DETE, :nrx,
            :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
            :clid, :clid2, :name, :name2, :regnr, :regnr2,
            :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
            :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
            :rac2, :rac3, :rac4, :rac5, :qv, :znr
        do
        begin
            suspend;
        end

    END
    ELSE
    BEGIN
        IF (pandor = 'AND') THEN
        BEGIN
            FOR SELECT
                gen_id(GEN_ROPS1A_ID, 1) as id,
                current_connection as spid,
                OPSd.id AS did, 
                OPSd.Dete AS Dete,
                OPSd.NrX AS NrX,
                OPSd.DocTyp AS DocTyp,
                DocTyp.id1 AS DocTyp1, 
                null as DocTyp2,
                OPSd.DocSt AS DocSt,
                OPSd.DocNr AS DocNr,
                OPSd.ClId AS Clid,
                OPSd.ClId2 AS Clid2,
                Persons.Name AS Name, 
                Persons2.Name AS Name2, 
                Persons.RegNr AS RegNr,
                Persons2.RegNr AS RegNr2,
                0 AS b0, 
                OPSd.Descr AS Descr,
                null AS Descr2,
                null AS AC1,
                null AS AC2,
                null AS SAC1,
                null AS SAC2,
                0 AS SummC,
                null AS Cur,
                OPSd.Summ AS Summ,
                OPSd.PVN AS PVN,
                null AS Rac,
                0 AS Sdb,
                0 AS SCr,
                null AS Rac2,
                null AS Rac3,
                null AS Rac4,
                null AS Rac5,
                0 AS qv,
                OPSd.ZNR AS ZNR
            FROM OPSd
                LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
                LEFT JOIN Persons ON OPSd.ClId = Persons.ClId
                LEFT JOIN Persons AS Persons2 ON OPSd.ClId2 = Persons2.ClId        
            WHERE 
            (
                (:PDATE1 IS NULL OR Dete >= :PDATE1) AND
                (:PDATE2 IS NULL OR Dete <= :PDATE2) AND
                (:PCLID IS NULL OR OPSd.ClId = :PCLID OR ClId2 = :pclid) AND
                (:PTEXT IS NULL OR OPSd.Descr LIKE :PTEXT)  AND
                (
                    :PDOCGR IS NULL OR EXISTS(
                        SELECT DTA.ID
                        FROM doctypb AS DTB inner join doctypa AS DTA on DTB.ida = DTA.id
                        WHERE DTB.ID = OPSD.doctyp AND DTA.ID = :PDOCGR
                    )
                )
                AND

                EXISTS     
                (
                    SELECT NULL
                    FROM OPS
                    WHERE
                    (
                        (OPS.DocId = OPSd.id) AND
                        (:PAC11 IS NULL OR AC11 LIKE :PAC11) AND
                        (:PAC12 IS NULL OR AC12 LIKE :PAC12) AND
                        (:PAC13 IS NULL OR AC13 LIKE :PAC13) AND
                        (:PAC14 IS NULL OR AC14 LIKE :PAC14) AND
                        (:PAC15 IS NULL OR AC15 LIKE :PAC15) AND

                        (:PAC21 IS NULL OR AC21 LIKE :PAC21) AND
                        (:PAC22 IS NULL OR AC22 LIKE :PAC22) AND
                        (:PAC23 IS NULL OR AC23 LIKE :PAC23) AND
                        (:PAC24 IS NULL OR AC24 LIKE :PAC24) AND
                        (:PAC25 IS NULL OR AC25 LIKE :PAC25)
                    )
                )
            )
            ORDER BY Dete, did
            into
                :id, :spid, :did, :DETE, :nrx,
                :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
                :clid, :clid2, :name, :name2, :regnr, :regnr2,
                :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
                :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
                :rac2, :rac3, :rac4, :rac5, :qv, :znr
            do
            begin
                suspend;
            end

        END 
        ELSE
        BEGIN
            FOR SELECT
                gen_id(GEN_ROPS1A_ID, 1) as id,
                current_connection as spid,
                OPSd.id AS did, 
                OPSd.Dete AS Dete,
                OPSd.NrX AS NrX,
                OPSd.DocTyp AS DocTyp,
                DocTyp.id1 AS DocTyp1, 
                null as DocTyp2,
                OPSd.DocSt AS DocSt,
                OPSd.DocNr AS DocNr,
                OPSd.ClId AS Clid,
                OPSd.ClId2 AS Clid2,
                Persons.Name AS Name, 
                Persons2.Name AS Name2, 
                Persons.RegNr AS RegNr,
                Persons2.RegNr AS RegNr2,
                0 AS b0, 
                OPSd.Descr AS Descr,
                null AS Descr2,
                null AS AC1,
                null AS AC2,
                null AS SAC1,
                null AS SAC2,
                0 AS SummC,
                null AS Cur,
                OPSd.Summ AS Summ,
                OPSd.PVN AS PVN,
                null AS Rac,
                0 AS Sdb,
                0 AS SCr,
                null AS Rac2,
                null AS Rac3,
                null AS Rac4,
                null AS Rac5,
                0 AS qv,
                OPSd.ZNR AS ZNR
            FROM OPSd
                LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
                LEFT JOIN Persons ON OPSd.ClId = Persons.ClId
                LEFT JOIN Persons AS Persons2 ON OPSd.ClId2 = Persons2.ClId        

            WHERE 
            (
                (:PDATE1 IS NULL OR Dete >= :PDATE1) AND
                (:PDATE2 IS NULL OR Dete <= :PDATE2) AND
                (:PCLID IS NULL OR OPSd.ClId = :PCLID OR ClId2 = :pclid) AND
                (:PTEXT IS NULL OR OPSd.Descr LIKE :PTEXT) AND
                (
                    :PDOCGR IS NULL OR EXISTS(
                        SELECT DTA.ID
                        FROM doctypb AS DTB inner join doctypa AS DTA on DTB.ida = DTA.id
                        WHERE DTB.ID = OPSD.doctyp AND DTA.ID = :PDOCGR
                    )
                )
                AND

                EXISTS     
                (
                    SELECT NULL
                    FROM OPS
                    WHERE
                    (
                        (OPS.DocId = OPSd.id) AND
                        (
                            (
                                (:PAC11 IS NULL OR AC11 LIKE :PAC11) AND
                                (:PAC12 IS NULL OR AC12 LIKE :PAC12) AND
                                (:PAC13 IS NULL OR AC13 LIKE :PAC13) AND
                                (:PAC14 IS NULL OR AC14 LIKE :PAC14) AND
                                (:PAC15 IS NULL OR AC15 LIKE :PAC15)
                            )
                            OR
                            (
                                (:PAC21 IS NULL OR AC21 LIKE :PAC21) AND
                                (:PAC22 IS NULL OR AC22 LIKE :PAC22) AND
                                (:PAC23 IS NULL OR AC23 LIKE :PAC23) AND
                                (:PAC24 IS NULL OR AC24 LIKE :PAC24) AND
                                (:PAC25 IS NULL OR AC25 LIKE :PAC25)
                            )
                        )
                    )
                )
            )
            ORDER BY Dete, did
            into
                :id, :spid, :did, :DETE, :nrx,
                :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
                :clid, :clid2, :name, :name2, :regnr, :regnr2,
                :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
                :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
                :rac2, :rac3, :rac4, :rac5, :qv, :znr
            do
            begin
                suspend;
            end

        END
    END
end
^

ALTER PROCEDURE SP_REP_KG_11(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS1A_ID, 1) AS id,
        current_connection as spid,
        OPSd.id AS did,
        OPSd.Dete,
        OPSd.NrX,
        OPSd.DocTyp,
        DocTyp.id1 AS DocTyp1,
        DocTyp.tpZ AS DocTyp2,
        OPSd.DocSt,
        OPSd.DocNr,
        OPSd.ClId,
        OPSd.ClId2,
        P1.Name AS Name,
        P2.Name AS Name2,
        P1.RegNr AS RegNr,
        P2.RegNr AS RegNr2,
        0 AS b0,
        OPSd.Descr,
        OPS.Descr AS Descr2,
        null AS AC1,
        CASE WHEN OPS.AC11 = :pac THEN OPS.AC21 ELSE OPS.AC11 END AS Ac2,
        null AS SAC1,
        CASE WHEN OPS.AC11 = :pac THEN AcP21_2.Name ELSE AcP21.Name END AS SAc2,
        OPS.SummC AS SummC,
        OPS.cur AS Cur,
        OPS.Summ AS Summ,
        0 AS PVN,
        null AS Rac,
        CASE WHEN OPS.AC11 = :pac THEN OPS.Summ ELSE 0.00 END AS SDb,
        CASE WHEN OPS.AC21 = :pac THEN OPS.Summ ELSE 0.00 END AS SCr,
        null AS Rac2,
        null AS Rac3,
        null AS Rac4,
        null AS Rac5,
        0 AS qv,
        OPSd.ZNR
    FROM
        OPSd INNER 
        JOIN OPS ON OPSd.id = OPS.DocId
        LEFT JOIN AcP21 ON OPS.AC11 = AcP21.AC
        LEFT JOIN AcP21 AS AcP21_2 ON OPS.AC21 = AcP21_2.AC
        LEFT JOIN Persons AS P1 ON OPSd.ClId = P1.ClId
        LEFT JOIN Persons AS P2 ON OPSd.ClId2 = P2.ClId
        LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
    WHERE
        OPSd.Dete BETWEEN :sdt AND :edt AND
        (OPS.AC11 = :pac OR OPS.AC21 = :pac)
    ORDER BY
        OPSd.Dete, 
        CASE WHEN OPS.AC11 = :pac THEN 1 ELSE 2 END,
        NrX 


    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_KIEO_1(
  PDID INTEGER)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS1A_ID, 1) AS id,
        current_connection as spid,
        OPSd.id AS did,
        OPSd.Dete,
        OPSd.NrX,
        OPSd.DocTyp,
        DocTyp.id1 AS DocTyp1,
        DocTyp.tpZ AS DocTyp2,
        OPSd.DocSt,
        OPSd.DocNr,
        OPSd.ClId,
        OPSd.ClId2,
        P1.Name AS Name,
        P2.Name AS Name2,
        P1.RegNr AS RegNr,
        P2.RegNr AS RegNr2,
        0 AS b0,
        OPSd.Descr,
        OPS.Descr AS Descr2,
        OPS.AC11 AS Ac1,
        OPS.AC21 AS Ac2,
        AcP21.Name AS SAc1,
        AcP21_2.Name AS SAc2,
        OPS.SummC AS SummC,
        OPS.cur AS Cur,
        OPS.Summ AS Summ,
        0 AS PVN,
        null AS Rac,
        OPS.Summ AS SDb,
        0.00 AS SCr,
        null AS Rac2,
        null AS Rac3,
        null AS Rac4,
        null AS Rac5,
        0 AS qv,
        OPSd.ZNR
    FROM
        OPSd INNER 
        JOIN OPS ON OPSd.id = OPS.DocId
        LEFT JOIN AcP21 ON OPS.AC11 = AcP21.AC
        LEFT JOIN AcP21 AS AcP21_2 ON OPS.AC21 = AcP21_2.AC
        LEFT JOIN Persons AS P1 ON OPSd.ClId = P1.ClId
        LEFT JOIN Persons AS P2 ON OPSd.ClId2 = P2.ClId
        LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
    WHERE
        OPSd.id = :pdid

    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_KIEO_21(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS1A_ID, 1) AS id,
        current_connection as spid,
        OPSd.id AS did,
        OPSd.Dete,
        OPSd.NrX,
        OPSd.DocTyp,
        DocTyp.id1 AS DocTyp1,
        DocTyp.tpZ AS DocTyp2,
        OPSd.DocSt,
        OPSd.DocNr,
        OPSd.ClId,
        OPSd.ClId2,
        P1.Name AS Name,
        P2.Name AS Name2,
        P1.RegNr AS RegNr,
        P2.RegNr AS RegNr2,
        0 AS b0,
        OPSd.Descr,
        OPS.Descr AS Descr2,
        OPS.AC11 AS Ac1,
        OPS.AC21 AS Ac2,
        AcP21.Name AS SAc1,
        AcP21_2.Name AS SAc2,
        OPS.SummC AS SummC,
        OPS.cur AS Cur,
        OPS.Summ AS Summ,
        0 AS PVN,
        null AS Rac,
        OPS.Summ AS SDb,
        0.00 AS SCr,
        null AS Rac2,
        null AS Rac3,
        null AS Rac4,
        null AS Rac5,
        0 AS qv,
        OPSd.ZNR
    FROM
        OPSd INNER 
        JOIN OPS ON OPSd.id = OPS.DocId
        LEFT JOIN AcP21 ON OPS.AC11 = AcP21.AC
        LEFT JOIN AcP21 AS AcP21_2 ON OPS.AC21 = AcP21_2.AC
        LEFT JOIN Persons AS P1 ON OPSd.ClId = P1.ClId
        LEFT JOIN Persons AS P2 ON OPSd.ClId2 = P2.ClId
        LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
    WHERE
        OPSd.Dete BETWEEN :sdt AND :edt AND
        OPS.AC11 = :pac
    ORDER BY
        OPSd.NrX

    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_KIZO_21(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
    for SELECT
        gen_id(GEN_ROPS1A_ID, 1) AS id,
        current_connection as spid,
        OPSd.id AS did,
        OPSd.Dete,
        OPSd.NrX,
        OPSd.DocTyp,
        DocTyp.id1 AS DocTyp1,
        DocTyp.tpZ AS DocTyp2,
        OPSd.DocSt,
        OPSd.DocNr,
        OPSd.ClId,
        OPSd.ClId2,
        P1.Name AS Name,
        P2.Name AS Name2,
        P1.RegNr AS RegNr,
        P2.RegNr AS RegNr2,
        0.0 AS b0,
        OPSd.Descr,
        OPS.Descr AS Descr2,
        OPS.AC11 AS Ac1,
        OPS.AC21 AS Ac2,
        AcP21.Name AS SAc1,
        AcP21_2.Name AS SAc2,
        OPS.SummC AS SummC,
        OPS.cur AS Cur,
        OPS.Summ AS Summ,
        0.0 AS PVN,
        null AS Rac,
        0.00 AS SDb,
        OPS.Summ AS SCr,
        null AS Rac2,
        null AS Rac3,
        null AS Rac4,
        null AS Rac5,
        0 AS qv,
        OPSd.ZNR
    FROM
        OPSd INNER 
        JOIN OPS ON OPSd.id = OPS.DocId
        LEFT JOIN AcP21 ON OPS.AC11 = AcP21.AC
        LEFT JOIN AcP21 AS AcP21_2 ON OPS.AC21 = AcP21_2.AC
        LEFT JOIN Persons AS P1 ON OPSd.ClId = P1.ClId
        LEFT JOIN Persons AS P2 ON OPSd.ClId2 = P2.ClId
        LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
    WHERE
        OPSd.Dete BETWEEN :sdt AND :edt AND
        OPS.AC21 = :pac
    ORDER BY
        OPSd.NrX

    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_KORESP_01(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS3A.ID,
  SPID TYPE OF COLUMN ROPS3A.SPID,
  RAC TYPE OF COLUMN ROPS3A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS3A.NAME /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS3A.SDB,
  SCR TYPE OF COLUMN ROPS3A.SCR,
  AC1 TYPE OF COLUMN ROPS3A.AC1 /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS3A.CLID /* COLLATE UTF8 - default */)
AS
begin
    for SELECT
        gen_id(GEN_ROPS3A_ID, 1) as ID,
        current_connection as SPID,
        T2.AC AS RAC,
        AcP21.Name AS Name,
        T2.BDb AS SDb,
        T2.BCr AS SCr,
        null AS AC1,
        null AS CLID
    FROM
    (
        SELECT AC, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC21 AS AC,
                OPS.Summ AS TDb,
                0.00 AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE (OPSd.Dete BETWEEN :sdt AND :edt) AND OPS.AC11 LIKE :pac

            UNION ALL

            SELECT 
                OPS.AC11 AS AC,
                0.00 AS TDb,
                OPS.Summ AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE (OPSd.Dete BETWEEN :sdt AND :edt) AND OPS.AC21 LIKE :pac

        ) AS T1

        GROUP BY T1.AC
    ) AS T2    

    LEFT JOIN AcP21 ON AcP21.AC = T2.AC
    
    ORDER BY RAC

    into
        :id, :spid, :rac, :name, :sdb, :scr, :ac1, :clid
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_KORESP_01_CLID(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS3A.ID,
  SPID TYPE OF COLUMN ROPS3A.SPID,
  RAC TYPE OF COLUMN ROPS3A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS3A.NAME /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS3A.SDB,
  SCR TYPE OF COLUMN ROPS3A.SCR,
  AC1 TYPE OF COLUMN ROPS3A.AC1 /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS3A.CLID /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS3A_ID, 1) as ID,
        current_connection as SPID,
        T2.AC AS RAC,
        AcP21.Name AS Name,
        T2.BDb AS SDb,
        T2.BCr AS SCr,
        null AS AC1,
        :pclid AS Clid
    FROM
    (
        SELECT AC, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC21 AS AC,
                OPS.Summ AS TDb,
                0.00 AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE 
                (OPSd.Dete BETWEEN :sdt AND :edt) AND 
                OPS.AC11 LIKE :pac AND
                OPSd.ClId = :pclid


            UNION ALL

            SELECT 
                OPS.AC11 AS AC,
                0.00 AS TDb,
                OPS.Summ AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE 
                (OPSd.Dete BETWEEN :sdt AND :edt) AND 
                OPS.AC21 LIKE :pac AND
                OPSd.ClId = :pclid

        ) AS T1

        GROUP BY T1.AC
    ) AS T2    

    LEFT JOIN AcP21 ON AcP21.AC = T2.AC
    
    ORDER BY RAC

    into
        :id, :spid, :rac, :name, :sdb, :scr, :ac1, :clid
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_KORESP_01_CLID2(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS3A.ID,
  SPID TYPE OF COLUMN ROPS3A.SPID,
  RAC TYPE OF COLUMN ROPS3A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS3A.NAME /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS3A.SDB,
  SCR TYPE OF COLUMN ROPS3A.SCR,
  AC1 TYPE OF COLUMN ROPS3A.AC1 /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS3A.CLID /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS3A_ID, 1) as ID,
        current_connection as SPID,
        T2.AC AS RAC,
        AcP21.Name AS Name,
        T2.BDb AS SDb,
        T2.BCr AS SCr,
        null AS AC1,
        :pclid AS Clid
    FROM
    (
        SELECT AC, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC21 AS AC,
                OPS.Summ AS TDb,
                0.00 AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE 
                (OPSd.Dete BETWEEN :sdt AND :edt) AND 
                OPS.AC11 LIKE :pac AND
                OPSd.ClId2 = :pclid


            UNION ALL

            SELECT 
                OPS.AC11 AS AC,
                0.00 AS TDb,
                OPS.Summ AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE 
                (OPSd.Dete BETWEEN :sdt AND :edt) AND 
                OPS.AC21 LIKE :pac AND
                OPSd.ClId2 = :pclid

        ) AS T1

        GROUP BY T1.AC
    ) AS T2    

    LEFT JOIN AcP21 ON AcP21.AC = T2.AC
    
    ORDER BY RAC

    into
        :id, :spid, :rac, :name, :sdb, :scr, :ac1, :clid
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_KORESP_01_CUR(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */,
  PCUR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS3A.ID,
  SPID TYPE OF COLUMN ROPS3A.SPID,
  RAC TYPE OF COLUMN ROPS3A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS3A.NAME /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS3A.SDB,
  SCR TYPE OF COLUMN ROPS3A.SCR,
  AC1 TYPE OF COLUMN ROPS3A.AC1 /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS3A.CLID /* COLLATE UTF8 - default */)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS3A_ID, 1) as ID,
        current_connection as SPID,
        T2.AC AS RAC,
        AcP21.Name AS Name,
        T2.BDb AS SDb,
        T2.BCr AS SCr,
        null AS AC1,
        null AS Clid
    FROM
    (
        SELECT AC, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC21 AS AC,
                OPS.SummC AS TDb,
                0.00 AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE 
                (OPSd.Dete BETWEEN :sdt AND :edt) AND 
                OPS.AC11 = :pac AND
                (:pclid IS NULL OR OPSd.ClId = :pclid) AND
                OPS.Cur = :pcur

            UNION ALL

            SELECT 
                OPS.AC11 AS AC,
                0.00 AS TDb,
                OPS.SummC AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE 
                (OPSd.Dete BETWEEN :sdt AND :edt) AND 
                OPS.AC21 LIKE :pac AND
                (:pclid IS NULL OR OPSd.ClId = :pclid) AND
                OPS.Cur = :pcur

        ) AS T1

        GROUP BY T1.AC
    ) AS T2    

    LEFT JOIN AcP21 ON AcP21.AC = T2.AC
    
    ORDER BY RAC
    into
        :id, :spid, :rac, :name, :sdb, :scr, :ac1, :clid
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_KORESP_02(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS3A.ID,
  SPID TYPE OF COLUMN ROPS3A.SPID,
  RAC TYPE OF COLUMN ROPS3A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS3A.NAME /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS3A.SDB,
  SCR TYPE OF COLUMN ROPS3A.SCR,
  AC1 TYPE OF COLUMN ROPS3A.AC1 /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS3A.CLID /* COLLATE UTF8 - default */)
AS
begin
-- summÄ“jam korespondÄ“joÅos kontus pÄ“c bÄzes konta un koresp. konta
    FOR SELECT
        gen_id(GEN_ROPS3A_ID, 1) as ID,
        current_connection as SPID,
        T2.RAC AS RAC,
        AcP21.Name AS Name,
        T2.BDb AS SDb,
        T2.BCr AS SCr,
        T2.AC AS AC1,
        null AS Clid
    FROM
    (
        SELECT AC, RAC, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC11 AS AC,
                OPS.AC21 AS RAC,
                OPS.Summ AS TDb,
                0.00 AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE (OPSd.Dete BETWEEN :sdt AND :edt) AND OPS.AC11 LIKE :pac

            UNION ALL

            SELECT 
                OPS.AC21 AS AC,
                OPS.AC11 AS RAC,
                0.00 AS TDb,
                OPS.Summ AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE (OPSd.Dete BETWEEN :sdt AND :edt) AND OPS.AC21 LIKE :pac

        ) AS T1

        GROUP BY T1.AC, T1.RAC
    ) AS T2    

    LEFT JOIN AcP21 ON AcP21.AC = T2.RAC
    
    ORDER BY AC1, RAC

    into
        :id, :spid, :rac, :name, :sdb, :scr, :ac1, :clid
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_KORESP_02_CLID(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS3A.ID,
  SPID TYPE OF COLUMN ROPS3A.SPID,
  RAC TYPE OF COLUMN ROPS3A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS3A.NAME /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS3A.SDB,
  SCR TYPE OF COLUMN ROPS3A.SCR,
  AC1 TYPE OF COLUMN ROPS3A.AC1 /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS3A.CLID /* COLLATE UTF8 - default */)
AS
begin
-- summÄ“jam pec bÄzes konta (AC), personas un korespondÄ“joÅÄ konta (RAC)
    FOR SELECT
        gen_id(GEN_ROPS3A_ID, 1) as ID,
        current_connection as SPID,
        T2.RAC AS RAC,
        AcP21.Name AS Name,
        T2.BDb AS SDb,
        T2.BCr AS SCr,
        T2.AC AS AC1,
        T2.Clid AS Clid
    FROM
    (
        SELECT AC, RAC, Clid, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC11 AS AC,
                OPS.AC21 AS RAC,
                OPSd.ClId AS Clid,
                OPS.Summ AS TDb,
                0.00 AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE 
                (OPSd.Dete BETWEEN :sdt AND :edt) AND 
                OPS.AC11 LIKE :pac AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)


            UNION ALL

            SELECT 
                OPS.AC21 AS AC,
                OPS.AC11 AS RAC,
                OPSd.ClId AS Clid,
                0.00 AS TDb,
                OPS.Summ AS TCr

            FROM OPSd JOIN OPS ON OPSd.id = OPS.DocId
            WHERE 
                (OPSd.Dete BETWEEN :sdt AND :edt) AND 
                OPS.AC21 LIKE :pac AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

        ) AS T1

        GROUP BY T1.AC, T1.RAC, Clid
    ) AS T2    

    LEFT JOIN AcP21 ON AcP21.AC = T2.RAC
    
    ORDER BY AC1, Clid, RAC

    into
        :id, :spid, :rac, :name, :sdb, :scr, :ac1, :clid
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_KORESP_11(
  PSD DATE,
  PED DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
    FOR SELECT
        id, spid, did, DETE, nrx,
        doctyp, doctyp1, doctyp2, docst, docnr,
        clid, clid2, name, name2, regnr, regnr2,
        b0, descr, descr2, ac1, ac2, sac1, sac2,
        summc, cur, summ, pvn, rac, sdb, scr,
        rac2, rac3, rac4, rac5, qv, znr

    FROM
    (
        SELECT 
            gen_id(GEN_ROPS1A_ID, 1) AS id,
            current_connection as spid,
            OPSd.id AS did,
            OPSd.Dete,
            OPSd.NrX,
            OPSd.DocTyp,
            DocTyp.id1 AS DocTyp1,
            DocTyp.tpZ AS DocTyp2,
            OPSd.DocSt,
            OPSd.DocNr,
            OPSd.ClId,
            OPSd.ClId2,
            P1.Name AS Name,
            P2.Name AS Name2,
            P1.RegNr AS RegNr,
            P2.RegNr AS RegNr2,
            0 AS b0,
            OPSd.Descr,
            OPS.Descr AS Descr2,
            OPS.AC11 AS Ac1,
            null AS Ac2,
            null AS SAc1,
            null AS SAc2,
            OPS.SummC AS SummC,
            OPS.cur AS Cur,
            OPS.Summ AS Summ,
            0 AS PVN,
            OPS.AC21 AS RAC,
            OPS.Summ AS SDb,
            0.00 AS SCr,
            OPS.AC22 AS RAC2,
            OPS.AC23 AS RAC3,
            OPS.AC24 AS RAC4,
            OPS.AC25 AS RAC5,
            OPS.QV,
            OPSd.ZNR
        FROM
            OPSd INNER 
            JOIN OPS ON OPSd.id = OPS.DocId
            LEFT JOIN Persons AS P1 ON OPSd.ClId = P1.ClId
            LEFT JOIN Persons AS P2 ON OPSd.ClId2 = P2.ClId
            LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
        WHERE
            (OPSd.Dete BETWEEN :psd AND :ped) AND
            OPS.AC11 LIKE :pac

        UNION ALL

        SELECT 
            gen_id(GEN_ROPS1A_ID, 1) AS id,
            current_connection as spid,
            OPSd.id AS did,
            OPSd.Dete,
            OPSd.NrX,
            OPSd.DocTyp,
            DocTyp.id1 AS DocTyp1,
            DocTyp.tpZ AS DocTyp2,
            OPSd.DocSt,
            OPSd.DocNr,
            OPSd.ClId,
            OPSd.ClId2,
            P1.Name AS Name,
            P2.Name AS Name2,
            P1.RegNr AS RegNr,
            P2.RegNr AS RegNr2,
            0 AS b0,
            OPSd.Descr,
            OPS.Descr AS Descr2,
            OPS.AC21 AS Ac1,
            null AS Ac2,
            null AS SAc1,
            null AS SAc2,
            OPS.SummC AS SummC,
            OPS.cur AS Cur,
            OPS.Summ AS Summ,
            0 AS PVN,
            OPS.AC11 AS RAC,
            0.00 AS SDb,
            OPS.Summ AS SCr,
            OPS.AC12 AS RAC2,
            OPS.AC13 AS RAC3,
            OPS.AC14 AS RAC4,
            OPS.AC15 AS RAC5,
            OPS.QV,
            OPSd.ZNR
        FROM
            OPSd INNER 
            JOIN OPS ON OPSd.id = OPS.DocId
            LEFT JOIN Persons AS P1 ON OPSd.ClId = P1.ClId
            LEFT JOIN Persons AS P2 ON OPSd.ClId2 = P2.ClId
            LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
        WHERE
            (OPSd.Dete BETWEEN :psd AND :ped) AND
            OPS.AC21 LIKE :pac
    ) AS TT
    ORDER BY TT.Dete, TT.ZNR


    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_KORESP_11_CLID(
  PSD DATE,
  PED DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
    FOR SELECT
        id, spid, did, DETE, nrx,
        doctyp, doctyp1, doctyp2, docst, docnr,
        clid, clid2, name, name2, regnr, regnr2,
        b0, descr, descr2, ac1, ac2, sac1, sac2,
        summc, cur, summ, pvn, rac, sdb, scr,
        rac2, rac3, rac4, rac5, qv, znr

    FROM
    (
        SELECT 
            gen_id(GEN_ROPS1A_ID, 1) AS id,
            current_connection as spid,
            OPSd.id AS did,
            OPSd.Dete,
            OPSd.NrX,
            OPSd.DocTyp,
            DocTyp.id1 AS DocTyp1,
            DocTyp.tpZ AS DocTyp2,
            OPSd.DocSt,
            OPSd.DocNr,
            OPSd.ClId,
            OPSd.ClId2,
            P1.Name AS Name,
            P2.Name AS Name2,
            P1.RegNr AS RegNr,
            P2.RegNr AS RegNr2,
            0 AS b0,
            OPSd.Descr,
            OPS.Descr AS Descr2,
            OPS.AC11 AS Ac1,
            null AS Ac2,
            null AS SAc1,
            null AS SAc2,
            OPS.SummC AS SummC,
            OPS.cur AS Cur,
            OPS.Summ AS Summ,
            0 AS PVN,
            OPS.AC21 AS RAC,
            OPS.Summ AS SDb,
            0.00 AS SCr,
            OPS.AC22 AS RAC2,
            OPS.AC23 AS RAC3,
            OPS.AC24 AS RAC4,
            OPS.AC25 AS RAC5,
            OPS.QV,
            OPSd.ZNR
        FROM
            OPSd
            INNER JOIN OPS ON OPSd.id = OPS.DocId
            LEFT JOIN Persons AS P1 ON OPSd.ClId = P1.ClId
            LEFT JOIN Persons AS P2 ON OPSd.ClId2 = P2.ClId
            LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
        WHERE
            (OPSd.Dete BETWEEN :psd AND :ped) AND
            OPS.AC11 LIKE :pac AND
            OPSd.ClId = :pclid

        UNION ALL

        SELECT 
            gen_id(GEN_ROPS1A_ID, 1) AS id,
            current_connection as spid,
            OPSd.id AS did,
            OPSd.Dete,
            OPSd.NrX,
            OPSd.DocTyp,
            DocTyp.id1 AS DocTyp1,
            DocTyp.tpZ AS DocTyp2,
            OPSd.DocSt,
            OPSd.DocNr,
            OPSd.ClId,
            OPSd.ClId2,
            P1.Name AS Name,
            P2.Name AS Name2,
            P1.RegNr AS RegNr,
            P2.RegNr AS RegNr2,
            0 AS b0,
            OPSd.Descr,
            OPS.Descr AS Descr2,
            OPS.AC21 AS Ac1,
            null AS Ac2,
            null AS SAc1,
            null AS SAc2,
            OPS.SummC AS SummC,
            OPS.cur AS Cur,
            OPS.Summ AS Summ,
            0 AS PVN,
            OPS.AC11 AS RAC,
            0.00 AS SDb,
            OPS.Summ AS SCr,
            OPS.AC12 AS RAC2,
            OPS.AC13 AS RAC3,
            OPS.AC14 AS RAC4,
            OPS.AC15 AS RAC5,
            OPS.QV,
            OPSd.ZNR
        FROM
            OPSd
            INNER JOIN OPS ON OPSd.id = OPS.DocId
            LEFT JOIN Persons AS P1 ON OPSd.ClId = P1.ClId
            LEFT JOIN Persons AS P2 ON OPSd.ClId2 = P2.ClId
            LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
        WHERE
            (OPSd.Dete BETWEEN :psd AND :ped) AND
            OPS.AC21 LIKE :pac AND
            OPSd.ClId = :pclid
    ) AS TT
    ORDER BY TT.Dete, TT.ZNR


    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_KORESP_11_CLID2(
  PSD DATE,
  PED DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
    FOR SELECT
        id, spid, did, DETE, nrx,
        doctyp, doctyp1, doctyp2, docst, docnr,
        clid, clid2, name, name2, regnr, regnr2,
        b0, descr, descr2, ac1, ac2, sac1, sac2,
        summc, cur, summ, pvn, rac, sdb, scr,
        rac2, rac3, rac4, rac5, qv, znr

    FROM
    (
        SELECT 
            gen_id(GEN_ROPS1A_ID, 1) AS id,
            current_connection as spid,
            OPSd.id AS did,
            OPSd.Dete,
            OPSd.NrX,
            OPSd.DocTyp,
            DocTyp.id1 AS DocTyp1,
            DocTyp.tpZ AS DocTyp2,
            OPSd.DocSt,
            OPSd.DocNr,
            OPSd.ClId,
            OPSd.ClId2,
            P1.Name AS Name,
            P2.Name AS Name2,
            P1.RegNr AS RegNr,
            P2.RegNr AS RegNr2,
            0 AS b0,
            OPSd.Descr,
            OPS.Descr AS Descr2,
            OPS.AC11 AS Ac1,
            null AS Ac2,
            null AS SAc1,
            null AS SAc2,
            OPS.SummC AS SummC,
            OPS.cur AS Cur,
            OPS.Summ AS Summ,
            0 AS PVN,
            OPS.AC21 AS RAC,
            OPS.Summ AS SDb,
            0.00 AS SCr,
            OPS.AC22 AS RAC2,
            OPS.AC23 AS RAC3,
            OPS.AC24 AS RAC4,
            OPS.AC25 AS RAC5,
            OPS.QV,
            OPSd.ZNR
        FROM
            OPSd
            INNER JOIN OPS ON OPSd.id = OPS.DocId
            LEFT JOIN Persons AS P1 ON OPSd.ClId = P1.ClId
            LEFT JOIN Persons AS P2 ON OPSd.ClId2 = P2.ClId
            LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
        WHERE
            (OPSd.Dete BETWEEN :psd AND :ped) AND
            OPS.AC11 LIKE :pac AND
            OPSd.ClId2 = :pclid

        UNION ALL

        SELECT 
            gen_id(GEN_ROPS1A_ID, 1) AS id,
            current_connection as spid,
            OPSd.id AS did,
            OPSd.Dete,
            OPSd.NrX,
            OPSd.DocTyp,
            DocTyp.id1 AS DocTyp1,
            DocTyp.tpZ AS DocTyp2,
            OPSd.DocSt,
            OPSd.DocNr,
            OPSd.ClId,
            OPSd.ClId2,
            P1.Name AS Name,
            P2.Name AS Name2,
            P1.RegNr AS RegNr,
            P2.RegNr AS RegNr2,
            0 AS b0,
            OPSd.Descr,
            OPS.Descr AS Descr2,
            OPS.AC21 AS Ac1,
            null AS Ac2,
            null AS SAc1,
            null AS SAc2,
            OPS.SummC AS SummC,
            OPS.cur AS Cur,
            OPS.Summ AS Summ,
            0 AS PVN,
            OPS.AC11 AS RAC,
            0.00 AS SDb,
            OPS.Summ AS SCr,
            OPS.AC12 AS RAC2,
            OPS.AC13 AS RAC3,
            OPS.AC14 AS RAC4,
            OPS.AC15 AS RAC5,
            OPS.QV,
            OPSd.ZNR
        FROM
            OPSd
            INNER JOIN OPS ON OPSd.id = OPS.DocId
            LEFT JOIN Persons AS P1 ON OPSd.ClId = P1.ClId
            LEFT JOIN Persons AS P2 ON OPSd.ClId2 = P2.ClId
            LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
        WHERE
            (OPSd.Dete BETWEEN :psd AND :ped) AND
            OPS.AC21 LIKE :pac AND
            OPSd.ClId2 = :pclid
    ) AS TT
    ORDER BY TT.Dete, TT.ZNR


    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_KORESP_11_CUR(
  PSD DATE,
  PED DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */,
  PCUR VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
    FOR SELECT
        id, spid, did, DETE, nrx,
        doctyp, doctyp1, doctyp2, docst, docnr,
        clid, clid2, name, name2, regnr, regnr2,
        b0, descr, descr2, ac1, ac2, sac1, sac2,
        summc, cur, summ, pvn, rac, sdb, scr,
        rac2, rac3, rac4, rac5, qv, znr

    FROM
    (
        SELECT 
            gen_id(GEN_ROPS1A_ID, 1) AS id,
            current_connection as spid,
            OPSd.id AS did,
            OPSd.Dete,
            OPSd.NrX,
            OPSd.DocTyp,
            DocTyp.id1 AS DocTyp1,
            DocTyp.tpZ AS DocTyp2,
            OPSd.DocSt,
            OPSd.DocNr,
            OPSd.ClId,
            OPSd.ClId2,
            P1.Name AS Name,
            P2.Name AS Name2,
            P1.RegNr AS RegNr,
            P2.RegNr AS RegNr2,
            0 AS b0,
            OPSd.Descr,
            OPS.Descr AS Descr2,
            OPS.AC11 AS Ac1,
            null AS Ac2,
            null AS SAc1,
            null AS SAc2,
            OPS.SummC AS SummC,
            OPS.cur AS Cur,
            OPS.SummC AS Summ,
            0 AS PVN,
            OPS.AC21 AS RAC,
            OPS.SummC AS SDb,
            0.00 AS SCr,
            OPS.AC22 AS RAC2,
            OPS.AC23 AS RAC3,
            OPS.AC24 AS RAC4,
            OPS.AC25 AS RAC5,
            OPS.QV,
            OPSd.ZNR
        FROM
            OPSd
            INNER JOIN OPS ON OPSd.id = OPS.DocId
            LEFT JOIN Persons AS P1 ON OPSd.ClId = P1.ClId
            LEFT JOIN Persons AS P2 ON OPSd.ClId2 = P2.ClId
            LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
        WHERE
            (OPSd.Dete BETWEEN :psd AND :ped) AND
            OPS.AC11 LIKE :pac AND
            (:pclid IS NULL OR OPSd.ClId = :pclid) AND
            OPS.Cur = :pcur

        UNION ALL

        SELECT 
            gen_id(GEN_ROPS1A_ID, 1) AS id,
            current_connection as spid,
            OPSd.id AS did,
            OPSd.Dete,
            OPSd.NrX,
            OPSd.DocTyp,
            DocTyp.id1 AS DocTyp1,
            DocTyp.tpZ AS DocTyp2,
            OPSd.DocSt,
            OPSd.DocNr,
            OPSd.ClId,
            OPSd.ClId2,
            P1.Name AS Name,
            P2.Name AS Name2,
            P1.RegNr AS RegNr,
            P2.RegNr AS RegNr2,
            0 AS b0,
            OPSd.Descr,
            OPS.Descr AS Descr2,
            OPS.AC21 AS Ac1,
            null AS Ac2,
            null AS SAc1,
            null AS SAc2,
            OPS.SummC AS SummC,
            OPS.cur AS Cur,
            OPS.SummC AS Summ,
            0 AS PVN,
            OPS.AC11 AS RAC,
            0.00 AS SDb,
            OPS.SummC AS SCr,
            OPS.AC12 AS RAC2,
            OPS.AC13 AS RAC3,
            OPS.AC14 AS RAC4,
            OPS.AC15 AS RAC5,
            OPS.QV,
            OPSd.ZNR
        FROM
            OPSd
            INNER JOIN OPS ON OPSd.id = OPS.DocId
            LEFT JOIN Persons AS P1 ON OPSd.ClId = P1.ClId
            LEFT JOIN Persons AS P2 ON OPSd.ClId2 = P2.ClId
            LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
        WHERE
            (OPSd.Dete BETWEEN :psd AND :ped) AND
            OPS.AC21 LIKE :pac AND
            (:pclid IS NULL OR OPSd.ClId = :pclid) AND
            OPS.Cur = :pcur
    ) AS TT
    ORDER BY TT.Dete, TT.ZNR


    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_NPMT_11(
  SDT DATE,
  EDT DATE,
  PAD VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN TREPMT.ID,
  SPID TYPE OF COLUMN TREPMT.SPID,
  AD TYPE OF COLUMN TREPMT.AD /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN TREPMT.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN TREPMT.AC2 /* COLLATE UTF8 - default */,
  ACN1 TYPE OF COLUMN TREPMT.ACN1 /* COLLATE UTF8 - default */,
  ACN2 TYPE OF COLUMN TREPMT.ACN2 /* COLLATE UTF8 - default */,
  M1 TYPE OF COLUMN TREPMT.M1,
  M2 TYPE OF COLUMN TREPMT.M2,
  M3 TYPE OF COLUMN TREPMT.M3,
  M4 TYPE OF COLUMN TREPMT.M4,
  M5 TYPE OF COLUMN TREPMT.M5,
  M6 TYPE OF COLUMN TREPMT.M6,
  M7 TYPE OF COLUMN TREPMT.M7,
  M8 TYPE OF COLUMN TREPMT.M8,
  M9 TYPE OF COLUMN TREPMT.M9,
  M10 TYPE OF COLUMN TREPMT.M10,
  M11 TYPE OF COLUMN TREPMT.M11,
  M12 TYPE OF COLUMN TREPMT.M12,
  N1 TYPE OF COLUMN TREPMT.N1,
  N2 TYPE OF COLUMN TREPMT.N2,
  N3 TYPE OF COLUMN TREPMT.N3,
  N4 TYPE OF COLUMN TREPMT.N4,
  N5 TYPE OF COLUMN TREPMT.N5,
  N6 TYPE OF COLUMN TREPMT.N6,
  N7 TYPE OF COLUMN TREPMT.N7,
  N8 TYPE OF COLUMN TREPMT.N8,
  N9 TYPE OF COLUMN TREPMT.N9,
  N10 TYPE OF COLUMN TREPMT.N10,
  N11 TYPE OF COLUMN TREPMT.N11,
  N12 TYPE OF COLUMN TREPMT.N12,
  MT TYPE OF COLUMN TREPMT.MT,
  NT TYPE OF COLUMN TREPMT.NT)
AS
begin
-- summÄ“jam debeta AC12 (izdevumus)
-- uz TRepMT
    FOR SELECT
        gen_id(GEN_TREPMT_ID, 1) as ID,
        current_connection as SPID,
        :pad AS ad,
        T3.AC AS AC1,
        NULL AS AC2,
        AcP21.Name AS ACN1,
        NULL AS ACN2,
        M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12,
        0.0 AS N1, 0.0 AS N2, 0.0 AS N3, 0.0 AS N4, 0.0 AS N5, 0.0 AS N6,
        0.0 AS N7, 0.0 AS N8, 0.0 AS N9, 0.0 AS N10, 0.0 AS N11, 0.0 AS N12,
        0.0 AS MT, 0.0 AS NT
        
    FROM
    (
        SELECT 
            AC,
            SUM(CASE WHEN MT = 1 THEN ADb ELSE 0.00 END) AS M1,
            SUM(CASE WHEN MT = 2 THEN ADb ELSE 0.00 END) AS M2,
            SUM(CASE WHEN MT = 3 THEN ADb ELSE 0.00 END) AS M3,
            SUM(CASE WHEN MT = 4 THEN ADb ELSE 0.00 END) AS M4,
            SUM(CASE WHEN MT = 5 THEN ADb ELSE 0.00 END) AS M5,
            SUM(CASE WHEN MT = 6 THEN ADb ELSE 0.00 END) AS M6,
            SUM(CASE WHEN MT = 7 THEN ADb ELSE 0.00 END) AS M7,
            SUM(CASE WHEN MT = 8 THEN ADb ELSE 0.00 END) AS M8,
            SUM(CASE WHEN MT = 9 THEN ADb ELSE 0.00 END) AS M9,
            SUM(CASE WHEN MT = 10 THEN ADb ELSE 0.00 END) AS M10,
            SUM(CASE WHEN MT = 11 THEN ADb ELSE 0.00 END) AS M11,
            SUM(CASE WHEN MT = 12 THEN ADb ELSE 0.00 END) AS M12

        FROM
        (
            SELECT AC, MT, SUM(SDb) AS ADb, SUM(SCr) AS ACr
            FROM
            (
                SELECT 
                    OPS.AC12 AS AC,
                    EXTRACT(MONTH FROM OPSd.Dete) AS MT,
                    OPS.Summ AS SDb,
                    0.00 AS SCr

                FROM 
                    OPSd JOIN OPS ON OPSd.id = OPS.DocId
                    LEFT JOIN AcP21 ON OPS.AC12 = AcP21.AC
                WHERE 
                    OPSd.Dete BETWEEN :sdt AND :edt AND
                    OPS.AC12 IS NOT NULL AND
                    (AcP21.id1 IS NULL OR AcP21.id1 NOT IN ('KA','BA','CN'))

            ) AS T1

            GROUP BY T1.AC, T1.MT

        ) AS T2
        GROUP BY T2.AC
    ) AS T3

    LEFT JOIN AcP21 ON AcP21.AC = T3.AC
    ORDER BY AC1

    into
        :id, :spid, :ad, :ac1, :ac2, :acn1, :acn2,
        :m1, :m2, :m3, :m4, :m5, :m6, :m7, :m8, :m9, :m10, :m11, :m12,
        :n1, :n2, :n3, :n4, :n5, :n6, :n7, :n8, :n9, :n10, :n11, :n12,
        :mt, :nt
  do
  begin
    suspend;
  end
end
^

ALTER PROCEDURE SP_REP_NPMT_12(
  SDT DATE,
  EDT DATE,
  PAD VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN TREPMT.ID,
  SPID TYPE OF COLUMN TREPMT.SPID,
  AD TYPE OF COLUMN TREPMT.AD /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN TREPMT.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN TREPMT.AC2 /* COLLATE UTF8 - default */,
  ACN1 TYPE OF COLUMN TREPMT.ACN1 /* COLLATE UTF8 - default */,
  ACN2 TYPE OF COLUMN TREPMT.ACN2 /* COLLATE UTF8 - default */,
  M1 TYPE OF COLUMN TREPMT.M1,
  M2 TYPE OF COLUMN TREPMT.M2,
  M3 TYPE OF COLUMN TREPMT.M3,
  M4 TYPE OF COLUMN TREPMT.M4,
  M5 TYPE OF COLUMN TREPMT.M5,
  M6 TYPE OF COLUMN TREPMT.M6,
  M7 TYPE OF COLUMN TREPMT.M7,
  M8 TYPE OF COLUMN TREPMT.M8,
  M9 TYPE OF COLUMN TREPMT.M9,
  M10 TYPE OF COLUMN TREPMT.M10,
  M11 TYPE OF COLUMN TREPMT.M11,
  M12 TYPE OF COLUMN TREPMT.M12,
  N1 TYPE OF COLUMN TREPMT.N1,
  N2 TYPE OF COLUMN TREPMT.N2,
  N3 TYPE OF COLUMN TREPMT.N3,
  N4 TYPE OF COLUMN TREPMT.N4,
  N5 TYPE OF COLUMN TREPMT.N5,
  N6 TYPE OF COLUMN TREPMT.N6,
  N7 TYPE OF COLUMN TREPMT.N7,
  N8 TYPE OF COLUMN TREPMT.N8,
  N9 TYPE OF COLUMN TREPMT.N9,
  N10 TYPE OF COLUMN TREPMT.N10,
  N11 TYPE OF COLUMN TREPMT.N11,
  N12 TYPE OF COLUMN TREPMT.N12,
  MT TYPE OF COLUMN TREPMT.MT,
  NT TYPE OF COLUMN TREPMT.NT)
AS
begin
-- summÄ“jam debeta AC22 (ieÅ†Ä“mumi)
-- uz TRepMT
    FOR SELECT
        gen_id(GEN_TREPMT_ID, 1) as ID,
        current_connection as SPID,
        :pad AS ad,
        T3.AC AS AC1,
        NULL AS AC2,
        AcP21.Name AS ACN1,
        NULL AS ACN2,
        M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12,
        0.0 AS N1, 0.0 AS N2, 0.0 AS N3, 0.0 AS N4, 0.0 AS N5, 0.0 AS N6,
        0.0 AS N7, 0.0 AS N8, 0.0 AS N9, 0.0 AS N10, 0.0 AS N11, 0.0 AS N12,
        0.0 AS MT, 0.0 AS NT
        
    FROM
    (
        SELECT 
            AC,
            SUM(CASE WHEN MT = 1 THEN ACr ELSE 0.00 END) AS M1,
            SUM(CASE WHEN MT = 2 THEN ACr ELSE 0.00 END) AS M2,
            SUM(CASE WHEN MT = 3 THEN ACr ELSE 0.00 END) AS M3,
            SUM(CASE WHEN MT = 4 THEN ACr ELSE 0.00 END) AS M4,
            SUM(CASE WHEN MT = 5 THEN ACr ELSE 0.00 END) AS M5,
            SUM(CASE WHEN MT = 6 THEN ACr ELSE 0.00 END) AS M6,
            SUM(CASE WHEN MT = 7 THEN ACr ELSE 0.00 END) AS M7,
            SUM(CASE WHEN MT = 8 THEN ACr ELSE 0.00 END) AS M8,
            SUM(CASE WHEN MT = 9 THEN ACr ELSE 0.00 END) AS M9,
            SUM(CASE WHEN MT = 10 THEN ACr ELSE 0.00 END) AS M10,
            SUM(CASE WHEN MT = 11 THEN ACr ELSE 0.00 END) AS M11,
            SUM(CASE WHEN MT = 12 THEN ACr ELSE 0.00 END) AS M12

        FROM
        (
            SELECT AC, MT, SUM(SDb) AS ADb, SUM(SCr) AS ACr
            FROM
            (
                SELECT 
                    OPS.AC22 AS AC,
                    EXTRACT(MONTH FROM OPSd.Dete) AS MT,
                    0.00 AS SDb,
                    OPS.Summ AS SCr

                FROM 
                    OPSd JOIN OPS ON OPSd.id = OPS.DocId
                    LEFT JOIN AcP21 ON OPS.AC22 = AcP21.AC
                WHERE 
                    OPSd.Dete BETWEEN :sdt AND :edt AND
                    OPS.AC22 IS NOT NULL AND
                    (AcP21.id1 IS NULL OR AcP21.id1 NOT IN ('KA','BA','CN'))

            ) AS T1

            GROUP BY T1.AC, T1.MT

        ) AS T2
        GROUP BY T2.AC
    ) AS T3

    LEFT JOIN AcP21 ON AcP21.AC = T3.AC
    ORDER BY AC1

    into
        :id, :spid, :ad, :ac1, :ac2, :acn1, :acn2,
        :m1, :m2, :m3, :m4, :m5, :m6, :m7, :m8, :m9, :m10, :m11, :m12,
        :n1, :n2, :n3, :n4, :n5, :n6, :n7, :n8, :n9, :n10, :n11, :n12,
        :mt, :nt
  do
  begin
    suspend;
  end
end
^

ALTER PROCEDURE SP_REP_NPMT_13(
  SDT DATE,
  EDT DATE,
  PAD VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN TREPMT.ID,
  SPID TYPE OF COLUMN TREPMT.SPID,
  AD TYPE OF COLUMN TREPMT.AD /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN TREPMT.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN TREPMT.AC2 /* COLLATE UTF8 - default */,
  ACN1 TYPE OF COLUMN TREPMT.ACN1 /* COLLATE UTF8 - default */,
  ACN2 TYPE OF COLUMN TREPMT.ACN2 /* COLLATE UTF8 - default */,
  M1 TYPE OF COLUMN TREPMT.M1,
  M2 TYPE OF COLUMN TREPMT.M2,
  M3 TYPE OF COLUMN TREPMT.M3,
  M4 TYPE OF COLUMN TREPMT.M4,
  M5 TYPE OF COLUMN TREPMT.M5,
  M6 TYPE OF COLUMN TREPMT.M6,
  M7 TYPE OF COLUMN TREPMT.M7,
  M8 TYPE OF COLUMN TREPMT.M8,
  M9 TYPE OF COLUMN TREPMT.M9,
  M10 TYPE OF COLUMN TREPMT.M10,
  M11 TYPE OF COLUMN TREPMT.M11,
  M12 TYPE OF COLUMN TREPMT.M12,
  N1 TYPE OF COLUMN TREPMT.N1,
  N2 TYPE OF COLUMN TREPMT.N2,
  N3 TYPE OF COLUMN TREPMT.N3,
  N4 TYPE OF COLUMN TREPMT.N4,
  N5 TYPE OF COLUMN TREPMT.N5,
  N6 TYPE OF COLUMN TREPMT.N6,
  N7 TYPE OF COLUMN TREPMT.N7,
  N8 TYPE OF COLUMN TREPMT.N8,
  N9 TYPE OF COLUMN TREPMT.N9,
  N10 TYPE OF COLUMN TREPMT.N10,
  N11 TYPE OF COLUMN TREPMT.N11,
  N12 TYPE OF COLUMN TREPMT.N12,
  MT TYPE OF COLUMN TREPMT.MT,
  NT TYPE OF COLUMN TREPMT.NT)
AS
begin
-- summÄ“jam naudas apgrozijumu pa mÄ“nÄ“Åiem
-- sÄkuma atlikumi (pirms sdt) bÅ«s iekÅ MT, NT
-- uz TRepMT
    FOR SELECT
        gen_id(GEN_TREPMT_ID, 1) as ID,
        current_connection as SPID,
        :pad AS ad,
        T3.AC AS AC1,
        NULL AS AC2,
        AcP21.Name AS ACN1,
        NULL AS ACN2,
        M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12,
        N1,N2,N3,N4,N5,N6,N7,N8,N9,N10,N11,N12,
        MT, NT
    FROM
    (
        SELECT 
            AC,
            SUM(CASE WHEN MT = 0 THEN ADb ELSE 0.00 END) AS MT,
            SUM(CASE WHEN MT = 0 THEN ACr ELSE 0.00 END) AS NT,

            SUM(CASE WHEN MT = 1 THEN ADb ELSE 0.00 END) AS M1,
            SUM(CASE WHEN MT = 2 THEN ADb ELSE 0.00 END) AS M2,
            SUM(CASE WHEN MT = 3 THEN ADb ELSE 0.00 END) AS M3,
            SUM(CASE WHEN MT = 4 THEN ADb ELSE 0.00 END) AS M4,
            SUM(CASE WHEN MT = 5 THEN ADb ELSE 0.00 END) AS M5,
            SUM(CASE WHEN MT = 6 THEN ADb ELSE 0.00 END) AS M6,
            SUM(CASE WHEN MT = 7 THEN ADb ELSE 0.00 END) AS M7,
            SUM(CASE WHEN MT = 8 THEN ADb ELSE 0.00 END) AS M8,
            SUM(CASE WHEN MT = 9 THEN ADb ELSE 0.00 END) AS M9,
            SUM(CASE WHEN MT = 10 THEN ADb ELSE 0.00 END) AS M10,
            SUM(CASE WHEN MT = 11 THEN ADb ELSE 0.00 END) AS M11,
            SUM(CASE WHEN MT = 12 THEN ADb ELSE 0.00 END) AS M12,

            SUM(CASE WHEN MT = 1 THEN ACr ELSE 0.00 END) AS N1,
            SUM(CASE WHEN MT = 2 THEN ACr ELSE 0.00 END) AS N2,
            SUM(CASE WHEN MT = 3 THEN ACr ELSE 0.00 END) AS N3,
            SUM(CASE WHEN MT = 4 THEN ACr ELSE 0.00 END) AS N4,
            SUM(CASE WHEN MT = 5 THEN ACr ELSE 0.00 END) AS N5,
            SUM(CASE WHEN MT = 6 THEN ACr ELSE 0.00 END) AS N6,
            SUM(CASE WHEN MT = 7 THEN ACr ELSE 0.00 END) AS N7,
            SUM(CASE WHEN MT = 8 THEN ACr ELSE 0.00 END) AS N8,
            SUM(CASE WHEN MT = 9 THEN ACr ELSE 0.00 END) AS N9,
            SUM(CASE WHEN MT = 10 THEN ACr ELSE 0.00 END) AS N10,
            SUM(CASE WHEN MT = 11 THEN ACr ELSE 0.00 END) AS N11,
            SUM(CASE WHEN MT = 12 THEN ACr ELSE 0.00 END) AS N12

        FROM
        (
            SELECT AC, MT, SUM(SDb) AS ADb, SUM(SCr) AS ACr
            FROM
            (
                SELECT 
                    OPS.AC11 AS AC,
                    CASE
                        WHEN OPSd.Dete < :sdt THEN 0
                        ELSE EXTRACT(MONTH FROM OPSd.Dete) END AS MT,
                    OPS.Summ AS SDb,
                    0.00 AS SCr

                FROM 
                    OPSd JOIN OPS ON OPSd.id = OPS.DocId
                    INNER JOIN AcP21 ON OPS.AC12 = AcP21.AC

                WHERE 
                    OPSd.Dete <= :edt AND
                    OPS.AC12 IS NOT NULL AND
                    AcP21.id1 IN ('KA','BA','CN')

                UNION ALL

                SELECT 
                    OPS.AC21 AS AC,
                    CASE
                        WHEN OPSd.Dete < :sdt THEN 0
                        ELSE EXTRACT(MONTH FROM OPSd.Dete) END AS MT,
                    0.00 AS SDb,
                    OPS.Summ AS SCr

                FROM 
                    OPSd JOIN OPS ON OPSd.id = OPS.DocId
                    INNER JOIN AcP21 ON OPS.AC22 = AcP21.AC

                WHERE 
                    OPSd.Dete <= :edt AND
                    OPS.AC22 IS NOT NULL AND
                    AcP21.id1 IN ('KA','BA','CN')

                UNION ALL

                    SELECT
                        Bal0.AC11 AS AC,
                        0 AS MT,
                        coalesce(Bal0.SummD, 0.00) AS SDb,
                        coalesce(Bal0.SummC, 0.00) AS SCr
                    FROM 
                        Bal0 JOIN AcP21 ON Bal0.AC11 = AcP21.AC
                    WHERE
                        AcP21.id1 IN ('KA','BA','CN')

            ) AS T1

            GROUP BY T1.AC, T1.MT

        ) AS T2
        GROUP BY T2.AC
    ) AS T3

    LEFT JOIN AcP21 ON AcP21.AC = T3.AC
    ORDER BY AC1


    into
        :id, :spid, :ad, :ac1, :ac2, :acn1, :acn2,
        :m1, :m2, :m3, :m4, :m5, :m6, :m7, :m8, :m9, :m10, :m11, :m12,
        :n1, :n2, :n3, :n4, :n5, :n6, :n7, :n8, :n9, :n10, :n11, :n12,
        :mt, :nt
    do
    begin
     suspend;
    end
end
^

ALTER PROCEDURE SP_REP_NPMT_14(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID TYPE OF COLUMN TREPMT.ID,
  SPID TYPE OF COLUMN TREPMT.SPID,
  AD TYPE OF COLUMN TREPMT.AD /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN TREPMT.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN TREPMT.AC2 /* COLLATE UTF8 - default */,
  ACN1 TYPE OF COLUMN TREPMT.ACN1 /* COLLATE UTF8 - default */,
  ACN2 TYPE OF COLUMN TREPMT.ACN2 /* COLLATE UTF8 - default */,
  M1 TYPE OF COLUMN TREPMT.M1,
  M2 TYPE OF COLUMN TREPMT.M2,
  M3 TYPE OF COLUMN TREPMT.M3,
  M4 TYPE OF COLUMN TREPMT.M4,
  M5 TYPE OF COLUMN TREPMT.M5,
  M6 TYPE OF COLUMN TREPMT.M6,
  M7 TYPE OF COLUMN TREPMT.M7,
  M8 TYPE OF COLUMN TREPMT.M8,
  M9 TYPE OF COLUMN TREPMT.M9,
  M10 TYPE OF COLUMN TREPMT.M10,
  M11 TYPE OF COLUMN TREPMT.M11,
  M12 TYPE OF COLUMN TREPMT.M12,
  N1 TYPE OF COLUMN TREPMT.N1,
  N2 TYPE OF COLUMN TREPMT.N2,
  N3 TYPE OF COLUMN TREPMT.N3,
  N4 TYPE OF COLUMN TREPMT.N4,
  N5 TYPE OF COLUMN TREPMT.N5,
  N6 TYPE OF COLUMN TREPMT.N6,
  N7 TYPE OF COLUMN TREPMT.N7,
  N8 TYPE OF COLUMN TREPMT.N8,
  N9 TYPE OF COLUMN TREPMT.N9,
  N10 TYPE OF COLUMN TREPMT.N10,
  N11 TYPE OF COLUMN TREPMT.N11,
  N12 TYPE OF COLUMN TREPMT.N12,
  MT TYPE OF COLUMN TREPMT.MT,
  NT TYPE OF COLUMN TREPMT.NT)
AS
begin
    DELETE 
    FROM TRepMT
    WHERE TRepMT.spid = current_connection;
    
    INSERT INTO TRepMT(
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt)
    SELECT
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    FROM sp_rep_npmt_13(:sdt, :edt, 'A');

    INSERT INTO TRepMT(
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt)
    SELECT
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    FROM sp_rep_npmt_12(:sdt, :edt, 'B');
    
    INSERT INTO TRepMT(
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt)
    SELECT
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    FROM sp_rep_npmt_11(:sdt, :edt, 'C');

    INSERT INTO TRepMT(
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt)
    SELECT
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    FROM sp_rep_npmt_13(:sdt, :edt, 'D');

    FOR SELECT *
    FROM TRepMT
    WHERE TRepMT.spid = current_connection

    into
        :id, :spid, :ad, :ac1, :ac2, :acn1, :acn2,
        :m1, :m2, :m3, :m4, :m5, :m6, :m7, :m8, :m9, :m10, :m11, :m12,
        :n1, :n2, :n3, :n4, :n5, :n6, :n7, :n8, :n9, :n10, :n11, :n12,
        :mt, :nt
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_NPMT_21(
  SDT DATE,
  EDT DATE,
  PAD VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN TREPMT.ID,
  SPID TYPE OF COLUMN TREPMT.SPID,
  AD TYPE OF COLUMN TREPMT.AD /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN TREPMT.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN TREPMT.AC2 /* COLLATE UTF8 - default */,
  ACN1 TYPE OF COLUMN TREPMT.ACN1 /* COLLATE UTF8 - default */,
  ACN2 TYPE OF COLUMN TREPMT.ACN2 /* COLLATE UTF8 - default */,
  M1 TYPE OF COLUMN TREPMT.M1,
  M2 TYPE OF COLUMN TREPMT.M2,
  M3 TYPE OF COLUMN TREPMT.M3,
  M4 TYPE OF COLUMN TREPMT.M4,
  M5 TYPE OF COLUMN TREPMT.M5,
  M6 TYPE OF COLUMN TREPMT.M6,
  M7 TYPE OF COLUMN TREPMT.M7,
  M8 TYPE OF COLUMN TREPMT.M8,
  M9 TYPE OF COLUMN TREPMT.M9,
  M10 TYPE OF COLUMN TREPMT.M10,
  M11 TYPE OF COLUMN TREPMT.M11,
  M12 TYPE OF COLUMN TREPMT.M12,
  N1 TYPE OF COLUMN TREPMT.N1,
  N2 TYPE OF COLUMN TREPMT.N2,
  N3 TYPE OF COLUMN TREPMT.N3,
  N4 TYPE OF COLUMN TREPMT.N4,
  N5 TYPE OF COLUMN TREPMT.N5,
  N6 TYPE OF COLUMN TREPMT.N6,
  N7 TYPE OF COLUMN TREPMT.N7,
  N8 TYPE OF COLUMN TREPMT.N8,
  N9 TYPE OF COLUMN TREPMT.N9,
  N10 TYPE OF COLUMN TREPMT.N10,
  N11 TYPE OF COLUMN TREPMT.N11,
  N12 TYPE OF COLUMN TREPMT.N12,
  MT TYPE OF COLUMN TREPMT.MT,
  NT TYPE OF COLUMN TREPMT.NT)
AS
begin
-- summÄ“jam debeta AC12 un AC14 (izdevumus)
-- uz TRepMT
    FOR SELECT
        gen_id(GEN_TREPMT_ID, 1) as ID,
        current_connection as SPID,
        :pad AS ad,
        T3.AC AS AC1,
        T3.AC2 AS AC2,
        AcP21.Name AS ACN1,
        AcP24.Name AS ACN2,
        M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12,
        0.0 AS N1, 0.0 AS N2, 0.0 AS N3, 0.0 AS N4, 0.0 AS N5, 0.0 AS N6,
        0.0 AS N7, 0.0 AS N8, 0.0 AS N9, 0.0 AS N10, 0.0 AS N11, 0.0 AS N12,
        0.0 AS MT, 0.0 AS NT
        
    FROM
    (
        SELECT 
            AC, AC2,
            SUM(CASE WHEN MT = 1 THEN ADb ELSE 0.00 END) AS M1,
            SUM(CASE WHEN MT = 2 THEN ADb ELSE 0.00 END) AS M2,
            SUM(CASE WHEN MT = 3 THEN ADb ELSE 0.00 END) AS M3,
            SUM(CASE WHEN MT = 4 THEN ADb ELSE 0.00 END) AS M4,
            SUM(CASE WHEN MT = 5 THEN ADb ELSE 0.00 END) AS M5,
            SUM(CASE WHEN MT = 6 THEN ADb ELSE 0.00 END) AS M6,
            SUM(CASE WHEN MT = 7 THEN ADb ELSE 0.00 END) AS M7,
            SUM(CASE WHEN MT = 8 THEN ADb ELSE 0.00 END) AS M8,
            SUM(CASE WHEN MT = 9 THEN ADb ELSE 0.00 END) AS M9,
            SUM(CASE WHEN MT = 10 THEN ADb ELSE 0.00 END) AS M10,
            SUM(CASE WHEN MT = 11 THEN ADb ELSE 0.00 END) AS M11,
            SUM(CASE WHEN MT = 12 THEN ADb ELSE 0.00 END) AS M12

        FROM
        (
            SELECT AC, AC2, MT, SUM(SDb) AS ADb, SUM(SCr) AS ACr
            FROM
            (
                SELECT 
                    OPS.AC12 AS AC,
                    OPS.AC14 AS AC2,
                    EXTRACT(MONTH FROM OPSd.Dete) AS MT,
                    OPS.Summ AS SDb,
                    0.00 AS SCr

                FROM 
                    OPSd JOIN OPS ON OPSd.id = OPS.DocId
                    LEFT JOIN AcP21 ON OPS.AC12 = AcP21.AC
                WHERE 
                    OPSd.Dete BETWEEN :sdt AND :edt AND
                    OPS.AC12 IS NOT NULL AND
                    (AcP21.id1 IS NULL OR AcP21.id1 NOT IN ('KA','BA','CN'))

            ) AS T1

            GROUP BY T1.AC, T1.AC2, T1.MT

        ) AS T2
        GROUP BY T2.AC, T2.AC2
    ) AS T3

    LEFT JOIN AcP21 ON AcP21.AC = T3.AC
    LEFT JOIN AcP24 ON AcP24.idx = T3.AC2

    ORDER BY AC1

    into
        :id, :spid, :ad, :ac1, :ac2, :acn1, :acn2,
        :m1, :m2, :m3, :m4, :m5, :m6, :m7, :m8, :m9, :m10, :m11, :m12,
        :n1, :n2, :n3, :n4, :n5, :n6, :n7, :n8, :n9, :n10, :n11, :n12,
        :mt, :nt
  do
  begin
    suspend;
  end
end
^

ALTER PROCEDURE SP_REP_NPMT_22(
  SDT DATE,
  EDT DATE,
  PAD VARCHAR(3) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN TREPMT.ID,
  SPID TYPE OF COLUMN TREPMT.SPID,
  AD TYPE OF COLUMN TREPMT.AD /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN TREPMT.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN TREPMT.AC2 /* COLLATE UTF8 - default */,
  ACN1 TYPE OF COLUMN TREPMT.ACN1 /* COLLATE UTF8 - default */,
  ACN2 TYPE OF COLUMN TREPMT.ACN2 /* COLLATE UTF8 - default */,
  M1 TYPE OF COLUMN TREPMT.M1,
  M2 TYPE OF COLUMN TREPMT.M2,
  M3 TYPE OF COLUMN TREPMT.M3,
  M4 TYPE OF COLUMN TREPMT.M4,
  M5 TYPE OF COLUMN TREPMT.M5,
  M6 TYPE OF COLUMN TREPMT.M6,
  M7 TYPE OF COLUMN TREPMT.M7,
  M8 TYPE OF COLUMN TREPMT.M8,
  M9 TYPE OF COLUMN TREPMT.M9,
  M10 TYPE OF COLUMN TREPMT.M10,
  M11 TYPE OF COLUMN TREPMT.M11,
  M12 TYPE OF COLUMN TREPMT.M12,
  N1 TYPE OF COLUMN TREPMT.N1,
  N2 TYPE OF COLUMN TREPMT.N2,
  N3 TYPE OF COLUMN TREPMT.N3,
  N4 TYPE OF COLUMN TREPMT.N4,
  N5 TYPE OF COLUMN TREPMT.N5,
  N6 TYPE OF COLUMN TREPMT.N6,
  N7 TYPE OF COLUMN TREPMT.N7,
  N8 TYPE OF COLUMN TREPMT.N8,
  N9 TYPE OF COLUMN TREPMT.N9,
  N10 TYPE OF COLUMN TREPMT.N10,
  N11 TYPE OF COLUMN TREPMT.N11,
  N12 TYPE OF COLUMN TREPMT.N12,
  MT TYPE OF COLUMN TREPMT.MT,
  NT TYPE OF COLUMN TREPMT.NT)
AS
begin
-- summÄ“jam debeta AC22 (ieÅ†Ä“mumi)
-- uz TRepMT
    FOR SELECT
        gen_id(GEN_TREPMT_ID, 1) as ID,
        current_connection as SPID,
        :pad AS ad,
        T3.AC AS AC1,
        T3.AC2 AS AC2,
        AcP21.Name AS ACN1,
        AcP24.Name AS ACN2,
        M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12,
        0.0 AS N1, 0.0 AS N2, 0.0 AS N3, 0.0 AS N4, 0.0 AS N5, 0.0 AS N6,
        0.0 AS N7, 0.0 AS N8, 0.0 AS N9, 0.0 AS N10, 0.0 AS N11, 0.0 AS N12,
        0.0 AS MT, 0.0 AS NT
        
    FROM
    (
        SELECT 
            AC, AC2,
            SUM(CASE WHEN MT = 1 THEN ACr ELSE 0.00 END) AS M1,
            SUM(CASE WHEN MT = 2 THEN ACr ELSE 0.00 END) AS M2,
            SUM(CASE WHEN MT = 3 THEN ACr ELSE 0.00 END) AS M3,
            SUM(CASE WHEN MT = 4 THEN ACr ELSE 0.00 END) AS M4,
            SUM(CASE WHEN MT = 5 THEN ACr ELSE 0.00 END) AS M5,
            SUM(CASE WHEN MT = 6 THEN ACr ELSE 0.00 END) AS M6,
            SUM(CASE WHEN MT = 7 THEN ACr ELSE 0.00 END) AS M7,
            SUM(CASE WHEN MT = 8 THEN ACr ELSE 0.00 END) AS M8,
            SUM(CASE WHEN MT = 9 THEN ACr ELSE 0.00 END) AS M9,
            SUM(CASE WHEN MT = 10 THEN ACr ELSE 0.00 END) AS M10,
            SUM(CASE WHEN MT = 11 THEN ACr ELSE 0.00 END) AS M11,
            SUM(CASE WHEN MT = 12 THEN ACr ELSE 0.00 END) AS M12

        FROM
        (
            SELECT AC, AC2, MT, SUM(SDb) AS ADb, SUM(SCr) AS ACr
            FROM
            (
                SELECT 
                    OPS.AC22 AS AC,
                    OPS.AC24 AS AC2,
                    EXTRACT(MONTH FROM OPSd.Dete) AS MT,
                    0.00 AS SDb,
                    OPS.Summ AS SCr

                FROM 
                    OPSd JOIN OPS ON OPSd.id = OPS.DocId
                    LEFT JOIN AcP21 ON OPS.AC22 = AcP21.AC
                WHERE 
                    OPSd.Dete BETWEEN :sdt AND :edt AND
                    OPS.AC22 IS NOT NULL AND
                    (AcP21.id1 IS NULL OR AcP21.id1 NOT IN ('KA','BA','CN'))

            ) AS T1

            GROUP BY T1.AC, T1.AC2, T1.MT

        ) AS T2
        GROUP BY T2.AC, T2.AC2
    ) AS T3

    LEFT JOIN AcP21 ON AcP21.AC = T3.AC
    LEFT JOIN AcP24    ON AcP24.idx = T3.AC2

    ORDER BY AC1, AC2

    into
        :id, :spid, :ad, :ac1, :ac2, :acn1, :acn2,
        :m1, :m2, :m3, :m4, :m5, :m6, :m7, :m8, :m9, :m10, :m11, :m12,
        :n1, :n2, :n3, :n4, :n5, :n6, :n7, :n8, :n9, :n10, :n11, :n12,
        :mt, :nt
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_NPMT_24(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID TYPE OF COLUMN TREPMT.ID,
  SPID TYPE OF COLUMN TREPMT.SPID,
  AD TYPE OF COLUMN TREPMT.AD /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN TREPMT.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN TREPMT.AC2 /* COLLATE UTF8 - default */,
  ACN1 TYPE OF COLUMN TREPMT.ACN1 /* COLLATE UTF8 - default */,
  ACN2 TYPE OF COLUMN TREPMT.ACN2 /* COLLATE UTF8 - default */,
  M1 TYPE OF COLUMN TREPMT.M1,
  M2 TYPE OF COLUMN TREPMT.M2,
  M3 TYPE OF COLUMN TREPMT.M3,
  M4 TYPE OF COLUMN TREPMT.M4,
  M5 TYPE OF COLUMN TREPMT.M5,
  M6 TYPE OF COLUMN TREPMT.M6,
  M7 TYPE OF COLUMN TREPMT.M7,
  M8 TYPE OF COLUMN TREPMT.M8,
  M9 TYPE OF COLUMN TREPMT.M9,
  M10 TYPE OF COLUMN TREPMT.M10,
  M11 TYPE OF COLUMN TREPMT.M11,
  M12 TYPE OF COLUMN TREPMT.M12,
  N1 TYPE OF COLUMN TREPMT.N1,
  N2 TYPE OF COLUMN TREPMT.N2,
  N3 TYPE OF COLUMN TREPMT.N3,
  N4 TYPE OF COLUMN TREPMT.N4,
  N5 TYPE OF COLUMN TREPMT.N5,
  N6 TYPE OF COLUMN TREPMT.N6,
  N7 TYPE OF COLUMN TREPMT.N7,
  N8 TYPE OF COLUMN TREPMT.N8,
  N9 TYPE OF COLUMN TREPMT.N9,
  N10 TYPE OF COLUMN TREPMT.N10,
  N11 TYPE OF COLUMN TREPMT.N11,
  N12 TYPE OF COLUMN TREPMT.N12,
  MT TYPE OF COLUMN TREPMT.MT,
  NT TYPE OF COLUMN TREPMT.NT)
AS
begin
    DELETE 
    FROM TRepMT
    WHERE TRepMT.spid = current_connection;

    INSERT INTO TRepMT(
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt)
    SELECT
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    FROM sp_rep_npmt_13(:sdt, :edt, 'A');

    INSERT INTO TRepMT(
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt)
    SELECT
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    FROM sp_rep_npmt_22(:sdt, :edt, 'B');

    INSERT INTO TRepMT(
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt)
    SELECT
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    FROM sp_rep_npmt_21(:sdt, :edt, 'C');

    INSERT INTO TRepMT(
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt)
    SELECT
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    FROM sp_rep_npmt_13(:sdt, :edt, 'D');

    FOR SELECT *
    FROM TRepMT
    WHERE TRepMT.spid = current_connection

    into
        :id, :spid, :ad, :ac1, :ac2, :acn1, :acn2,
        :m1, :m2, :m3, :m4, :m5, :m6, :m7, :m8, :m9, :m10, :m11, :m12,
        :n1, :n2, :n3, :n4, :n5, :n6, :n7, :n8, :n9, :n10, :n11, :n12,
        :mt, :nt
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_NPMT_44(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID TYPE OF COLUMN TREPMT.ID,
  SPID TYPE OF COLUMN TREPMT.SPID,
  AD TYPE OF COLUMN TREPMT.AD /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN TREPMT.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN TREPMT.AC2 /* COLLATE UTF8 - default */,
  ACN1 TYPE OF COLUMN TREPMT.ACN1 /* COLLATE UTF8 - default */,
  ACN2 TYPE OF COLUMN TREPMT.ACN2 /* COLLATE UTF8 - default */,
  M1 TYPE OF COLUMN TREPMT.M1,
  M2 TYPE OF COLUMN TREPMT.M2,
  M3 TYPE OF COLUMN TREPMT.M3,
  M4 TYPE OF COLUMN TREPMT.M4,
  M5 TYPE OF COLUMN TREPMT.M5,
  M6 TYPE OF COLUMN TREPMT.M6,
  M7 TYPE OF COLUMN TREPMT.M7,
  M8 TYPE OF COLUMN TREPMT.M8,
  M9 TYPE OF COLUMN TREPMT.M9,
  M10 TYPE OF COLUMN TREPMT.M10,
  M11 TYPE OF COLUMN TREPMT.M11,
  M12 TYPE OF COLUMN TREPMT.M12,
  N1 TYPE OF COLUMN TREPMT.N1,
  N2 TYPE OF COLUMN TREPMT.N2,
  N3 TYPE OF COLUMN TREPMT.N3,
  N4 TYPE OF COLUMN TREPMT.N4,
  N5 TYPE OF COLUMN TREPMT.N5,
  N6 TYPE OF COLUMN TREPMT.N6,
  N7 TYPE OF COLUMN TREPMT.N7,
  N8 TYPE OF COLUMN TREPMT.N8,
  N9 TYPE OF COLUMN TREPMT.N9,
  N10 TYPE OF COLUMN TREPMT.N10,
  N11 TYPE OF COLUMN TREPMT.N11,
  N12 TYPE OF COLUMN TREPMT.N12,
  MT TYPE OF COLUMN TREPMT.MT,
  NT TYPE OF COLUMN TREPMT.NT)
AS
begin
    DELETE 
    FROM TRepMT
    WHERE TRepMT.spid = current_connection;
    
    INSERT INTO TRepMT(
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt)
    SELECT
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    FROM sp_rep_npmt_43(:sdt, :edt, 'A');

    INSERT INTO TRepMT(
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt)
    SELECT
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    FROM sp_rep_npmt_42(:sdt, :edt, 'B');
    
    INSERT INTO TRepMT(
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt)
    SELECT
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    FROM sp_rep_npmt_41(:sdt, :edt, 'C');

    INSERT INTO TRepMT(
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt)
    SELECT
        id, spid,  ad,
        ac1,  ac2, acn1, acn2,
        m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12,
        n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12,
        mt, nt
    FROM sp_rep_npmt_43(:sdt, :edt, 'D');

    FOR SELECT *
    FROM TRepMT
    WHERE TRepMT.spid = current_connection

    into
        :id, :spid, :ad, :ac1, :ac2, :acn1, :acn2,
        :m1, :m2, :m3, :m4, :m5, :m6, :m7, :m8, :m9, :m10, :m11, :m12,
        :n1, :n2, :n3, :n4, :n5, :n6, :n7, :n8, :n9, :n10, :n11, :n12,
        :mt, :nt
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_PERS_11(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
-- apgrozijums pÄ“c 1.paz. un clid
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) as ID,
        current_connection as SPID,
        T2.AC AS AC,
        null as RAC,
        AcP21.Name AS Name,
        T2.ADb - T2.ACr as b0,
        T2.ADb AS SDb,
        T2.ACr AS SCr,
        T2.BDb AS TDb,
        T2.BCr AS TCr,
        T2.ClId AS Clid,
        Persons.Name AS Name1,
        Persons.regnr as regnr,
        null as rname
    FROM
    (
        SELECT AC, ClId, SUM(SDb) AS ADb, SUM(SCr) AS ACr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPS.AC11 AS AC,
                OPSd.ClId AS ClId,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END AS SDb,
                0.00 AS SCr,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END AS TDb,
                0.00 AS TCr

            FROM 
                OPSd JOIN OPS ON OPSd.id = OPS.DocId
                INNER JOIN AcP21 ON OPS.AC11 = AcP21.AC
            WHERE 
                OPSd.Dete <= :edt AND 
                OPS.AC11 LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                OPS.AC21 AS AC,
                OPSd.ClId AS ClId,
                0.00 AS SDb,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END AS SCr,
                0.00 AS TDb,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END AS TCr

            FROM 
                OPSd JOIN OPS ON OPSd.id = OPS.DocId
                INNER JOIN AcP21 ON OPS.AC21 = AcP21.AC
            WHERE 
                OPSd.Dete <= :edt AND 
                OPS.AC21 LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                Bal0.AC11 AS AC,
                Bal0.ClId AS ClId,
                Bal0.SummD AS SDb,
                Bal0.SummC AS SCr,
                0.00 AS TDb,
                0.00 AS TCr
            FROM 
                Bal0 INNER JOIN AcP21 ON Bal0.AC11 = AcP21.AC
            WHERE 
                Bal0.AC11 LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR Bal0.ClId = :pclid)

        ) AS T1

        GROUP BY T1.AC, T1.Clid
    ) AS T2    

    INNER JOIN AcP21 ON AcP21.AC = T2.AC
    INNER JOIN Persons ON Persons.ClId = T2.Clid
    
    WHERE (ADb - ACr) <> 0.00 OR BDb <> 0.00 OR BCr <> 0.00
    ORDER BY AC, Clid

    into
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname
    do
    begin
        suspend;
    end

end
^

ALTER PROCEDURE SP_REP_PERS_12(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS2A.ID,
  SPID TYPE OF COLUMN ROPS2A.SPID,
  AC TYPE OF COLUMN ROPS2A.AC /* COLLATE UTF8 - default */,
  RAC TYPE OF COLUMN ROPS2A.RAC /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS2A.NAME /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS2A.B0,
  SDB TYPE OF COLUMN ROPS2A.SDB,
  SCR TYPE OF COLUMN ROPS2A.SCR,
  TDB TYPE OF COLUMN ROPS2A.TDB,
  TCR TYPE OF COLUMN ROPS2A.TCR,
  CLID TYPE OF COLUMN ROPS2A.CLID /* COLLATE UTF8 - default */,
  NAME1 TYPE OF COLUMN ROPS2A.NAME1 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS2A.REGNR /* COLLATE UTF8 - default */,
  RNAME TYPE OF COLUMN ROPS2A.RNAME /* COLLATE UTF8 - default */)
AS
begin
-- apgrozijums pÄ“c clid
    FOR SELECT
        gen_id(GEN_ROPS2A_ID, 1) as ID,
        current_connection as SPID,
        null AS AC,
        null as RAC,
        null AS Name,
        T2.ADb - T2.ACr as b0,
        T2.ADb AS SDb,
        T2.ACr AS SCr,
        T2.BDb AS TDb,
        T2.BCr AS TCr,
        T2.ClId AS Clid,
        Persons.Name AS Name1,
        Persons.regnr as regnr,
        null as rname
    FROM
    (
        SELECT ClId, SUM(SDb) AS ADb, SUM(SCr) AS ACr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPSd.ClId AS ClId,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END AS SDb,
                0.00 AS SCr,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END AS TDb,
                0.00 AS TCr

            FROM 
                OPSd JOIN OPS ON OPSd.id = OPS.DocId
                INNER JOIN AcP21 ON OPS.AC11 = AcP21.AC
            WHERE 
                OPSd.Dete <= :edt AND 
                OPS.AC11 LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                OPSd.ClId AS ClId,
                0.00 AS SDb,
                CASE
                    WHEN OPSd.Dete < :sdt THEN OPS.Summ
                    ELSE 0.00
                END AS SCr,
                0.00 AS TDb,
                CASE
                    WHEN OPSd.Dete >= :sdt THEN OPS.Summ
                    ELSE 0.00
                END AS TCr

            FROM 
                OPSd JOIN OPS ON OPSd.id = OPS.DocId
                INNER JOIN AcP21 ON OPS.AC21 = AcP21.AC
            WHERE 
                OPSd.Dete <= :edt AND 
                OPS.AC21 LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                Bal0.ClId AS ClId,
                Bal0.SummD AS SDb,
                Bal0.SummC AS SCr,
                0.00 AS TDb,
                0.00 AS TCr
            FROM 
                Bal0 INNER JOIN AcP21 ON Bal0.AC11 = AcP21.AC
            WHERE 
                Bal0.AC11 LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR Bal0.ClId = :pclid)

        ) AS T1

        GROUP BY T1.Clid
    ) AS T2    

    INNER JOIN Persons ON Persons.ClId = T2.Clid
    
    WHERE (ADb - ACr) <> 0.00 OR BDb <> 0.00 OR BCr <> 0.00
    ORDER BY Clid

    into
        :id, :spid, :ac, :rac, :name,
        :b0,
        :sdb, :scr, :tdb, :tcr,
        :clid, :name1, :regnr, :rname
    do
    begin
        suspend;
    end

end
^

ALTER PROCEDURE SP_REP_PERS_13(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN TREPA1.ID,
  SPID TYPE OF COLUMN TREPA1.SPID,
  I1 TYPE OF COLUMN TREPA1.I1 /* COLLATE UTF8 - default */,
  NM TYPE OF COLUMN TREPA1.NM /* COLLATE UTF8 - default */,
  DT TYPE OF COLUMN TREPA1.DT,
  ST TYPE OF COLUMN TREPA1.ST /* COLLATE UTF8 - default */,
  NR TYPE OF COLUMN TREPA1.NR /* COLLATE UTF8 - default */,
  S1 TYPE OF COLUMN TREPA1.S1,
  S2 TYPE OF COLUMN TREPA1.S2,
  S3 TYPE OF COLUMN TREPA1.S3,
  S4 TYPE OF COLUMN TREPA1.S4)
AS
begin
-- neapmaksātās pavadzīmess, kas izrakstītas pēc :sdt,
--        vai kur ir bijusi kustība pēc :edt
    FOR SELECT
        gen_id(GEN_TREPA1_ID, 1) as ID,
        current_connection as SPID,
        T2.ClId AS i1,
        Persons.Name AS nm,
        T2.dt AS dt,
        T2.DocSt AS st,
        T2.DocNr AS nr,
        T2.BDb AS s1,
        T2.BCr AS s2,
        0.0 AS s3, 
        0.0 AS s4
    FROM
    (
        SELECT ClId, COALESCE(MAX(dtx), MIN(dt)) AS dt, DocSt, DocNr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPSd.ClId AS ClId,
                OPSd.Dete AS dt,
                OPSd.DocSt AS DocSt,
                OPSd.DocNr AS DocNr,
                OPS.Summ AS TDb,
                0.00 AS TCr,
                iif(:pac starting '2', OPSd.Dete, null) as dtx

            FROM 
                OPSd JOIN OPS ON OPSd.id = OPS.DocId
                INNER JOIN AcP21 ON OPS.AC11 = AcP21.AC
            WHERE 
                OPS.AC11 LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                OPSd.ClId AS ClId,
                OPSd.Dete AS dt,
                OPSd.DocSt AS DocSt,
                OPSd.DocNr AS DocNr,
                0.00 AS TDb,
                OPS.Summ AS TCr,
                iif(:pac starting '5', OPSd.Dete, null) as dtx

            FROM 
                OPSd JOIN OPS ON OPSd.id = OPS.DocId
                INNER JOIN AcP21 ON OPS.AC21 = AcP21.AC
            WHERE 
                OPS.AC21 LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                DOCS0.ClId AS ClId,
                DOCS0.Dete AS dt,
                DOCS0.DocSt AS DocSt,
                DOCS0.DocNr AS DocNr,
                DOCS0.Summ AS TDb,
                0.00 AS TCr,
                iif(:pac starting '2', DOCS0.Dete, null) as dtx

            FROM 
                DOCS0
                INNER JOIN AcP21 ON DOCS0.AC = AcP21.AC
            WHERE 
                DOCS0.Summ > 0.0 AND
                DOCS0.AC LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR DOCS0.ClId = :pclid)

            UNION ALL

            SELECT 
                DOCS0.ClId AS ClId,
                DOCS0.Dete AS dt,
                DOCS0.DocSt AS DocSt,
                DOCS0.DocNr AS DocNr,
                0.00 AS TDb,
                -DOCS0.Summ AS TcR,
                iif(:pac starting '5', DOCS0.Dete, null) as dtx

            FROM 
                DOCS0
                INNER JOIN AcP21 ON DOCS0.AC = AcP21.AC
            WHERE 
                DOCS0.Summ < 0.0 AND
                DOCS0.AC LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR DOCS0.ClId = :pclid)

        ) AS T1

        GROUP BY T1.ClId, T1.DocSt, T1.DocNr
        HAVING MIN(T1.dt) >= :sdt OR MAX(T1.dt) >= :edt

    ) AS T2    
    
    INNER JOIN Persons ON Persons.ClId = T2.Clid
    
    WHERE BDb <> BCr
    ORDER BY i1, dt, nr

    into
        :id, :spid, :i1, :nm, :dt, :st, :nr,
        :s1, :s2, :s3, :s4
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_PERS_14(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN TREPA1.ID,
  SPID TYPE OF COLUMN TREPA1.SPID,
  I1 TYPE OF COLUMN TREPA1.I1 /* COLLATE UTF8 - default */,
  NM TYPE OF COLUMN TREPA1.NM /* COLLATE UTF8 - default */,
  DT TYPE OF COLUMN TREPA1.DT,
  ST TYPE OF COLUMN TREPA1.ST /* COLLATE UTF8 - default */,
  NR TYPE OF COLUMN TREPA1.NR /* COLLATE UTF8 - default */,
  S1 TYPE OF COLUMN TREPA1.S1,
  S2 TYPE OF COLUMN TREPA1.S2,
  S3 TYPE OF COLUMN TREPA1.S3,
  S4 TYPE OF COLUMN TREPA1.S4)
AS
begin
-- pavadzÄ«mes
    FOR SELECT
        gen_id(GEN_TREPA1_ID, 1) as ID,
        current_connection as SPID,
        T2.ClId AS i1,
        Persons.Name AS nm,
        T2.dt AS dt,
        T2.DocSt AS st,
        T2.DocNr AS nr,
        T2.BDb AS s1,
        T2.BCr AS s2,
        0.0 AS s3,
        0.0 AS s4
    FROM
    (
        SELECT ClId, COALESCE(MAX(dtx), MIN(dt)) as dt, DocSt, DocNr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPSd.ClId AS ClId,
                OPSd.Dete AS dt,
                OPSd.DocSt AS DocSt,
                OPSd.DocNr AS DocNr,
                OPS.Summ AS TDb,
                0.00 AS TCr,
                iif(:pac starting '2', OPSd.Dete, null) as dtx

            FROM 
                OPSd JOIN OPS ON OPSd.id = OPS.DocId
                INNER JOIN AcP21 ON OPS.AC11 = AcP21.AC
            WHERE 
                OPSd.Dete BETWEEN :sdt AND :edt AND 
                OPS.AC11 LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                OPSd.ClId AS ClId,
                OPSd.Dete AS dt,
                OPSd.DocSt AS DocSt,
                OPSd.DocNr AS DocNr,
                0.00 AS TDb,
                OPS.Summ AS TCr,
                iif(:pac starting '5', OPSd.Dete, null) as dtx

            FROM 
                OPSd JOIN OPS ON OPSd.id = OPS.DocId
                INNER JOIN AcP21 ON OPS.AC21 = AcP21.AC
            WHERE 
                OPSd.Dete BETWEEN :sdt AND :edt AND 
                OPS.AC21 LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

        ) AS T1

        GROUP BY T1.ClId, T1.DocSt, T1.DocNr

    ) AS T2    
    
    INNER JOIN Persons ON Persons.ClId = T2.Clid
    
    WHERE BDb <> 0.00 OR BCr <> 0.00
    ORDER BY i1, dt, nr


    into
        :id, :spid, :i1, :nm, :dt, :st, :nr,
        :s1, :s2, :s3, :s4
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_PERS_15(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN TREPA1.ID,
  SPID TYPE OF COLUMN TREPA1.SPID,
  I1 TYPE OF COLUMN TREPA1.I1 /* COLLATE UTF8 - default */,
  NM TYPE OF COLUMN TREPA1.NM /* COLLATE UTF8 - default */,
  DT TYPE OF COLUMN TREPA1.DT,
  ST TYPE OF COLUMN TREPA1.ST /* COLLATE UTF8 - default */,
  NR TYPE OF COLUMN TREPA1.NR /* COLLATE UTF8 - default */,
  S1 TYPE OF COLUMN TREPA1.S1,
  S2 TYPE OF COLUMN TREPA1.S2,
  S3 TYPE OF COLUMN TREPA1.S3,
  S4 TYPE OF COLUMN TREPA1.S4)
AS
begin
-- pavadzÄ«mes
    FOR SELECT
        gen_id(GEN_TREPA1_ID, 1) as ID,
        current_connection as SPID,
        T2.ClId AS i1,
        Persons.Name AS nm,
        T2.dt AS dt,
        T2.DocSt AS st,
        T2.DocNr AS nr,
        T2.BDb AS s1,
        T2.BCr AS s2,
        0.0 AS s3, 
        0.0 AS s4
    FROM
    (
        SELECT ClId, dt, DocSt, DocNr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPSd.ClId AS ClId,
                OPSd.Dete AS dt,
                OPSd.DocSt AS DocSt,
                OPSd.DocNr AS DocNr,
                OPS.Summ AS TDb,
                0.00 AS TCr

            FROM 
                OPSd JOIN OPS ON OPSd.id = OPS.DocId
                INNER JOIN AcP21 ON OPS.AC11 = AcP21.AC
            WHERE 
                OPSd.Dete BETWEEN :sdt AND :edt AND 
                OPS.AC11 LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                OPSd.ClId AS ClId,
                OPSd.Dete AS dt,
                OPSd.DocSt AS DocSt,
                OPSd.DocNr AS DocNr,
                0.00 AS TDb,
                OPS.Summ AS TCr

            FROM 
                OPSd JOIN OPS ON OPSd.id = OPS.DocId
                INNER JOIN AcP21 ON OPS.AC21 = AcP21.AC
            WHERE 
                OPSd.Dete BETWEEN :sdt AND :edt AND 
                OPS.AC21 LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

        ) AS T1

        GROUP BY T1.ClId, T1.dt, T1.DocSt, T1.DocNr

    ) AS T2    
    
    INNER JOIN Persons ON Persons.ClId = T2.Clid
    
    WHERE BDb <> 0.00 OR BCr <> 0.00
    ORDER BY i1, dt, nr

    into
        :id, :spid, :i1, :nm, :dt, :st, :nr,
        :s1, :s2, :s3, :s4
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_PERS_16(
  SDT DATE,
  EDT DATE,
  PAC VARCHAR(8) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN TREPA1.ID,
  SPID TYPE OF COLUMN TREPA1.SPID,
  I1 TYPE OF COLUMN TREPA1.I1 /* COLLATE UTF8 - default */,
  NM TYPE OF COLUMN TREPA1.NM /* COLLATE UTF8 - default */,
  DT TYPE OF COLUMN TREPA1.DT,
  ST TYPE OF COLUMN TREPA1.ST /* COLLATE UTF8 - default */,
  NR TYPE OF COLUMN TREPA1.NR /* COLLATE UTF8 - default */,
  S1 TYPE OF COLUMN TREPA1.S1,
  S2 TYPE OF COLUMN TREPA1.S2,
  S3 TYPE OF COLUMN TREPA1.S3,
  S4 TYPE OF COLUMN TREPA1.S4)
AS
begin
-- neapmaksātās pavadzīmess no :sdt līdz :edt

    FOR SELECT
        gen_id(GEN_TREPA1_ID, 1) as ID,
        current_connection as SPID,
        T2.ClId AS i1,
        Persons.Name AS nm,
        T2.dt AS dt,
        T2.DocSt AS st,
        T2.DocNr AS nr,
        T2.BDb AS s1,
        T2.BCr AS s2,
        0.0 AS s3, 
        0.0 AS s4
    FROM
    (
        SELECT ClId, COALESCE(MAX(dtx), MIN(dt)) AS dt, DocSt, DocNr, SUM(TDb) AS BDb, SUM(TCr) AS BCr
        FROM
        (
            SELECT 
                OPSd.ClId AS ClId,
                OPSd.Dete AS dt,
                OPSd.DocSt AS DocSt,
                OPSd.DocNr AS DocNr,
                OPS.Summ AS TDb,
                0.00 AS TCr,
                iif(:pac starting '2', OPSd.Dete, null) as dtx

            FROM 
                OPSd JOIN OPS ON OPSd.id = OPS.DocId
                INNER JOIN AcP21 ON OPS.AC11 = AcP21.AC
            WHERE 
                OPSD.dete BETWEEN :SDT AND :EDT AND
                OPS.AC11 LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                OPSd.ClId AS ClId,
                OPSd.Dete AS dt,
                OPSd.DocSt AS DocSt,
                OPSd.DocNr AS DocNr,
                0.00 AS TDb,
                OPS.Summ AS TCr,
                iif(:pac starting '5', OPSd.Dete, null) as dtx

            FROM 
                OPSd JOIN OPS ON OPSd.id = OPS.DocId
                INNER JOIN AcP21 ON OPS.AC21 = AcP21.AC
            WHERE 
                OPSD.dete BETWEEN :SDT AND :EDT AND
                OPS.AC21 LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR OPSd.ClId = :pclid)

            UNION ALL

            SELECT 
                DOCS0.ClId AS ClId,
                DOCS0.Dete AS dt,
                DOCS0.DocSt AS DocSt,
                DOCS0.DocNr AS DocNr,
                DOCS0.Summ AS TDb,
                0.00 AS TCr,
                iif(:pac starting '2', DOCS0.Dete, null) as dtx

            FROM 
                DOCS0
                INNER JOIN AcP21 ON DOCS0.AC = AcP21.AC
            WHERE 
                DOCS0.Summ > 0.0 AND
                DOCS0.AC LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR DOCS0.ClId = :pclid)

            UNION ALL

            SELECT 
                DOCS0.ClId AS ClId,
                DOCS0.Dete AS dt,
                DOCS0.DocSt AS DocSt,
                DOCS0.DocNr AS DocNr,
                0.00 AS TDb,
                -DOCS0.Summ AS TcR,
                iif(:pac starting '5', DOCS0.Dete, null) as dtx

            FROM 
                DOCS0
                INNER JOIN AcP21 ON DOCS0.AC = AcP21.AC
            WHERE 
                DOCS0.Summ < 0.0 AND
                DOCS0.AC LIKE :pac AND
                AcP21.id2 IN ('DB','KR') AND
                (:pclid IS NULL OR DOCS0.ClId = :pclid)

        ) AS T1

        GROUP BY T1.ClId, T1.DocSt, T1.DocNr

    ) AS T2    
    
    INNER JOIN Persons ON Persons.ClId = T2.Clid
    
    WHERE BDb <> BCr
    ORDER BY i1, dt, nr

    into
        :id, :spid, :i1, :nm, :dt, :st, :nr,
        :s1, :s2, :s3, :s4
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_PVN_22(
  PSD DATE,
  PED DATE,
  RG1 MONEY,
  RG2 MONEY)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
-- PVN piel 1.1 - izdevumiem
    
    DELETE FROM ttemp_pvn1 WHERE Did IS NOT NULL;

    INSERT INTO ttemp_pvn1(
        did, clid, doctyp1, doctyp2, doctypc,
        rac5, summ, pvn, summc, cur)
    SELECT
        did, clid, doctyp1, doctyp2, doctypc,
        rac5, summ, pvn, summc, cur
    FROM SP_REP_PVN_21(:PSD, :PED, :RG1, :RG2);


    UPDATE ttemp_pvn1
    SET ttemp_pvn1.summdoc =
        (
            SELECT SUM(ST2.summ)
            FROM
                OPSD AS DT1
                INNER JOIN OPSD AS DT2 ON
                    (DT1.id = ttemp_pvn1.did AND
                     DT1.DETE = DT2.DETE AND
                     DT1.CLID = DT2.CLID AND
                     DT1.DOCTYP = DT2.DOCTYP AND
                     DT1.DOCNR = DT2.DOCNR)
                INNER JOIN ttemp_pvn1 AS ST2 ON ST2.did = DT2.id
        )
    WHERE EXISTS(
            SELECT ID
            FROM OPSD AS DW1
            WHERE
                DW1.id = ttemp_pvn1.did AND
                DW1.CLID IS NOT NULL AND
                DW1.DOCTYP IS NOT NULL AND
                DW1.DOCNR IS NOT NULL);


    UPDATE ttemp_pvn1
    SET ttemp_pvn1.summdoc = ttemp_pvn1.summ
    WHERE NOT EXISTS(
            SELECT ID
            FROM OPSD AS DW1
            WHERE
                DW1.id = ttemp_pvn1.did AND
                DW1.CLID IS NOT NULL AND
                DW1.DOCTYP IS NOT NULL AND
                DW1.DOCNR IS NOT NULL);



    INSERT INTO ttemp_pvn2(clid)
    SELECT TT1.ClId
    FROM ttemp_pvn1 AS TT1
    WHERE 
        TT1.ClId IS NOT NULL AND
        ABS(TT1.SummDoc) < :rg1 AND
        TT1.DocTypC = 0
    GROUP BY TT1.ClId
    HAVING SUM(ABS(TT1.Summ)) < :rg1;


    FOR SELECT
        gen_id(GEN_ROPS1A_ID, 1) as ID,
        current_connection as SPID,
        T4.did,
        CASE
            WHEN OPSd.DT2 IS NULL
            THEN OPSd.Dete
            ELSE OPSd.DT2
            END AS Dete,
        null AS nrx,
        null AS DocTyp,
        DocTyp.pvnpaz AS DocTyp1,
        T4.DocTyp2 AS DocTyp2,
        OPSd.DocSt,
        OPSd.DocNr,
        OPSd.clid AS clid,
        null AS clid2,
        Persons.Name AS Name,
        null AS Name2,
        Persons.PVNRegNr AS RegNr,
        null AS RegNr2,
        0.0 AS b0,
        null AS descr,
        null AS descr2,
        null AS AC1,
        null AS AC2,
        null AS SAC1,
        null AS SAC2,
        0.0 AS SummC,
        'EUR' AS Cur,
        T4.Summ AS Summ,
        T4.PVN AS PVN,
        null AS RAC,
        0.0 AS SDb,
        0.0 AS SCr,
        null AS RAC2,
        null AS RAC3,
        null AS RAC4,
        null AS RAC5,
        0.0 AS QV,
        OPSd.znr AS ZNR

    FROM
    (
        SELECT
            T3.did,
            T3.ClId,
            T3.DocTyp2,
            SUM(T3.Summ) AS Summ,
            SUM(T3.PVN) AS PVN
        FROM
        (    
            SELECT
                -1 AS did,
                NULL AS ClId,
                'T' AS DocTyp2,
                T2.Summ AS Summ,
                T2.PVN AS PVN

            FROM TTEMP_PVN1 AS T2 LEFT JOIN TTEMP_PVN2 AS T21 ON T2.ClId = T21.ClId
            WHERE 
                ((ABS(T2.SummDoc) < :rg1 AND
                T2.DocTypC = 0 AND
                (T2.ClId IS NOT NULL AND T21.ClId IS NOT NULL)))
                OR
                (T2.ClId IS NULL)

            UNION ALL

            SELECT
                -1 AS did,
                T2.ClId AS ClId,
                'V' AS DocTyp2,
                T2.Summ AS Summ,
                T2.PVN AS PVN

            FROM TTEMP_PVN1 AS T2 LEFT JOIN TTEMP_PVN2 AS T21 ON T2.ClId = T21.ClId
            WHERE 
                ABS(T2.SummDoc) < :rg1 AND
                T2.DocTypC = 0 AND
                (T2.ClId IS NOT NULL AND T21.ClId IS NULL)
            
            UNION ALL

            SELECT
                T2.did AS did,
                T2.ClId AS ClId,
                T2.DocTyp2 AS DocTyp2,
                T2.Summ AS Summ,
                T2.PVN AS PVN

            FROM TTEMP_PVN1 AS T2 LEFT JOIN TTEMP_PVN2 AS T21 ON T2.ClId = T21.ClId
            WHERE 
                T2.ClId IS NOT NULL AND
                (ABS(T2.SummDoc) >= :rg1 OR
                T2.DocTypC = 1)

        ) AS T3
        GROUP BY T3.did, T3.ClId, T3.DocTyp2

    ) AS T4 

        LEFT JOIN OPSd ON T4.did = OPSd.id
        LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
        LEFT JOIN Persons ON T4.ClId = Persons.ClId

    ORDER BY OPSd.Dete


    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_PVN_32(
  PSD DATE,
  PED DATE,
  RG1 MONEY,
  RG2 MONEY)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
-- PVN 3. pielikums     (ieņēmumi)

    
    DELETE FROM ttemp_pvn1 WHERE Did IS NOT NULL;

    INSERT INTO ttemp_pvn1(
        did, clid, doctyp1, doctyp2, doctypc,
        rac5, summ, pvn, summc, cur)
    SELECT
        did, clid, doctyp1, doctyp2, doctypc,
        rac5, summ, pvn, summc, cur
    FROM SP_REP_PVN_31(:PSD, :PED, :RG1, :RG2);


    INSERT INTO ttemp_pvn2(clid)
    SELECT TT1.ClId
    FROM ttemp_pvn1 AS TT1
    WHERE 
        TT1.ClId IS NOT NULL AND
        ABS(TT1.Summ) < :rg1 AND
        TT1.DocTypC = 0
    GROUP BY TT1.ClId
    HAVING SUM(ABS(TT1.Summ)) < :rg1;


    FOR SELECT
        gen_id(GEN_ROPS1A_ID, 1) as ID,
        current_connection as SPID,
        T4.did,
        CASE
            WHEN OPSd.DT2 IS NULL
            THEN OPSd.Dete
            ELSE OPSd.DT2
            END AS Dete,
        null AS nrx,
        null AS DocTyp,
        T4.DocTyp1 AS DocTyp1,
        T4.DocTyp2 AS DocTyp2,
        OPSd.DocSt,
        OPSd.DocNr,
        OPSd.clid AS clid,
        null AS clid2,
        Persons.Name AS Name,
        null AS Name2,
        Persons.PVNRegNr AS RegNr,
        null AS RegNr2,
        0.0 AS b0,
        null AS descr,
        null AS descr2,
        null AS AC1,
        null AS AC2,
        null AS SAC1,
        null AS SAC2,
        0.0 AS SummC,
        'EUR' AS Cur,
        T4.Summ AS Summ,
        T4.PVN AS PVN,
        null AS RAC,
        0.0 AS SDb,
        0.0 AS SCr,
        null AS RAC2,
        null AS RAC3,
        null AS RAC4,
        null AS RAC5,
        0.0 AS QV,
        OPSd.znr AS ZNR
    
    FROM
    (
        SELECT
            T3.did,
            T3.ClId,
            T3.DocTyp1,
            T3.DocTyp2,
            SUM(T3.Summ) AS Summ,
            SUM(T3.PVN) AS PVN
        FROM
        (    
            SELECT
                -1 AS did,
                NULL AS ClId,
                'X' AS DocTyp1,
                T2.DocTyp2 AS DocTyp2,
                T2.Summ AS Summ,
                T2.PVN AS PVN

            FROM TTEMP_PVN1 AS T2
            WHERE 
                T2.DocTyp1 = 'X'

            UNION ALL

            SELECT
                -1 AS did,
                NULL AS ClId,
                'T' AS DocTyp1,
                T2.DocTyp2 AS DocTyp2,
                T2.Summ AS Summ,
                T2.PVN AS PVN

            FROM TTEMP_PVN1 AS T2 LEFT JOIN TTEMP_PVN2 AS T21 ON T2.ClId = T21.ClId
            WHERE 
                (
                    ABS(T2.Summ) < :rg1 AND 
                    T2.DocTypC = 0 AND
                    T21.ClId IS NOT NULL AND
                    T2.DocTyp1 <> 'X'
                ) OR (
                    T2.ClId IS NULL AND
                    T2.DocTyp1 <> 'X'
                )

            UNION ALL

            SELECT
                -1 AS did,
                T2.ClId AS ClId,
                'V' AS DocTyp1,
                T2.DocTyp2 AS DocTyp2,
                T2.Summ AS Summ,
                T2.PVN AS PVN

            FROM TTEMP_PVN1 AS T2 LEFT JOIN TTEMP_PVN2 AS T21 ON T2.ClId = T21.ClId
            WHERE 
                ABS(T2.Summ) < :rg1 AND 
                T2.DocTypC = 0 AND
                T2.ClId IS NOT NULL AND
                T21.ClId IS NULL
            
            UNION ALL

            SELECT
                T2.did AS did,
                T2.ClId AS ClId,
                T2.DocTyp1 AS DocTyp1,
                T2.DocTyp2 AS DocTyp2,
                T2.Summ AS Summ,
                T2.PVN AS PVN

            FROM TTEMP_PVN1 AS T2 LEFT JOIN TTEMP_PVN2 AS T21 ON T2.ClId = T21.ClId
            WHERE 
                (
                    ABS(T2.Summ) >= :rg1 OR
                    T2.DocTypC = 1
                ) AND
                    T2.DocTyp1 <> 'X' AND
                    T2.ClId IS NOT NULL

        ) AS T3
        GROUP BY T3.did, T3.ClId, T3.DocTyp1, T3.DocTyp2

    ) AS T4 

        LEFT JOIN OPSd ON T4.did = OPSd.id
        LEFT JOIN Persons ON T4.ClId = Persons.ClId

    ORDER BY OPSd.Dete


    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_PVN_41(
  PSD DATE,
  PED DATE,
  RG1 MONEY,
  RG2 MONEY)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
-- PVN2 uz ES piegÄdÄtÄ prece vai pakalpojumi (ieÅ†Ä“mumi)
    FOR SELECT
        gen_id(GEN_ROPS1A_ID, 1) as ID,
        current_connection as SPID,
        did,
        CASE
            WHEN OPSd.DT2 IS NULL
            THEN OPSd.Dete
            ELSE OPSd.DT2
            END AS Dete,
        null AS nrx,
        null AS DocTyp,
        DocTyp.pvnpaz AS DocTyp1,
        T2.DocTyp2, 
        OPSd.DocSt,
        OPSd.DocNr,
        OPSd.clid AS clid,
        null AS clid2,
        Persons.Name AS Name,
        null AS Name2,
        Persons.PVNRegNr AS RegNr,
        null AS RegNr2,
        0.0 AS b0,
        null AS descr,
        null AS descr2,
        null AS AC1,
        null AS AC2,
        null AS SAC1,
        null AS SAC2,
        0.0 AS SummC,
        'EUR' AS Cur,
        T2.Summ AS Summ,  
        T2.PVN AS PVN,
        null AS RAC,
        0.0 AS SDb,
        0.0 AS SCr,
        null AS RAC2,
        null AS RAC3,
        null AS RAC4,
        null AS RAC5,
        0.0 AS QV,
        OPSd.znr AS ZNR

    FROM
    (
        SELECT 
            T1.did,
            T1.ClId,
            T1.DocTyp1,
            MAX(T1.DocTyp2) AS DocTyp2,
            MAX(T1.RAC5) AS RAC5,
            SUM(T1.Summ) AS Summ,
            SUM(T1.PVN) AS PVN
        FROM
        (
            SELECT 
                OPSd.id AS did, 
                OPSd.ClId AS ClId,
                OPSd.DocTyp AS DocTyp1,
                AcPVN.pz1 AS DocTyp2,
                OPS.AC25 AS RAC5,
                OPS.Summ AS Summ,
                0.00 AS PVN
            FROM
                OPSd INNER JOIN OPS ON OPSd.id = OPS.DocId
                LEFT JOIN AcPVN ON OPS.AC25 = AcPVN.id
            WHERE
                OPSd.Dete BETWEEN :psd AND :ped AND
                AcPVN.pz3 IN ('71', '72') 

        ) AS T1

        GROUP BY T1.did, T1.ClId, T1.DocTyp1

    ) AS T2
        INNER JOIN OPSd ON T2.did = OPSd.id
        LEFT JOIN DocTyp ON T2.DocTyp1 = DocTyp.id
        LEFT JOIN Persons ON T2.ClId = Persons.ClId

    WHERE 
        T2.Summ <> 0.00 AND
        T2.DocTyp2 IS NOT NULL

    ORDER BY OPSd.Dete

    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_PVN_42(
  PSD DATE,
  PED DATE,
  RG1 MONEY,
  RG2 MONEY)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
-- PVN2 uz ES piegÄdÄtÄ prece vai pakalpojumi (ieÅ†Ä“mumi)
    FOR SELECT
        gen_id(GEN_ROPS1A_ID, 1) as ID,
        current_connection as SPID,
        null,
        null AS Dete,
        null AS nrx,
        null AS DocTyp,
        null AS DocTyp1,
        T2.DocTyp2, 
        null AS DocSt,
        null AS DocNr,
        null AS clid,
        null AS clid2,
        Persons.Name AS Name,
        null AS Name2,
        Persons.PVNRegNr AS RegNr,
        null AS RegNr2,
        0.0 AS b0,
        null AS descr,
        null AS descr2,
        null AS AC1,
        null AS AC2,
        null AS SAC1,
        null AS SAC2,
        0.0 AS SummC,
        'EUR' AS Cur,
        T2.Summ AS Summ,
        T2.PVN AS PVN,
        null AS RAC,
        0.0 AS SDb,
        0.0 AS SCr,
        null AS RAC2,
        null AS RAC3,
        null AS RAC4,
        null AS RAC5,
        0.0 AS QV,
        null AS ZNR

    FROM
    (
        SELECT 
            T1.ClId,
            T1.DocTyp2,
            SUM(T1.Summ) AS Summ,
            SUM(T1.PVN) AS PVN
        FROM
        (
            SELECT 
                OPSd.id AS did, 
                OPSd.ClId AS ClId,
                OPSd.DocTyp AS DocTyp1,
                AcPVN.pz1 AS DocTyp2,
                OPS.AC25 AS RAC5,
                OPS.Summ AS Summ,
                0.00 AS PVN
            FROM
                OPSd INNER JOIN OPS ON OPSd.id = OPS.DocId
                LEFT JOIN AcPVN ON OPS.AC25 = AcPVN.id
            WHERE
                OPSd.Dete BETWEEN :psd AND :ped AND
                AcPVN.pz3 IN ('71', '72') 

        ) AS T1

        GROUP BY T1.ClId, T1.DocTyp2

    ) AS T2
        LEFT JOIN Persons ON T2.ClId = Persons.ClId

    WHERE 
        T2.Summ <> 0.00 AND
        T2.DocTyp2 IS NOT NULL


    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_PVN_52(
  PSD DATE,
  PED DATE,
  RG1 MONEY,
  RG2 MONEY)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
-- PVN piel 1.2 - no ES saÅ†emtÄs preces, pakalpojumi
    
    DELETE FROM ttemp_pvn1 WHERE Did IS NOT NULL;

    INSERT INTO ttemp_pvn1(
        did, clid, doctyp1, doctyp2, doctypc,
        rac5, summ, pvn, summc, cur)
    SELECT
        did, clid, doctyp1, doctyp2, doctypc,
        rac5, summ, pvn, summc, cur
    FROM SP_REP_PVN_51(:PSD, :PED, :RG1, :RG2);

    FOR SELECT
        gen_id(GEN_ROPS1A_ID, 1) as ID,
        current_connection as SPID,
        T4.did,
        CASE
            WHEN OPSd.DT2 IS NULL
            THEN OPSd.Dete
            ELSE OPSd.DT2
            END AS Dete,
        null AS nrx,
        null AS DocTyp,
        DocTyp.pvnpaz AS DocTyp1,
        T4.DocTyp2 AS DocTyp2,
        OPSd.DocSt,
        OPSd.DocNr,
        OPSd.clid AS clid,
        null AS clid2,
        Persons.Name AS Name,
        null AS Name2,
        Persons.PVNRegNr AS RegNr,
        null AS RegNr2,
        0.0 AS b0,
        null AS descr,
        null AS descr2,
        null AS AC1,
        null AS AC2,
        null AS SAC1,
        null AS SAC2,
        T4.SummC AS SummC,
        T4.Curr AS Cur,
        T4.Summ AS Summ,
        T4.PVN AS PVN,
        null AS RAC,
        0.0 AS SDb,
        0.0 AS SCr,
        null AS RAC2,
        null AS RAC3,
        null AS RAC4,
        null AS RAC5,
        0.0 AS QV,
        OPSd.znr AS ZNR

    FROM
    (
        SELECT
            T2.did AS did,
            T2.ClId AS ClId,
            T2.DocTyp2 AS DocTyp2,
            T2.Summ AS Summ,
            T2.PVN AS PVN,
            T2.SummC AS SummC,
            T2.Cur AS Curr

        FROM ttemp_pvn1 AS T2

    ) AS T4 

        LEFT JOIN OPSd ON T4.did = OPSd.id
        LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
        LEFT JOIN Persons ON T4.ClId = Persons.ClId

    ORDER BY OPSd.Dete


    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_PVN_CHECK_01(
  PSD DATE,
  PED DATE,
  RG1 MONEY,
  LIKME MONEY)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
-- PVN summu kontrole izdevumiem
    
    FOR SELECT
        gen_id(GEN_ROPS1A_ID, 1) as ID,
        current_connection as SPID,
        T4.did,
        OPSd.Dete AS Dete,
        null AS nrx,
        null AS DocTyp,
        DocTyp.pvnpaz AS DocTyp1,
        T4.DocTyp2 AS DocTyp2,
        OPSd.DocSt,
        OPSd.DocNr,
        OPSd.clid AS clid,
        null AS clid2,
        Persons.Name AS Name,
        null AS Name2,
        Persons.PVNRegNr AS RegNr,
        null AS RegNr2,
        0.0 AS b0,
        null AS descr,
        null AS descr2,
        null AS AC1,
        null AS AC2,
        null AS SAC1,
        null AS SAC2,
        0.0 AS SummC,
        'EUR' AS Cur,
        T4.Summ AS Summ,
        T4.PVN AS PVN,
        null AS RAC,
        0.0 AS SDb,
        0.0 AS SCr,
        null AS RAC2,
        null AS RAC3,
        null AS RAC4,
        null AS RAC5,
        0.0 AS QV,
        OPSd.znr AS ZNR

    FROM
    (
        SELECT
            did, clid, doctyp1, doctyp2, doctypc,
            rac5, summ, pvn, summc, cur
        FROM SP_REP_PVN_21(:PSD, :PED, 0.0, 0.0)
        WHERE ABS(ABS(summ * :LIKME) - ABS(pvn)) >= :RG1

    ) AS T4 

        LEFT JOIN OPSd ON T4.did = OPSd.id
        LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
        LEFT JOIN Persons ON T4.ClId = Persons.ClId

    ORDER BY OPSd.Dete


    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_PVN_CHECK_02(
  PSD DATE,
  PED DATE,
  RG1 MONEY,
  LIKME MONEY)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
-- PVN summu kontrole ienemumiem
    
    FOR SELECT
        gen_id(GEN_ROPS1A_ID, 1) as ID,
        current_connection as SPID,
        T4.did,
        OPSd.Dete AS Dete,
        null AS nrx,
        null AS DocTyp,
        DocTyp.pvnpaz AS DocTyp1,
        T4.DocTyp2 AS DocTyp2,
        OPSd.DocSt,
        OPSd.DocNr,
        OPSd.clid AS clid,
        null AS clid2,
        Persons.Name AS Name,
        null AS Name2,
        Persons.PVNRegNr AS RegNr,
        null AS RegNr2,
        0.0 AS b0,
        null AS descr,
        null AS descr2,
        null AS AC1,
        null AS AC2,
        null AS SAC1,
        null AS SAC2,
        0.0 AS SummC,
        'EUR' AS Cur,
        T4.Summ AS Summ,
        T4.PVN AS PVN,
        null AS RAC,
        0.0 AS SDb,
        0.0 AS SCr,
        null AS RAC2,
        null AS RAC3,
        null AS RAC4,
        null AS RAC5,
        0.0 AS QV,
        OPSd.znr AS ZNR

    FROM
    (
        SELECT
            did, clid, doctyp1, doctyp2, doctypc,
            rac5, summ, pvn, summc, cur
        FROM SP_REP_PVN_31(:PSD, :PED, 0.0, 0.0)
        WHERE ABS(ABS(summ * :LIKME) - ABS(pvn)) >= :RG1

    ) AS T4 

        LEFT JOIN OPSd ON T4.did = OPSd.id
        LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
        LEFT JOIN Persons ON T4.ClId = Persons.ClId

    ORDER BY OPSd.Dete


    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_PVNZ_01(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID TYPE OF COLUMN TREPPVNZ1.ID,
  SPID TYPE OF COLUMN TREPPVNZ1.SPID,
  DID TYPE OF COLUMN TREPPVNZ1.DID,
  RID TYPE OF COLUMN TREPPVNZ1.RID,
  DETE TYPE OF COLUMN TREPPVNZ1.DETE,
  NRX TYPE OF COLUMN TREPPVNZ1.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN TREPPVNZ1.DOCTYP /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN TREPPVNZ1.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN TREPPVNZ1.DOCNR /* COLLATE UTF8 - default */,
  DOCSTR TYPE OF COLUMN TREPPVNZ1.DOCSTR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN TREPPVNZ1.CLID /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN TREPPVNZ1.NAME /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN TREPPVNZ1.REGNR /* COLLATE UTF8 - default */,
  DESCR TYPE OF COLUMN TREPPVNZ1.DESCR /* COLLATE UTF8 - default */,
  AA TYPE OF COLUMN TREPPVNZ1.AA,
  A8 TYPE OF COLUMN TREPPVNZ1.A8,
  A9 TYPE OF COLUMN TREPPVNZ1.A9,
  A10 TYPE OF COLUMN TREPPVNZ1.A10,
  A11 TYPE OF COLUMN TREPPVNZ1.A11 /* COLLATE UTF8 - default */,
  A12 TYPE OF COLUMN TREPPVNZ1.A12,
  A13 TYPE OF COLUMN TREPPVNZ1.A13,
  A14 TYPE OF COLUMN TREPPVNZ1.A14,
  A15 TYPE OF COLUMN TREPPVNZ1.A15,
  A16 TYPE OF COLUMN TREPPVNZ1.A16,
  A17 TYPE OF COLUMN TREPPVNZ1.A17,
  A18 TYPE OF COLUMN TREPPVNZ1.A18,
  A19 TYPE OF COLUMN TREPPVNZ1.A19,
  A20 TYPE OF COLUMN TREPPVNZ1.A20,
  A21 TYPE OF COLUMN TREPPVNZ1.A21,
  A22 TYPE OF COLUMN TREPPVNZ1.A22,
  A23 TYPE OF COLUMN TREPPVNZ1.A23,
  A24 TYPE OF COLUMN TREPPVNZ1.A24,
  A25 TYPE OF COLUMN TREPPVNZ1.A25,
  A26 TYPE OF COLUMN TREPPVNZ1.A26,
  A27 TYPE OF COLUMN TREPPVNZ1.A27,
  A28 TYPE OF COLUMN TREPPVNZ1.A28,
  A29 TYPE OF COLUMN TREPPVNZ1.A29,
  A30 TYPE OF COLUMN TREPPVNZ1.A30,
  A31 TYPE OF COLUMN TREPPVNZ1.A31)
AS
declare variable a23a type of column TREPPVNZ1.A23;
    declare variable xrid integer;
    declare variable xdt2 date;

begin
  xrid = 1;

  for select
        gen_id(GEN_TREPDARZ1_ID, 1) AS id,
        current_connection AS spid,
        TD1.ID AS did,
        0 AS rid,
        MAX(TD1.Dete) AS Dete,
        MAX(TD1.ZNR) AS NrX,
        MAX(DocTyp.id1) AS DocTyp,
        MAX(TD1.DocSt) AS DocSt,
        MAX(TD1.DocNr) AS DocNr,
        NULL AS docstr,
        MAX(TD1.clid) AS clid,
        MAX(Persons.name) AS Name,
        MAX(Persons.pvnregnr) AS RegNr,
        MAX(TD1.descr) AS Descr,
        0 AS aa,

        SUM(
            CASE WHEN TP11.PZ2 = 8 THEN -TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 8 THEN TO1.Summ ELSE 0.00 END
            ) AS A8,
        SUM(
            CASE WHEN TP11.PZ2 = 9 THEN -TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 9 THEN TO1.Summ ELSE 0.00 END
            ) AS A9,
        SUM(
            CASE WHEN (TP11.PZ2 >= 100) AND (TP11.PZ2 < 110) THEN -TO1.Summ ELSE 0.00 END +
            CASE WHEN (TP12.PZ2 >= 100) AND (TP12.PZ2 < 110) THEN TO1.Summ ELSE 0.00 END
            ) AS A10,

        MAX(
            CASE WHEN (TP11.PZ2 >= 100) AND (TP11.PZ2 < 110)
            THEN TP11.PZ1
            ELSE
                CASE WHEN (TP12.PZ2 >= 100) AND (TP12.PZ2 < 110) THEN TP12.PZ1 ELSE NULL END
            END
            ) AS A11,

        SUM(
            CASE WHEN TP11.PZ2 = 12 THEN -TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 12 THEN TO1.Summ ELSE 0.00 END
            ) AS A12,

        SUM(
            CASE WHEN TP11.PZ2 = 13 THEN -TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 13 THEN TO1.Summ ELSE 0.00 END
            ) AS A13,

        SUM(
            CASE WHEN TP11.PZ2 = 14 THEN -TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 14 THEN TO1.Summ ELSE 0.00 END
            ) AS A14,

        SUM(
            CASE WHEN TP11.PZ2 = 15 THEN -TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 15 THEN TO1.Summ ELSE 0.00 END
            ) AS A15,
        SUM(
            CASE WHEN TP11.PZ2 = 16 THEN -TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 16 THEN TO1.Summ ELSE 0.00 END +

            CASE WHEN TP11.PZ2 = 201 THEN TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 201 THEN -TO1.Summ ELSE 0.00 END
            ) AS A16,
        SUM(
            CASE WHEN TP11.PZ2 = 17 THEN -TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 17 THEN TO1.Summ ELSE 0.00 END
            ) AS A17,
        SUM(
            CASE WHEN TP11.PZ2 = 18 THEN -TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 18 THEN TO1.Summ ELSE 0.00 END
            ) AS A18,
        SUM(
            CASE WHEN TP11.PZ2 = 19 THEN -TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 19 THEN TO1.Summ ELSE 0.00 END
            ) AS A19,
        SUM(
            CASE WHEN TP11.PZ2 = 20 THEN -TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 20 THEN TO1.Summ ELSE 0.00 END
            ) AS A20,
    
        0 AS a21,

        SUM(
            CASE WHEN TP11.PZ2 = 22 THEN TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 22 THEN -TO1.Summ ELSE 0.00 END
            ) AS A22,
        SUM(
            CASE WHEN TP11.PZ2 = 23 THEN TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 23 THEN -TO1.Summ ELSE 0.00 END
            ) AS A23,


        SUM(
            CASE WHEN TO1.AC15 IS NULL AND TO1.AC25 IS NULL THEN TO1.Summ ELSE 0.00 END
            ) AS A23a,

        SUM(
            CASE WHEN TP11.PZ2 = 24 THEN TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 24 THEN -TO1.Summ ELSE 0.00 END
            ) AS A24,
        SUM(
            CASE WHEN TP11.PZ2 = 25 THEN TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 25 THEN -TO1.Summ ELSE 0.00 END
            ) AS A25,
        SUM(
            CASE WHEN TP11.PZ2 = 26 THEN TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 26 THEN -TO1.Summ ELSE 0.00 END
            ) AS A26,
        SUM(
            CASE WHEN TP11.PZ2 = 27 THEN TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 27 THEN -TO1.Summ ELSE 0.00 END +

            CASE WHEN TP11.PZ2 = 201 THEN TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 201 THEN -TO1.Summ ELSE 0.00 END

            ) AS A27,
        SUM(
            CASE WHEN TP11.PZ2 = 28 THEN TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 28 THEN -TO1.Summ ELSE 0.00 END
            ) AS A28,
        SUM(
            CASE WHEN TP11.PZ2 = 29 THEN TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 29 THEN -TO1.Summ ELSE 0.00 END
            ) AS A29,
        SUM(
            CASE WHEN TP11.PZ2 = 30 THEN TO1.Summ ELSE 0.00 END +
            CASE WHEN TP12.PZ2 = 30 THEN -TO1.Summ ELSE 0.00 END
            ) AS A30,

        0 AS a31,

        MAX(TD1.DT2) AS DT2

    FROM
        OPSd AS TD1
        JOIN OPS AS TO1 ON TD1.id = TO1.DocId
        LEFT JOIN persons ON TD1.clid = Persons.clid
        LEFT JOIN doctyp ON TD1.doctyp = doctyp.id
        LEFT JOIN ACPvN AS TP11 ON TO1.AC15 = TP11.ID
        LEFT JOIN ACPvN AS TP12 ON TO1.AC25 = TP12.ID
    WHERE
        TD1.Dete BETWEEN :sdt AND :edt AND
        EXISTS
        (
            SELECT TO2.ID
            FROM
                OPS AS TO2
                LEFT JOIN ACPvN AS TP21 ON TO2.AC15 = TP21.ID
                LEFT JOIN ACPvN AS TP22 ON TO2.AC25 = TP22.ID
            WHERE
                (TO2.docid = TD1.ID) AND
                (
                    (TP21.ID IS NOT NULL) AND (TP21.PZ2 <> 0) OR
                    (TP22.ID IS NOT NULL) AND (TP22.PZ2 <> 0)
                )
        )

    GROUP BY DID
    ORDER BY Dete, did

    into :id,
        :spid,
        :did,
        :rid,
        :dete,
        :nrx,
        :doctyp,
        :docst,
        :docnr,
        :docstr,
        :clid,
        :name,
        :regnr,
        :descr,
        :aa,
        :a8,
        :a9,
        :a10,
        :a11,
        :a12,
        :a13,
        :a14,
        :a15,
        :a16,
        :a17,
        :a18,
        :a19,
        :a20,
        :a21,
        :a22,
        :a23,
        :a23a,
        :a24,
        :a25,
        :a26,
        :a27,
        :a28,
        :a29,
        :a30,
        :a31,
        :xdt2
  do
  begin
    rid = xrid;
    xrid = xrid + 1;

    docstr = DocTyp;

    if (docst is not null)
    then
        if (docstr is null)
        then docstr = docst;
        else docstr = docstr || ' ' || docst;

    if (docnr is not null)
    then
        if (docstr is null)
        then docstr = docnr;
        else docstr = docstr || ' ' ||  docnr;

    if (xdt2 is not null)
    then
        if (docstr is null)
        then docstr = xdt2;
        else docstr = docstr || ', ' ||  xdt2;


    if (a27 > 0.0) then
    begin
        a23 = a23 + a23a;
    end
    else
    begin
        a23 = a23 - a23a;
    end

    a21 = a8 + a9 + a10 + a12 + a13 + a14 +
            a15 + a16 + a17 + a18 + a19 + a20;

    a31 = a22 + a23 + a24 + a25 + a26 + a27 +
            a28 + a29 + a30;

    suspend;
  end
end
^

ALTER PROCEDURE SP_REP_SKAIDRA_01(
  SDT DATE,
  EDT DATE,
  PSUMM NUMERIC(14,5),
  PPERTYP VARCHAR(5) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
    FOR SELECT
        gen_id(GEN_ROPS1A_ID, 1) as ID,
        current_connection as SPID,
        0 as did,
        null AS Dete,
        null AS nrx,
        null AS DocTyp,
        null AS DocTyp1,
        null AS DocTyp2,
        null AS DocSt,
        null AS DocNr,
        T2.clid AS clid,
        null AS clid2,
        Persons.Name AS Name,
        null AS Name2,
        Persons.RegNr AS RegNr,
        null AS RegNr2,
        0.0 AS b0,
        null AS descr,
        null AS descr2,
        null AS AC1,
        null AS AC2,
        null AS SAC1,
        null AS SAC2,
        0.0 AS SummC,
        'EUR' AS Cur,
        0.0 AS Summ,
        0.0 AS PVN,
        null AS RAC,
        T2.ADb AS SDb,
        T2.ACr AS SCr,
        null AS RAC2,
        null AS RAC3,
        null AS RAC4,
        null AS RAC5,
        0.0 AS QV,
        0.0 AS ZNR

    FROM
    (
        SELECT ClId, SUM(SDb) AS ADb, SUM(SCr) AS ACr
        FROM
        (
            SELECT 
                OPSd.ClId AS ClId,
                OPS.Summ AS SDb,
                0.00 AS SCr

            FROM 
                OPSd INNER JOIN OPS ON OPSd.id = OPS.DocId
                INNER JOIN Persons ON OPSd.ClId = Persons.ClId
                INNER JOIN AcP21 ON OPS.AC11 = AcP21.AC
            WHERE 
                OPSd.Dete BETWEEN :sdt AND :edt AND
                Persons.TP2 = :ppertyp AND
                AcP21.id1 IN ('KA','CN')

            UNION ALL

            SELECT 
                OPSd.ClId AS ClId,
                0.00 AS SDb,
                OPS.Summ AS SCr

            FROM 
                OPSd INNER JOIN OPS ON OPSd.id = OPS.DocId
                INNER JOIN Persons ON OPSd.ClId = Persons.ClId
                INNER JOIN AcP21 ON OPS.AC21 = AcP21.AC
            WHERE 
                OPSd.Dete BETWEEN :sdt AND :edt AND
                Persons.TP2 = :ppertyp AND
                AcP21.id1 IN ('KA','CN')

        ) AS T1
        GROUP BY ClId

    ) AS T2    
    LEFT JOIN Persons ON T2.ClId = Persons.ClId

    WHERE 
        (ABS(T2.ADb) + ABS(T2.ACr)) >= :psumm
    ORDER BY ClId

    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_REP_SKAIDRA_02(
  SDT DATE,
  EDT DATE,
  PSUMM NUMERIC(14,5),
  PPERTYP VARCHAR(5) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN ROPS1A.ID,
  SPID TYPE OF COLUMN ROPS1A.SPID,
  DID TYPE OF COLUMN ROPS1A.DID,
  DETE TYPE OF COLUMN ROPS1A.DETE,
  NRX TYPE OF COLUMN ROPS1A.NRX /* COLLATE UTF8 - default */,
  DOCTYP TYPE OF COLUMN ROPS1A.DOCTYP /* COLLATE UTF8 - default */,
  DOCTYP1 TYPE OF COLUMN ROPS1A.DOCTYP1 /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN ROPS1A.DOCTYP2 /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN ROPS1A.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN ROPS1A.DOCNR /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN ROPS1A.CLID /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN ROPS1A.CLID2 /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN ROPS1A.NAME /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN ROPS1A.NAME2 /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN ROPS1A.REGNR /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN ROPS1A.REGNR2 /* COLLATE UTF8 - default */,
  B0 TYPE OF COLUMN ROPS1A.B0,
  DESCR TYPE OF COLUMN ROPS1A.DESCR /* COLLATE UTF8 - default */,
  DESCR2 TYPE OF COLUMN ROPS1A.DESCR2 /* COLLATE UTF8 - default */,
  AC1 TYPE OF COLUMN ROPS1A.AC1 /* COLLATE UTF8 - default */,
  AC2 TYPE OF COLUMN ROPS1A.AC2 /* COLLATE UTF8 - default */,
  SAC1 TYPE OF COLUMN ROPS1A.SAC1 /* COLLATE UTF8 - default */,
  SAC2 TYPE OF COLUMN ROPS1A.SAC2 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN ROPS1A.SUMMC,
  CUR TYPE OF COLUMN ROPS1A.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN ROPS1A.SUMM,
  PVN TYPE OF COLUMN ROPS1A.PVN,
  RAC TYPE OF COLUMN ROPS1A.RAC /* COLLATE UTF8 - default */,
  SDB TYPE OF COLUMN ROPS1A.SDB,
  SCR TYPE OF COLUMN ROPS1A.SCR,
  RAC2 TYPE OF COLUMN ROPS1A.RAC2 /* COLLATE UTF8 - default */,
  RAC3 TYPE OF COLUMN ROPS1A.RAC3 /* COLLATE UTF8 - default */,
  RAC4 TYPE OF COLUMN ROPS1A.RAC4 /* COLLATE UTF8 - default */,
  RAC5 TYPE OF COLUMN ROPS1A.RAC5 /* COLLATE UTF8 - default */,
  QV TYPE OF COLUMN ROPS1A.QV,
  ZNR TYPE OF COLUMN ROPS1A.ZNR)
AS
begin
--Skaidras naudas darijumi FP
    FOR SELECT
        gen_id(GEN_ROPS1A_ID, 1) as ID,
        current_connection as SPID,
        0 as did,
        null AS Dete,
        null AS nrx,
        null AS DocTyp,
        null AS DocTyp1,
        null AS DocTyp2,
        null AS DocSt,
        null AS DocNr,
        T2.clid AS clid,
        null AS clid2,
        Persons.Name AS Name,
        null AS Name2,
        Persons.RegNr AS RegNr,
        null AS RegNr2,
        0.0 AS b0,
        null AS descr,
        null AS descr2,
        null AS AC1,
        null AS AC2,
        null AS SAC1,
        null AS SAC2,
        0.0 AS SummC,
        'EUR' AS Cur,
        0.0 AS Summ,
        0.0 AS PVN,
        null AS RAC,
        T2.ADb AS SDb,
        T2.ACr AS SCr,
        null AS RAC2,
        null AS RAC3,
        null AS RAC4,
        null AS RAC5,
        0.0 AS QV,
        0.0 AS ZNR
    FROM
    (
        SELECT ClId, SUM(ADb) AS ADb, SUM(ACr) AS ACr
        FROM
        (
            SELECT did, ClId, SUM(SDb) AS ADb, SUM(SCr) AS ACr
            FROM
            (
                SELECT 
                    OPSd.id AS did,
                    OPSd.ClId AS ClId,
                    OPS.Summ AS SDb,
                    0.00 AS SCr

                FROM 
                    OPSd INNER JOIN OPS ON OPSd.id = OPS.DocId
                    INNER JOIN Persons ON OPSd.ClId = Persons.ClId
                    INNER JOIN AcP21 ON OPS.AC11 = AcP21.AC
                WHERE 
                    OPSd.Dete BETWEEN :sdt AND :edt AND
                    Persons.TP2 = :ppertyp AND
                    AcP21.id1 IN ('KA','CN')

                UNION ALL

                SELECT 
                    OPSd.id AS did,
                    OPSd.ClId AS ClId,
                    0.00 AS SDb,
                    OPS.Summ AS SCr

                FROM 
                    OPSd INNER JOIN OPS ON OPSd.id = OPS.DocId
                    INNER JOIN Persons ON OPSd.ClId = Persons.ClId
                    INNER JOIN AcP21 ON OPS.AC21 = AcP21.AC
                WHERE 
                    OPSd.Dete BETWEEN :sdt AND :edt AND
                    Persons.TP2 = :ppertyp AND
                    AcP21.id1 IN ('KA','CN')

            ) AS T1
            GROUP BY did, ClId
        ) AS T12

        WHERE (ABS(T12.ACr) + ABS(T12.ADb)) >= :psumm
        GROUP BY ClId

    ) AS T2    
    LEFT JOIN Persons ON T2.ClId = Persons.ClId

    ORDER BY ClId
    

    into
        :id, :spid, :did, :DETE, :nrx,
        :doctyp, :doctyp1, :doctyp2, :docst, :docnr,
        :clid, :clid2, :name, :name2, :regnr, :regnr2,
        :b0, :descr, :descr2, :ac1, :ac2, :sac1,:sac2,
        :summc, :cur, :summ, :pvn, :rac, :sdb, :scr,
        :rac2, :rac3, :rac4, :rac5, :qv, :znr
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_VWOPS_FILTER_AND(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */,
  PAC11 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC12 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC13 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC14 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC15 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC21 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC22 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC23 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC24 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC25 VARCHAR(5) /* COLLATE UTF8 - default */,
  PDOCGR VARCHAR(10) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN OPS.ID,
  DOCID TYPE OF COLUMN OPS.DOCID,
  DETE TYPE OF COLUMN OPSD.DETE,
  NRX TYPE OF COLUMN OPSD.NRX /* COLLATE UTF8 - default */,
  ZNR TYPE OF COLUMN OPSD.ZNR,
  DOCTYP TYPE OF COLUMN OPSD.DOCTYP /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN OPSD.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN OPSD.DOCNR /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN DOCTYP.ID1 /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN OPSD.CLID /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN PERSONS.NAME /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN PERSONS.REGNR /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN OPSD.CLID2 /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN PERSONS.NAME /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN PERSONS.REGNR /* COLLATE UTF8 - default */,
  DESCR TYPE OF COLUMN OPSD.DESCR /* COLLATE UTF8 - default */,
  AC11 TYPE OF COLUMN OPS.AC11 /* COLLATE UTF8 - default */,
  AC12 TYPE OF COLUMN OPS.AC12 /* COLLATE UTF8 - default */,
  AC13 TYPE OF COLUMN OPS.AC13 /* COLLATE UTF8 - default */,
  AC14 TYPE OF COLUMN OPS.AC14 /* COLLATE UTF8 - default */,
  AC15 TYPE OF COLUMN OPS.AC15 /* COLLATE UTF8 - default */,
  AC21 TYPE OF COLUMN OPS.AC21 /* COLLATE UTF8 - default */,
  AC22 TYPE OF COLUMN OPS.AC22 /* COLLATE UTF8 - default */,
  AC23 TYPE OF COLUMN OPS.AC23 /* COLLATE UTF8 - default */,
  AC24 TYPE OF COLUMN OPS.AC24 /* COLLATE UTF8 - default */,
  AC25 TYPE OF COLUMN OPS.AC25 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN OPS.SUMMC,
  CUR TYPE OF COLUMN OPS.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN OPS.SUMM,
  QV TYPE OF COLUMN OPS.QV,
  DESCR2 TYPE OF COLUMN OPS.DESCR /* COLLATE UTF8 - default */)
AS
begin

    for select
        ops.id,
        ops.docid,
        opsd.DETE,
        opsd.nrx,
        opsd.znr,
        opsd.doctyp,
        opsd.docst,
        opsd.docnr,
        DOCTYP.id1 as DOCTYP2,
        opsd.clid,
        persons.name,
        persons.regnr,
        opsd.clid2,
        Persons2.name as NAME2,
        Persons2.regnr AS regnr2,
        opsd.descr,

        ops.ac11,
        ops.ac12,
        ops.ac13,
        ops.ac14,
        ops.ac15,
        ops.ac21,
        ops.ac22,
        ops.ac23,
        ops.ac24,
        ops.ac25,
        ops.summc,
        ops.cur,
        ops.summ,
        ops.qv,
        ops.descr AS descr2

    FROM
        OPSd JOIN OPS ON OPSd.id = OPS.DocId
        LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
        LEFT JOIN Persons ON OPSd.ClId = Persons.ClId
        LEFT JOIN Persons AS Persons2 ON OPSd.ClId2 = Persons2.ClId

    WHERE
        (:pdate1 IS NULL OR opsd.DETE >= :pdate1) AND
        (:pdate2 IS NULL OR opsd.DETE <= :pdate2) AND
        (:pclid IS NULL OR opsd.ClId = :pclid OR ClId2 = :pclid) AND
        (:ptext IS NULL OR OPSd.Descr LIKE :ptext) AND
        (
            :PDOCGR IS NULL OR EXISTS(
                SELECT DTA.ID
                FROM doctypb AS DTB inner join doctypa AS DTA on DTB.ida = DTA.id
                WHERE DTB.ID = OPSD.doctyp AND DTA.ID = :PDOCGR
            )
        )
        AND
        (
            (:pac11 IS NULL OR OPS.AC11 LIKE :pac11) AND
            (:pac12 IS NULL OR OPS.AC12 LIKE :pac12) AND
            (:pac13 IS NULL OR OPS.AC13 LIKE :pac13) AND
            (:pac14 IS NULL OR OPS.AC14 LIKE :pac14) AND
            (:pac15 IS NULL OR OPS.AC15 LIKE :pac15)
        )
        AND
        (
            (:pac21 IS NULL OR OPS.AC21 LIKE :pac21) AND
            (:pac22 IS NULL OR OPS.AC22 LIKE :pac22) AND
            (:pac23 IS NULL OR OPS.AC23 LIKE :pac23) AND
            (:pac24 IS NULL OR OPS.AC24 LIKE :pac24) AND
            (:pac25 IS NULL OR OPS.AC25 LIKE :pac25)
        )
        ORDER BY DETE, opsd.id, ops.id
        into
            :ID, :docid, :DETE, :nrx, :znr,
            :doctyp, :docst, :docnr, :doctyp2,
            :clid, :name, :regnr,
            :clid2, :name2, :regnr2,
            :descr,
            :ac11, :ac12, :ac13, :ac14, :ac15,
            :ac21, :ac22, :ac23, :ac24, :ac25,
            :summc, :cur, :summ, :qv, :descr2
        do
        begin
            suspend;
        end
end
^

ALTER PROCEDURE SP_VWOPS_FILTER_OR(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50) /* COLLATE UTF8 - default */,
  PCLID VARCHAR(15) /* COLLATE UTF8 - default */,
  PAC11 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC12 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC13 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC14 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC15 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC21 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC22 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC23 VARCHAR(5) /* COLLATE UTF8 - default */,
  PAC24 VARCHAR(8) /* COLLATE UTF8 - default */,
  PAC25 VARCHAR(5) /* COLLATE UTF8 - default */,
  PDOCGR VARCHAR(10) /* COLLATE UTF8 - default */)
RETURNS (
  ID TYPE OF COLUMN OPS.ID,
  DOCID TYPE OF COLUMN OPS.DOCID,
  DETE TYPE OF COLUMN OPSD.DETE,
  NRX TYPE OF COLUMN OPSD.NRX /* COLLATE UTF8 - default */,
  ZNR TYPE OF COLUMN OPSD.ZNR,
  DOCTYP TYPE OF COLUMN OPSD.DOCTYP /* COLLATE UTF8 - default */,
  DOCST TYPE OF COLUMN OPSD.DOCST /* COLLATE UTF8 - default */,
  DOCNR TYPE OF COLUMN OPSD.DOCNR /* COLLATE UTF8 - default */,
  DOCTYP2 TYPE OF COLUMN DOCTYP.ID1 /* COLLATE UTF8 - default */,
  CLID TYPE OF COLUMN OPSD.CLID /* COLLATE UTF8 - default */,
  NAME TYPE OF COLUMN PERSONS.NAME /* COLLATE UTF8 - default */,
  REGNR TYPE OF COLUMN PERSONS.REGNR /* COLLATE UTF8 - default */,
  CLID2 TYPE OF COLUMN OPSD.CLID2 /* COLLATE UTF8 - default */,
  NAME2 TYPE OF COLUMN PERSONS.NAME /* COLLATE UTF8 - default */,
  REGNR2 TYPE OF COLUMN PERSONS.REGNR /* COLLATE UTF8 - default */,
  DESCR TYPE OF COLUMN OPSD.DESCR /* COLLATE UTF8 - default */,
  AC11 TYPE OF COLUMN OPS.AC11 /* COLLATE UTF8 - default */,
  AC12 TYPE OF COLUMN OPS.AC12 /* COLLATE UTF8 - default */,
  AC13 TYPE OF COLUMN OPS.AC13 /* COLLATE UTF8 - default */,
  AC14 TYPE OF COLUMN OPS.AC14 /* COLLATE UTF8 - default */,
  AC15 TYPE OF COLUMN OPS.AC15 /* COLLATE UTF8 - default */,
  AC21 TYPE OF COLUMN OPS.AC21 /* COLLATE UTF8 - default */,
  AC22 TYPE OF COLUMN OPS.AC22 /* COLLATE UTF8 - default */,
  AC23 TYPE OF COLUMN OPS.AC23 /* COLLATE UTF8 - default */,
  AC24 TYPE OF COLUMN OPS.AC24 /* COLLATE UTF8 - default */,
  AC25 TYPE OF COLUMN OPS.AC25 /* COLLATE UTF8 - default */,
  SUMMC TYPE OF COLUMN OPS.SUMMC,
  CUR TYPE OF COLUMN OPS.CUR /* COLLATE UTF8 - default */,
  SUMM TYPE OF COLUMN OPS.SUMM,
  QV TYPE OF COLUMN OPS.QV,
  DESCR2 TYPE OF COLUMN OPS.DESCR /* COLLATE UTF8 - default */)
AS
begin

    for select
        ops.id,
        ops.docid,
        opsd.DETE,
        opsd.nrx,
        opsd.znr,
        opsd.doctyp,
        opsd.docst,
        opsd.docnr,
        DOCTYP.id1 as DOCTYP2,
        opsd.clid,
        persons.name,
        persons.regnr,
        opsd.clid2,
        Persons2.name as NAME2,
        Persons2.regnr AS regnr2,
        opsd.descr,

        ops.ac11,
        ops.ac12,
        ops.ac13,
        ops.ac14,
        ops.ac15,
        ops.ac21,
        ops.ac22,
        ops.ac23,
        ops.ac24,
        ops.ac25,
        ops.summc,
        ops.cur,
        ops.summ,
        ops.qv,
        ops.descr AS descr2

    FROM
        OPSd JOIN OPS ON OPSd.id = OPS.DocId
        LEFT JOIN DocTyp ON OPSd.DocTyp = DocTyp.id
        LEFT JOIN Persons ON OPSd.ClId = Persons.ClId
        LEFT JOIN Persons AS Persons2 ON OPSd.ClId2 = Persons2.ClId

    WHERE
        (:pdate1 IS NULL OR opsd.DETE >= :pdate1) AND
        (:pdate2 IS NULL OR opsd.DETE <= :pdate2) AND
        (:pclid IS NULL OR opsd.ClId = :pclid OR ClId2 = :pclid) AND
        (:ptext IS NULL OR OPSd.Descr LIKE :ptext) AND
        (
            :PDOCGR IS NULL OR EXISTS(
                SELECT DTA.ID
                FROM doctypb AS DTB inner join doctypa AS DTA on DTB.ida = DTA.id
                WHERE DTB.ID = OPSD.doctyp AND DTA.ID = :PDOCGR
            )
        ) AND
        (
            (
                (:pac11 IS NULL OR OPS.AC11 LIKE :pac11) AND
                (:pac12 IS NULL OR OPS.AC12 LIKE :pac12) AND
                (:pac13 IS NULL OR OPS.AC13 LIKE :pac13) AND
                (:pac14 IS NULL OR OPS.AC14 LIKE :pac14) AND
                (:pac15 IS NULL OR OPS.AC15 LIKE :pac15)
            )
            OR
            (
                (:pac21 IS NULL OR OPS.AC21 LIKE :pac21) AND
                (:pac22 IS NULL OR OPS.AC22 LIKE :pac22) AND
                (:pac23 IS NULL OR OPS.AC23 LIKE :pac23) AND
                (:pac24 IS NULL OR OPS.AC24 LIKE :pac24) AND
                (:pac25 IS NULL OR OPS.AC25 LIKE :pac25)
            )
        )
        ORDER BY DETE, opsd.id, ops.id
        into
            :ID, :docid, :DETE, :nrx, :znr,
            :doctyp, :docst, :docnr, :doctyp2,
            :clid, :name, :regnr,
            :clid2, :name2, :regnr2,
            :descr,
            :ac11, :ac12, :ac13, :ac14, :ac15,
            :ac21, :ac22, :ac23, :ac24, :ac25,
            :summc, :cur, :summ, :qv, :descr2
        do
        begin
            suspend;
        end
end
^


SET TERM ; ^


UPDATE Params
SET PVALUE = '091'
WHERE PNAME = 'version';
